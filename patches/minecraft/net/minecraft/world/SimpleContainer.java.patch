--- a/net/minecraft/world/SimpleContainer.java
+++ b/net/minecraft/world/SimpleContainer.java
@@ -15,11 +_,62 @@
 
 public class SimpleContainer implements Container, StackedContentsCompatible {
    private final int size;
-   private final NonNullList<ItemStack> items;
+   public final NonNullList<ItemStack> items; //Magma - private -> public
    @Nullable
    private List<ContainerListener> listeners;
 
+   // CraftBukkit start - add fields and methods
+   public List<org.bukkit.entity.HumanEntity> transaction = new java.util.ArrayList<org.bukkit.entity.HumanEntity>();
+   private int maxStack = MAX_STACK;
+   protected org.bukkit.inventory.InventoryHolder bukkitOwner;
+
+   public List<ItemStack> getContents() {
+      return this.items;
+   }
+
+   public void onOpen(org.bukkit.craftbukkit.v1_18_R2.entity.CraftHumanEntity who) {
+      transaction.add(who);
+   }
+
+   public void onClose(org.bukkit.craftbukkit.v1_18_R2.entity.CraftHumanEntity who) {
+      transaction.remove(who);
+   }
+
+   public List<org.bukkit.entity.HumanEntity> getViewers() {
+      return transaction;
+   }
+
+   public org.bukkit.inventory.InventoryHolder getOwner() {
+      return bukkitOwner;
+   }
+
+   @Override
+   public int getMaxStackSize() {
+      return maxStack;
+   }
+
+   public void setMaxStackSize(int size) {
+      maxStack = size;
+   }
+
+   @Override
+   public org.bukkit.Location getLocation() {
+      return null;
+   }
+
+
+   public SimpleContainer(SimpleContainer original) {
+      this(original.size);
+      java.util.stream.IntStream.range(0, original.size).forEach(i -> this.items.set(i, original.items.get(i).copy()));
+   }
+
    public SimpleContainer(int p_19150_) {
+      this(p_19150_, null);
+   }
+
+   public SimpleContainer(int p_19150_, org.bukkit.inventory.InventoryHolder owner) {
+      this.bukkitOwner = owner;
+      // CraftBukkit end
       this.size = p_19150_;
       this.items = NonNullList.withSize(p_19150_, ItemStack.EMPTY);
    }
