--- a/net/minecraft/world/entity/Mob.java
+++ b/net/minecraft/world/entity/Mob.java
@@ -90,6 +_,7 @@
    private final BodyRotationControl bodyRotationControl;
    protected PathNavigation navigation;
    public GoalSelector goalSelector;
+   @Nullable public net.minecraft.world.entity.ai.goal.FloatGoal goalFloat; // Paper
    public GoalSelector targetSelector;
    @Nullable
    private LivingEntity target;
@@ -112,6 +_,8 @@
    private BlockPos restrictCenter = BlockPos.ZERO;
    private float restrictRadius = -1.0F;
 
+   public boolean aware = true; // CraftBukkit
+
    protected Mob(EntityType<? extends Mob> p_21368_, Level p_21369_) {
       super(p_21368_, p_21369_);
       this.goalSelector = new GoalSelector(p_21369_.getProfilerSupplier());
@@ -127,8 +_,13 @@
       if (p_21369_ != null && !p_21369_.isClientSide) {
          this.registerGoals();
       }
+   }
 
+   // CraftBukkit start
+   public void setPersistenceRequired(boolean persistenceRequired) {
+      this.persistenceRequired = persistenceRequired;
    }
+   // CraftBukkit end
 
    protected void registerGoals() {
    }
@@ -205,7 +_,42 @@
    }
 
    public void setTarget(@Nullable LivingEntity p_21544_) {
+      // CraftBukkit start
+      setTarget(p_21544_, org.bukkit.event.entity.EntityTargetEvent.TargetReason.UNKNOWN, true);
+   }
+
+   public boolean setTarget(@Nullable LivingEntity p_21544_, org.bukkit.event.entity.EntityTargetEvent.TargetReason reason, boolean fireEvent) {
+      if(getTarget() == p_21544_) return false;
+      if(fireEvent) {
+         if (reason == org.bukkit.event.entity.EntityTargetEvent.TargetReason.UNKNOWN && getTarget() != null && p_21544_ == null) {
+            reason = getTarget().isAlive() ? org.bukkit.event.entity.EntityTargetEvent.TargetReason.FORGOT_TARGET : org.bukkit.event.entity.EntityTargetEvent.TargetReason.TARGET_DIED;
+         }
+         if (reason == org.bukkit.event.entity.EntityTargetEvent.TargetReason.UNKNOWN) {
+            net.minecraftforge.event.entity.living.LivingChangeTargetEvent changeTargetEvent = net.minecraftforge.common.ForgeHooks.onLivingChangeTarget(this, p_21544_, net.minecraftforge.event.entity.living.LivingChangeTargetEvent.LivingTargetType.MOB_TARGET);
+            if(!changeTargetEvent.isCanceled()) {
+               p_21544_ = changeTargetEvent.getNewTarget();
+               net.minecraftforge.common.ForgeHooks.onLivingSetAttackTarget(this, p_21544_); // TODO: Remove in 1.20
+            }
+         }
+         org.bukkit.craftbukkit.v1_18_R2.entity.CraftLivingEntity craftLivingEntity = null;
+         if (p_21544_ != null) {
+            craftLivingEntity = (org.bukkit.craftbukkit.v1_18_R2.entity.CraftLivingEntity) p_21544_.getBukkitEntity();
+         }
+         org.bukkit.event.entity.EntityTargetLivingEntityEvent event = new org.bukkit.event.entity.EntityTargetLivingEntityEvent(this.getBukkitEntity(), craftLivingEntity, reason);
+         level.getCraftServer().getPluginManager().callEvent(event);
+         if (event.isCancelled()) {
+            return false;
+         }
+         if (event.getTarget() != null) {
+            p_21544_ = ((org.bukkit.craftbukkit.v1_18_R2.entity.CraftLivingEntity) event.getTarget()).getHandle();
+         } else {
+            p_21544_ = null;
+         }
+      }
+
       this.target = p_21544_;
+      return true;
+      // CraftBukkit end
    }
 
    public boolean canAttackType(EntityType<?> p_21399_) {
@@ -402,15 +_,25 @@
          p_21484_.putBoolean("NoAI", this.isNoAi());
       }
 
+      p_21484_.putBoolean("Bukkit.Aware", this.aware); // CraftBukkit
    }
 
    public void readAdditionalSaveData(CompoundTag p_21450_) {
       super.readAdditionalSaveData(p_21450_);
+
+      // CraftBukkit start - If looting or persistence is false only use it if it was set after we started using it
       if (p_21450_.contains("CanPickUpLoot", 1)) {
-         this.setCanPickUpLoot(p_21450_.getBoolean("CanPickUpLoot"));
+         boolean data = p_21450_.getBoolean("CanPickUpLoot");
+         if (isLevelAtLeast(p_21450_, 1) || data) {
+            this.setCanPickUpLoot(data);
+         }
       }
 
-      this.persistenceRequired = p_21450_.getBoolean("PersistenceRequired");
+      boolean data = p_21450_.getBoolean("PersistenceRequired");
+      if (isLevelAtLeast(p_21450_, 1) || data) {
+         this.persistenceRequired = data;
+      }
+      // CraftBukkit end
       if (p_21450_.contains("ArmorItems", 9)) {
          ListTag listtag = p_21450_.getList("ArmorItems", 10);
 
@@ -454,6 +_,11 @@
       }
 
       this.setNoAi(p_21450_.getBoolean("NoAI"));
+      // CraftBukkit start
+      if (p_21450_.contains("Bukkit.Aware")) {
+         this.aware = p_21450_.getBoolean("Bukkit.Aware");
+      }
+      // CraftBukkit end
    }
 
    protected void dropFromLootTable(DamageSource p_21389_, boolean p_21390_) {
@@ -493,7 +_,7 @@
    public void aiStep() {
       super.aiStep();
       this.level.getProfiler().push("looting");
-      if (!this.level.isClientSide && this.canPickUpLoot() && this.isAlive() && !this.dead && this.level.getGameRules().getBoolean(GameRules.RULE_MOBGRIEFING)) {
+      if (!this.level.isClientSide && this.canPickUpLoot() && this.isAlive() && !this.dead && net.minecraftforge.event.ForgeEventFactory.getMobGriefingEvent(this.level, this)) {
          for(ItemEntity itementity : this.level.getEntitiesOfClass(ItemEntity.class, this.getBoundingBox().inflate(1.0D, 0.0D, 1.0D))) {
             if (!itementity.isRemoved() && !itementity.getItem().isEmpty() && !itementity.hasPickUpDelay() && this.wantsToPickUp(itementity.getItem())) {
                this.pickUpItem(itementity);
@@ -506,7 +_,7 @@
 
    protected void pickUpItem(ItemEntity p_21471_) {
       ItemStack itemstack = p_21471_.getItem();
-      if (this.equipItemIfPossible(itemstack)) {
+      if (this.equipItemIfPossible(itemstack, p_21471_)) { // CraftBukkit - add item
          this.onItemPickup(p_21471_);
          this.take(p_21471_, itemstack.getCount());
          p_21471_.discard();
@@ -515,13 +_,27 @@
    }
 
    public boolean equipItemIfPossible(ItemStack p_21541_) {
+      // CraftBukkit start - add item
+      return this.equipItemIfPossible(p_21541_, null);
+   }
+
+   public boolean equipItemIfPossible(ItemStack p_21541_, ItemEntity entityitem) {
+      // CraftBukkit end
       EquipmentSlot equipmentslot = getEquipmentSlotForItem(p_21541_);
       ItemStack itemstack = this.getItemBySlot(equipmentslot);
       boolean flag = this.canReplaceCurrentItem(p_21541_, itemstack);
-      if (flag && this.canHoldItem(p_21541_)) {
+      // CraftBukkit start
+      boolean canPickup = flag && this.canHoldItem(itemstack);
+      if (entityitem != null) {
+         canPickup = !org.bukkit.craftbukkit.v1_18_R2.event.CraftEventFactory.callEntityPickupItemEvent(this, entityitem, 0, !canPickup).isCancelled();
+      }
+      if (canPickup) {
+         // CraftBukkit end
          double d0 = (double)this.getEquipmentDropChance(equipmentslot);
          if (!itemstack.isEmpty() && (double)Math.max(this.random.nextFloat() - 0.1F, 0.0F) < d0) {
+            this.forceDrops = true; // CraftBukkit
             this.spawnAtLocation(itemstack);
+            this.forceDrops = false; // CraftBukkit
          }
 
          this.setItemSlotAndDropWhenKilled(equipmentslot, p_21541_);
@@ -646,17 +_,25 @@
          this.discard();
       } else if (!this.isPersistenceRequired() && !this.requiresCustomPersistence()) {
          Entity entity = this.level.getNearestPlayer(this, -1.0D);
+         net.minecraftforge.eventbus.api.Event.Result result = net.minecraftforge.event.ForgeEventFactory.canEntityDespawn(this);
+         if (result == net.minecraftforge.eventbus.api.Event.Result.DENY) {
+            noActionTime = 0;
+            entity = null;
+         } else if (result == net.minecraftforge.eventbus.api.Event.Result.ALLOW) {
+            this.discard();
+            entity = null;
+         }
          if (entity != null) {
             double d0 = entity.distanceToSqr(this);
-            int i = this.getType().getCategory().getDespawnDistance();
+            int i = this.level.paperConfig.hardDespawnDistances.getInt(this.getType().getCategory()); // Paper - custom despawn distances
             int j = i * i;
-            if (d0 > (double)j && this.removeWhenFarAway(d0)) {
+            if (d0 > (double) j && this.removeWhenFarAway(d0)) {
                this.discard();
             }
 
-            int k = this.getType().getCategory().getNoDespawnDistance();
+            int k = this.level.paperConfig.softDespawnDistances.getInt(this.getType().getCategory()); // Paper - custom despawn distances
             int l = k * k;
-            if (this.noActionTime > 600 && this.random.nextInt(800) == 0 && d0 > (double)l && this.removeWhenFarAway(d0)) {
+            if (this.noActionTime > 600 && this.random.nextInt(800) == 0 && d0 > (double) l && this.removeWhenFarAway(d0)) {
                this.discard();
             } else if (d0 < (double)l) {
                this.noActionTime = 0;
@@ -670,6 +_,17 @@
 
    protected final void serverAiStep() {
       ++this.noActionTime;
+      if (!this.aware) { // Paper start - Allow nerfed mobs to jump, float and take water damage
+          if (goalFloat != null) {
+              if (goalFloat.canUse()) goalFloat.tick();
+              this.getJumpControl().tick();
+          }
+          if (this.isSensitiveToWater() && isInWaterRainOrBubble()) {
+              hurt(DamageSource.DROWN, 1.0F);
+          }
+          return;
+      }
+      // Paper end
       this.level.getProfiler().push("sensing");
       this.sensing.tick();
       this.level.getProfiler().pop();
@@ -1032,6 +_,12 @@
       if (!this.isAlive()) {
          return InteractionResult.PASS;
       } else if (this.getLeashHolder() == p_21420_) {
+         // CraftBukkit start - fire PlayerUnleashEntityEvent
+         if (org.bukkit.craftbukkit.v1_18_R2.event.CraftEventFactory.callPlayerUnleashEntityEvent(this, p_21420_).isCancelled()) {
+            ((net.minecraft.server.level.ServerPlayer) p_21420_).connection.send(new ClientboundSetEntityLinkPacket(this, this.getLeashHolder()));
+            return InteractionResult.PASS;
+         }
+         // CraftBukkit end
          this.dropLeash(true, !p_21420_.getAbilities().instabuild);
          return InteractionResult.sidedSuccess(this.level.isClientSide);
       } else {
@@ -1048,6 +_,12 @@
    private InteractionResult checkAndHandleImportantInteractions(Player p_21500_, InteractionHand p_21501_) {
       ItemStack itemstack = p_21500_.getItemInHand(p_21501_);
       if (itemstack.is(Items.LEAD) && this.canBeLeashed(p_21500_)) {
+         // CraftBukkit start - fire PlayerLeashEntityEvent
+         if (org.bukkit.craftbukkit.v1_18_R2.event.CraftEventFactory.callPlayerLeashEntityEvent(this, p_21500_, p_21500_).isCancelled()) {
+            ((net.minecraft.server.level.ServerPlayer) p_21500_).connection.send(new ClientboundSetEntityLinkPacket(this, this.getLeashHolder()));
+            return InteractionResult.PASS;
+         }
+         // CraftBukkit end
          this.setLeashedTo(p_21500_, true);
          itemstack.shrink(1);
          return InteractionResult.sidedSuccess(this.level.isClientSide);
@@ -1116,8 +_,16 @@
       return this.restrictRadius != -1.0F;
    }
 
+   // CraftBukkit start
    @Nullable
    public <T extends Mob> T convertTo(EntityType<T> p_21407_, boolean p_21408_) {
+
+      return this.convertTo(p_21407_, p_21408_, org.bukkit.event.entity.EntityTransformEvent.TransformReason.UNKNOWN, org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason.DEFAULT);
+   }
+
+   @Nullable
+   public <T extends Mob> T convertTo(EntityType<T> p_21407_, boolean p_21408_, org.bukkit.event.entity.EntityTransformEvent.TransformReason transformReason, org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason spawnReason) {
+      // CraftBukkit end
       if (this.isRemoved()) {
          return (T)null;
       } else {
@@ -1148,7 +_,13 @@
             }
          }
 
+         // CraftBukkit start
+         if (org.bukkit.craftbukkit.v1_18_R2.event.CraftEventFactory.callEntityTransformEvent(this, t, transformReason).isCancelled()) {
+            return null;
+         }
+         this.level.prepareEntity(t, spawnReason); //Magma - add spawn reason
          this.level.addFreshEntity(t);
+         // CraftBukkit end
          if (this.isPassenger()) {
             Entity entity = this.getVehicle();
             this.stopRiding();
@@ -1167,6 +_,7 @@
 
       if (this.leashHolder != null) {
          if (!this.isAlive() || !this.leashHolder.isAlive()) {
+            this.level.getCraftServer().getPluginManager().callEvent(new org.bukkit.event.entity.EntityUnleashEvent(this.getBukkitEntity(), (!this.isAlive()) ? org.bukkit.event.entity.EntityUnleashEvent.UnleashReason.PLAYER_UNLEASH : org.bukkit.event.entity.EntityUnleashEvent.UnleashReason.HOLDER_GONE)); // CraftBukkit
             this.dropLeash(true, true);
          }
 
@@ -1178,7 +_,9 @@
          this.leashHolder = null;
          this.leashInfoTag = null;
          if (!this.level.isClientSide && p_21457_) {
+            this.forceDrops = true; // CraftBukkit
             this.spawnAtLocation(Items.LEAD);
+            this.forceDrops = false; // CraftBukkit
          }
 
          if (!this.level.isClientSide && p_21456_ && this.level instanceof ServerLevel) {
@@ -1226,6 +_,7 @@
    public boolean startRiding(Entity p_21396_, boolean p_21397_) {
       boolean flag = super.startRiding(p_21396_, p_21397_);
       if (flag && this.isLeashed()) {
+         this.level.getCraftServer().getPluginManager().callEvent(new org.bukkit.event.entity.EntityUnleashEvent(this.getBukkitEntity(), org.bukkit.event.entity.EntityUnleashEvent.UnleashReason.UNKNOWN)); // CraftBukkit
          this.dropLeash(true, true);
       }
 
@@ -1248,7 +_,9 @@
          }
 
          if (this.tickCount > 100) {
+            this.forceDrops = true; // CraftBukkit
             this.spawnAtLocation(Items.LEAD);
+            this.forceDrops = false; // CraftBukkit
             this.leashInfoTag = null;
          }
       }
@@ -1311,7 +_,14 @@
 
       int i = EnchantmentHelper.getFireAspect(this);
       if (i > 0) {
-         p_21372_.setSecondsOnFire(i * 4);
+         // CraftBukkit start - Call a combust event when somebody hits with a fire enchanted item
+         org.bukkit.event.entity.EntityCombustByEntityEvent combustEvent = new org.bukkit.event.entity.EntityCombustByEntityEvent(this.getBukkitEntity(), p_21372_.getBukkitEntity(), i * 4);
+         org.bukkit.Bukkit.getPluginManager().callEvent(combustEvent);
+
+         if (!combustEvent.isCancelled()) {
+            p_21372_.setSecondsOnFire(combustEvent.getDuration(), false);
+         }
+         // CraftBukkit end
       }
 
       boolean flag = p_21372_.hurt(DamageSource.mobAttack(this), f);
@@ -1373,9 +_,10 @@
 
    protected void removeAfterChangingDimensions() {
       super.removeAfterChangingDimensions();
+      this.level.getCraftServer().getPluginManager().callEvent(new org.bukkit.event.entity.EntityUnleashEvent(this.getBukkitEntity(), org.bukkit.event.entity.EntityUnleashEvent.UnleashReason.UNKNOWN)); // CraftBukkit
       this.dropLeash(true, false);
       this.getAllSlots().forEach((p_181125_) -> {
-         p_181125_.setCount(0);
+         if (!p_181125_.isEmpty()) p_181125_.setCount(0); // CraftBukkit
       });
    }
 
