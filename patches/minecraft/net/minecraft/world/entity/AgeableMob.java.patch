--- a/net/minecraft/world/entity/AgeableMob.java
+++ b/net/minecraft/world/entity/AgeableMob.java
@@ -18,11 +_,32 @@
    protected int age;
    protected int forcedAge;
    protected int forcedAgeTimer;
+   public boolean ageLocked; // CraftBukkit
 
    protected AgeableMob(EntityType<? extends AgeableMob> p_146738_, Level p_146739_) {
       super(p_146738_, p_146739_);
    }
 
+   // Spigot start
+   @Override
+   public void inactiveTick() {
+      super.inactiveTick();
+      if (this.level.isClientSide || this.ageLocked) { // CraftBukkit
+         this.refreshDimensions();
+      } else {
+         int i = this.getAge();
+
+         if (i < 0) {
+            ++i;
+            this.setAge(i);
+         } else if (i > 0) {
+            --i;
+            this.setAge(i);
+         }
+      }
+   }
+   // Spigot end
+
    public SpawnGroupData finalizeSpawn(ServerLevelAccessor p_146746_, DifficultyInstance p_146747_, MobSpawnType p_146748_, @Nullable SpawnGroupData p_146749_, @Nullable CompoundTag p_146750_) {
       if (p_146749_ == null) {
          p_146749_ = new AgeableMob.AgeableMobGroupData(true);
@@ -97,12 +_,14 @@
       super.addAdditionalSaveData(p_146761_);
       p_146761_.putInt("Age", this.getAge());
       p_146761_.putInt("ForcedAge", this.forcedAge);
+      p_146761_.putBoolean("AgeLocked", this.ageLocked); // CraftBukkit
    }
 
    public void readAdditionalSaveData(CompoundTag p_146752_) {
       super.readAdditionalSaveData(p_146752_);
       this.setAge(p_146752_.getInt("Age"));
       this.forcedAge = p_146752_.getInt("ForcedAge");
+      this.ageLocked = p_146752_.getBoolean("AgeLocked"); // CraftBukkit
    }
 
    public void onSyncedDataUpdated(EntityDataAccessor<?> p_146754_) {
@@ -115,7 +_,7 @@
 
    public void aiStep() {
       super.aiStep();
-      if (this.level.isClientSide) {
+      if (this.level.isClientSide || ageLocked) { // CraftBukkit
          if (this.forcedAgeTimer > 0) {
             if (this.forcedAgeTimer % 4 == 0) {
                this.level.addParticle(ParticleTypes.HAPPY_VILLAGER, this.getRandomX(1.0D), this.getRandomY() + 0.5D, this.getRandomZ(1.0D), 0.0D, 0.0D, 0.0D);
