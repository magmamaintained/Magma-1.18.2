--- a/net/minecraft/world/entity/npc/Villager.java
+++ b/net/minecraft/world/entity/npc/Villager.java
@@ -203,6 +_,17 @@
       return this.assignProfessionWhenSpawned;
    }
 
+   // Spigot Start
+   @Override
+   public void inactiveTick() {
+      // SPIGOT-3874, SPIGOT-3894, SPIGOT-3846, SPIGOT-5286 :(
+      if (level.spigotConfig.tickInactiveVillagers && this.isEffectiveAi()) {
+         this.customServerAiStep();
+      }
+      super.inactiveTick();
+   }
+   // Spigot End
+
    protected void customServerAiStep() {
       this.level.getProfiler().push("villagerBrain");
       this.getBrain().tick((ServerLevel)this.level, this);
@@ -219,7 +_,7 @@
                this.increaseProfessionLevelOnUpdate = false;
             }
 
-            this.addEffect(new MobEffectInstance(MobEffects.REGENERATION, 200, 0));
+            this.addEffect(new MobEffectInstance(MobEffects.REGENERATION, 200, 0), org.bukkit.event.entity.EntityPotionEffectEvent.Cause.VILLAGER_TRADE); // CraftBukkit
          }
       }
 
@@ -254,7 +_,7 @@
 
    public InteractionResult mobInteract(Player p_35472_, InteractionHand p_35473_) {
       ItemStack itemstack = p_35472_.getItemInHand(p_35473_);
-      if (!itemstack.is(Items.VILLAGER_SPAWN_EGG) && this.isAlive() && !this.isTrading() && !this.isSleeping()) {
+      if (itemstack.getItem() != Items.VILLAGER_SPAWN_EGG && this.isAlive() && !this.isTrading() && !this.isSleeping() && !p_35472_.isSecondaryUseActive()) {
          if (this.isBaby()) {
             this.setUnhappy();
             return InteractionResult.sidedSuccess(this.level.isClientSide);
@@ -330,7 +_,13 @@
       this.updateDemand();
 
       for(MerchantOffer merchantoffer : this.getOffers()) {
-         merchantoffer.resetUses();
+         // CraftBukkit start
+         org.bukkit.event.entity.VillagerReplenishTradeEvent event = new org.bukkit.event.entity.VillagerReplenishTradeEvent((org.bukkit.entity.Villager) this.getBukkitEntity(), merchantoffer.asBukkit());
+         org.bukkit.Bukkit.getPluginManager().callEvent(event);
+         if (!event.isCancelled()) {
+            merchantoffer.resetUses();
+         }
+         // CraftBukkit end
       }
 
       this.lastRestockGameTime = this.level.getGameTime();
@@ -375,7 +_,13 @@
       int i = 2 - this.numberOfRestocksToday;
       if (i > 0) {
          for(MerchantOffer merchantoffer : this.getOffers()) {
-            merchantoffer.resetUses();
+            // CraftBukkit start
+            org.bukkit.event.entity.VillagerReplenishTradeEvent event = new org.bukkit.event.entity.VillagerReplenishTradeEvent((org.bukkit.entity.Villager) this.getBukkitEntity(), merchantoffer.asBukkit());
+            org.bukkit.Bukkit.getPluginManager().callEvent(event);
+            if (!event.isCancelled()) {
+               merchantoffer.resetUses();
+            }
+            // CraftBukkit end
          }
       }
 
@@ -548,7 +_,7 @@
    }
 
    public void die(DamageSource p_35419_) {
-      LOGGER.info("Villager {} died, message: '{}'", this, p_35419_.getLocalizedDeathMessage(this).getString());
+      if (org.spigotmc.SpigotConfig.logVillagerDeaths) LOGGER.info("Villager {} died, message: '{}'", this, p_35419_.getLocalizedDeathMessage(this).getString()); // Spigot
       Entity entity = p_35419_.getEntity();
       if (entity != null) {
          this.tellWitnessesThatIWasMurdered(entity);
@@ -658,7 +_,8 @@
    }
 
    protected Component getTypeName() {
-      return new TranslatableComponent(this.getType().getDescriptionId() + "." + Registry.VILLAGER_PROFESSION.getKey(this.getVillagerData().getProfession()).getPath());
+      net.minecraft.resources.ResourceLocation profName = this.getVillagerData().getProfession().getRegistryName();
+      return new TranslatableComponent(this.getType().getDescriptionId() + '.' + (!"minecraft".equals(profName.getNamespace()) ? profName.getNamespace() + '.' : "") + profName.getPath());
    }
 
    public void handleEntityEvent(byte p_35391_) {
@@ -710,7 +_,7 @@
    }
 
    public void thunderHit(ServerLevel p_35409_, LightningBolt p_35410_) {
-      if (p_35409_.getDifficulty() != Difficulty.PEACEFUL) {
+      if (p_35409_.getDifficulty() != Difficulty.PEACEFUL && net.minecraftforge.event.ForgeEventFactory.canLivingConvert(this, EntityType.WITCH, (timer) -> {})) {
          LOGGER.info("Villager {} was struck by lightning {}.", this, p_35410_);
          Witch witch = EntityType.WITCH.create(p_35409_);
          witch.moveTo(this.getX(), this.getY(), this.getZ(), this.getYRot(), this.getXRot());
@@ -722,7 +_,14 @@
          }
 
          witch.setPersistenceRequired();
+         net.minecraftforge.event.ForgeEventFactory.onLivingConvert(this, witch);
+         // CraftBukkit start
+         if (org.bukkit.craftbukkit.v1_18_R2.event.CraftEventFactory.callEntityTransformEvent(this, witch, org.bukkit.event.entity.EntityTransformEvent.TransformReason.LIGHTNING).isCancelled()) {
+            return;
+         }
+         p_35409_.prepareEntity(witch, org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason.LIGHTNING); //Magma - add spawn reason
          p_35409_.addFreshEntityWithPassengers(witch);
+         // CraftBukkit end
          this.releaseAllPois();
          this.discard();
       } else {
@@ -740,6 +_,13 @@
             return;
          }
 
+         // CraftBukkit start
+         ItemStack remaining = new SimpleContainer(simplecontainer).addItem(itemstack);
+         if (org.bukkit.craftbukkit.v1_18_R2.event.CraftEventFactory.callEntityPickupItemEvent(this, p_35467_, remaining.getCount(), false).isCancelled()) {
+            return;
+         }
+         // CraftBukkit end
+
          this.onItemPickup(p_35467_);
          this.take(p_35467_, itemstack.getCount());
          ItemStack itemstack1 = simplecontainer.addItem(itemstack);
@@ -843,6 +_,7 @@
             IronGolem irongolem = EntityType.IRON_GOLEM.create(p_35491_, (CompoundTag)null, (Component)null, (Player)null, blockpos1, MobSpawnType.MOB_SUMMONED, false, false);
             if (irongolem != null) {
                if (irongolem.checkSpawnRules(p_35491_, MobSpawnType.MOB_SUMMONED) && irongolem.checkSpawnObstruction(p_35491_)) {
+                  p_35491_.prepareEntity(irongolem, org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason.VILLAGE_DEFENSE); //Magma - add spawn reason
                   p_35491_.addFreshEntityWithPassengers(irongolem);
                   return irongolem;
                }
