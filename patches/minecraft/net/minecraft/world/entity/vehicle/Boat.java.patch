--- a/net/minecraft/world/entity/vehicle/Boat.java
+++ b/net/minecraft/world/entity/vehicle/Boat.java
@@ -87,6 +_,14 @@
    private float bubbleAngle;
    private float bubbleAngleO;
 
+   // CraftBukkit start
+   // PAIL: Some of these haven't worked since a few updates, and since 1.9 they are less and less applicable.
+   public double maxSpeed = 0.4D;
+   public double occupiedDeceleration = 0.2D;
+   public double unoccupiedDeceleration = -1;
+   public boolean landBoats = false;
+   // CraftBukkit end
+
    public Boat(EntityType<? extends Boat> p_38290_, Level p_38291_) {
       super(p_38290_, p_38291_);
       this.blocksBuilding = true;
@@ -146,6 +_,19 @@
       if (this.isInvulnerableTo(p_38319_)) {
          return false;
       } else if (!this.level.isClientSide && !this.isRemoved()) {
+         // CraftBukkit start
+         org.bukkit.entity.Vehicle vehicle = (org.bukkit.entity.Vehicle) this.getBukkitEntity();
+         org.bukkit.entity.Entity attacker = (p_38319_.getEntity() == null) ? null : p_38319_.getEntity().getBukkitEntity();
+
+         org.bukkit.event.vehicle.VehicleDamageEvent event = new org.bukkit.event.vehicle.VehicleDamageEvent(vehicle, attacker, (double) p_38320_);
+         this.level.getCraftServer().getPluginManager().callEvent(event);
+
+         if (event.isCancelled()) {
+            return false;
+         }
+         // f = event.getDamage(); // TODO Why don't we do this?
+         // CraftBukkit end
+
          this.setHurtDir(-this.getHurtDir());
          this.setHurtTime(10);
          this.setDamage(this.getDamage() + p_38320_ * 10.0F);
@@ -153,6 +_,15 @@
          this.gameEvent(GameEvent.ENTITY_DAMAGED, p_38319_.getEntity());
          boolean flag = p_38319_.getEntity() instanceof Player && ((Player)p_38319_.getEntity()).getAbilities().instabuild;
          if (flag || this.getDamage() > 40.0F) {
+            // CraftBukkit start
+            org.bukkit.event.vehicle.VehicleDestroyEvent destroyEvent = new org.bukkit.event.vehicle.VehicleDestroyEvent(vehicle, attacker);
+            this.level.getCraftServer().getPluginManager().callEvent(destroyEvent);
+
+            if (destroyEvent.isCancelled()) {
+               this.setDamage(40F); // Maximize damage so this doesn't get triggered again right away
+               return true;
+            }
+            // CraftBukkit end
             if (!flag && this.level.getGameRules().getBoolean(GameRules.RULE_DOENTITYDROPS)) {
                this.spawnAtLocation(this.getDropItem());
             }
@@ -186,9 +_,29 @@
    public void push(Entity p_38373_) {
       if (p_38373_ instanceof Boat) {
          if (p_38373_.getBoundingBox().minY < this.getBoundingBox().maxY) {
+            // CraftBukkit start
+            if (!this.isPassengerOfSameVehicle(p_38373_)) {
+               org.bukkit.event.vehicle.VehicleEntityCollisionEvent event = new org.bukkit.event.vehicle.VehicleEntityCollisionEvent((org.bukkit.entity.Vehicle) this.getBukkitEntity(), p_38373_.getBukkitEntity());
+               this.level.getCraftServer().getPluginManager().callEvent(event);
+
+               if (event.isCancelled()) {
+                  return;
+               }
+            }
+            // CraftBukkit end
             super.push(p_38373_);
          }
       } else if (p_38373_.getBoundingBox().minY <= this.getBoundingBox().minY) {
+         // CraftBukkit start
+         if (!this.isPassengerOfSameVehicle(p_38373_)) {
+            org.bukkit.event.vehicle.VehicleEntityCollisionEvent event = new org.bukkit.event.vehicle.VehicleEntityCollisionEvent((org.bukkit.entity.Vehicle) this.getBukkitEntity(), p_38373_.getBukkitEntity());
+            this.level.getCraftServer().getPluginManager().callEvent(event);
+
+            if (event.isCancelled()) {
+               return;
+            }
+         }
+         // CraftBukkit end
          super.push(p_38373_);
       }
 
@@ -196,19 +_,19 @@
 
    public Item getDropItem() {
       switch(this.getBoatType()) {
-      case OAK:
-      default:
-         return Items.OAK_BOAT;
-      case SPRUCE:
-         return Items.SPRUCE_BOAT;
-      case BIRCH:
-         return Items.BIRCH_BOAT;
-      case JUNGLE:
-         return Items.JUNGLE_BOAT;
-      case ACACIA:
-         return Items.ACACIA_BOAT;
-      case DARK_OAK:
-         return Items.DARK_OAK_BOAT;
+         case OAK:
+         default:
+            return Items.OAK_BOAT;
+         case SPRUCE:
+            return Items.SPRUCE_BOAT;
+         case BIRCH:
+            return Items.BIRCH_BOAT;
+         case JUNGLE:
+            return Items.JUNGLE_BOAT;
+         case ACACIA:
+            return Items.ACACIA_BOAT;
+         case DARK_OAK:
+            return Items.DARK_OAK_BOAT;
       }
    }
 
@@ -235,6 +_,7 @@
       return this.getDirection().getClockWise();
    }
 
+   private org.bukkit.Location lastLocation; // CraftBukkit
    public void tick() {
       this.oldStatus = this.status;
       this.status = this.getStatus();
@@ -274,6 +_,22 @@
          this.setDeltaMovement(Vec3.ZERO);
       }
 
+      // CraftBukkit start
+      org.bukkit.Server server = this.level.getCraftServer();
+      org.bukkit.World bworld = this.level.getWorld();
+
+      org.bukkit.Location to = new org.bukkit.Location(bworld, this.getX(), this.getY(), this.getZ(), this.getYRot(), this.getXRot());
+      org.bukkit.entity.Vehicle vehicle = (org.bukkit.entity.Vehicle) this.getBukkitEntity();
+
+      server.getPluginManager().callEvent(new org.bukkit.event.vehicle.VehicleUpdateEvent(vehicle));
+
+      if (lastLocation != null && !lastLocation.equals(to)) {
+         org.bukkit.event.vehicle.VehicleMoveEvent event = new org.bukkit.event.vehicle.VehicleMoveEvent(vehicle, lastLocation, to);
+         server.getPluginManager().callEvent(event);
+      }
+      lastLocation = vehicle.getLocation();
+      // CraftBukkit end
+
       this.tickBubbleColumn();
 
       for(int i = 0; i <= 1; ++i) {
@@ -358,15 +_,15 @@
    @Nullable
    protected SoundEvent getPaddleSound() {
       switch(this.getStatus()) {
-      case IN_WATER:
-      case UNDER_WATER:
-      case UNDER_FLOWING_WATER:
-         return SoundEvents.BOAT_PADDLE_WATER;
-      case ON_LAND:
-         return SoundEvents.BOAT_PADDLE_LAND;
-      case IN_AIR:
-      default:
-         return null;
+         case IN_WATER:
+         case UNDER_WATER:
+         case UNDER_FLOWING_WATER:
+            return SoundEvents.BOAT_PADDLE_WATER;
+         case ON_LAND:
+            return SoundEvents.BOAT_PADDLE_LAND;
+         case IN_AIR:
+         default:
+            return null;
       }
    }
 
@@ -475,7 +_,7 @@
                      blockpos$mutableblockpos.set(l1, k2, i2);
                      BlockState blockstate = this.level.getBlockState(blockpos$mutableblockpos);
                      if (!(blockstate.getBlock() instanceof WaterlilyBlock) && Shapes.joinIsNotEmpty(blockstate.getCollisionShape(this.level, blockpos$mutableblockpos).move((double)l1, (double)k2, (double)i2), voxelshape, BooleanOp.AND)) {
-                        f += blockstate.getBlock().getFriction();
+                        f += blockstate.getFriction(this.level, blockpos$mutableblockpos, this);
                         ++k1;
                      }
                   }
@@ -730,17 +_,23 @@
 
                this.causeFallDamage(this.fallDistance, 1.0F, DamageSource.FALL);
                if (!this.level.isClientSide && !this.isRemoved()) {
-                  this.kill();
-                  if (this.level.getGameRules().getBoolean(GameRules.RULE_DOENTITYDROPS)) {
-                     for(int i = 0; i < 3; ++i) {
-                        this.spawnAtLocation(this.getBoatType().getPlanks());
-                     }
+                  // CraftBukkit start
+                  org.bukkit.entity.Vehicle vehicle = (org.bukkit.entity.Vehicle) this.getBukkitEntity();
+                  org.bukkit.event.vehicle.VehicleDestroyEvent destroyEvent = new org.bukkit.event.vehicle.VehicleDestroyEvent(vehicle, null);
+                  this.level.getCraftServer().getPluginManager().callEvent(destroyEvent);
+                  if (!destroyEvent.isCancelled()) {
+                     this.kill();
+                     if (this.level.getGameRules().getBoolean(GameRules.RULE_DOENTITYDROPS)) {
+                        for (int i = 0; i < 3; ++i) {
+                           this.spawnAtLocation(this.getBoatType().getPlanks());
+                        }
 
-                     for(int j = 0; j < 2; ++j) {
-                        this.spawnAtLocation(Items.STICK);
+                        for (int j = 0; j < 2; ++j) {
+                           this.spawnAtLocation(Items.STICK);
+                        }
                      }
                   }
-               }
+               } // CraftBukkit end
             }
 
             this.resetFallDistance();
@@ -821,6 +_,18 @@
 
    public boolean isUnderWater() {
       return this.status == Boat.Status.UNDER_WATER || this.status == Boat.Status.UNDER_FLOWING_WATER;
+   }
+
+   // Forge: Fix MC-119811 by instantly completing lerp on board
+   @Override
+   protected boolean addPassenger(Entity passenger) {
+      //super.addPassenger(passenger); Magma - moved to return
+      if (this.isControlledByLocalInstance() && this.lerpSteps > 0) {
+         this.lerpSteps = 0;
+         this.absMoveTo(this.lerpX, this.lerpY, this.lerpZ, (float)this.lerpYRot, (float)this.lerpXRot);
+      }
+
+      return super.addPassenger(passenger); // TODO: 10/05/2022 - Magma // Magma 11/07/2022 - don't set this to false, it breaks boats
    }
 
    public ItemStack getPickResult() {
