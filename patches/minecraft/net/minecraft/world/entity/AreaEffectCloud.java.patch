--- a/net/minecraft/world/entity/AreaEffectCloud.java
+++ b/net/minecraft/world/entity/AreaEffectCloud.java
@@ -115,6 +_,22 @@
 
    }
 
+   // CraftBukkit start accessor methods
+   public void refreshEffects() {
+      if (!this.fixedColor) {
+         this.getEntityData().set(DATA_COLOR, PotionUtils.getColor((java.util.Collection) PotionUtils.getAllEffects(this.potion, (java.util.Collection) this.effects))); // PAIL: rename
+      }
+   }
+
+   public String getPotionType() {
+      return ((net.minecraft.resources.ResourceLocation) Registry.POTION.getKey(this.potion)).toString();
+   }
+
+   public void setPotionType(String string) {
+      setPotion(Registry.POTION.get(new net.minecraft.resources.ResourceLocation(string)));
+   }
+   // CraftBukkit end
+
    public int getColor() {
       return this.getEntityData().get(DATA_COLOR);
    }
@@ -148,6 +_,17 @@
       this.duration = p_19735_;
    }
 
+   // Spigot start - copied from below
+   @Override
+   public void inactiveTick() {
+      super.inactiveTick();
+      if (this.tickCount >= this.waitTime + this.duration) {
+         this.discard();
+         return;
+      }
+   }
+   // Spigot end
+
    public void tick() {
       super.tick();
       boolean flag = this.isWaiting();
@@ -237,19 +_,32 @@
             } else {
                List<LivingEntity> list1 = this.level.getEntitiesOfClass(LivingEntity.class, this.getBoundingBox());
                if (!list1.isEmpty()) {
+                  List<org.bukkit.entity.LivingEntity> entities = new java.util.ArrayList<org.bukkit.entity.LivingEntity>(); // CraftBukkit
                   for(LivingEntity livingentity : list1) {
                      if (!this.victims.containsKey(livingentity) && livingentity.isAffectedByPotions()) {
                         double d8 = livingentity.getX() - this.getX();
                         double d1 = livingentity.getZ() - this.getZ();
                         double d3 = d8 * d8 + d1 * d1;
                         if (d3 <= (double)(f * f)) {
+                           // CraftBukkit start
+                           entities.add((org.bukkit.entity.LivingEntity) livingentity.getBukkitEntity());
+                        }
+                     }
+                  }
+                  org.bukkit.event.entity.AreaEffectCloudApplyEvent event = org.bukkit.craftbukkit.v1_18_R2.event.CraftEventFactory.callAreaEffectCloudApplyEvent(this, entities);
+                  if (!event.isCancelled()) {
+                     for (org.bukkit.entity.LivingEntity entity : event.getAffectedEntities()) {
+                        if (entity instanceof org.bukkit.craftbukkit.v1_18_R2.entity.CraftLivingEntity) {
+                           LivingEntity livingentity = ((org.bukkit.craftbukkit.v1_18_R2.entity.CraftLivingEntity) entity).getHandle();
+                           // CraftBukkit end
                            this.victims.put(livingentity, this.tickCount + this.reapplicationDelay);
 
                            for(MobEffectInstance mobeffectinstance1 : list) {
                               if (mobeffectinstance1.getEffect().isInstantenous()) {
                                  mobeffectinstance1.getEffect().applyInstantenousEffect(this, this.getOwner(), livingentity, mobeffectinstance1.getAmplifier(), 0.5D);
                               } else {
-                                 livingentity.addEffect(new MobEffectInstance(mobeffectinstance1), this);
+                                 livingentity.prepare(org.bukkit.event.entity.EntityPotionEffectEvent.Cause.AREA_EFFECT_CLOUD); //Magma
+                                 livingentity.addEffect(new MobEffectInstance(mobeffectinstance1), this); // CraftBukkit
                               }
                            }
 
