--- a/net/minecraft/world/entity/animal/MushroomCow.java
+++ b/net/minecraft/world/entity/animal/MushroomCow.java
@@ -42,7 +_,7 @@
 import net.minecraft.world.level.gameevent.GameEvent;
 import org.apache.commons.lang3.tuple.Pair;
 
-public class MushroomCow extends Cow implements Shearable {
+public class MushroomCow extends Cow implements Shearable, net.minecraftforge.common.IForgeShearable {
    private static final EntityDataAccessor<String> DATA_TYPE = SynchedEntityData.defineId(MushroomCow.class, EntityDataSerializers.STRING);
    private static final int MUTATE_CHANCE = 1024;
    @Nullable
@@ -104,7 +_,7 @@
 
          this.playSound(soundevent, 1.0F, 1.0F);
          return InteractionResult.sidedSuccess(this.level.isClientSide);
-      } else if (itemstack.is(Items.SHEARS) && this.readyForShearing()) {
+      } else if (false && itemstack.getItem() == Items.SHEARS && this.readyForShearing()) { //Forge: Moved to onSheared
          this.shear(SoundSource.PLAYERS);
          this.gameEvent(GameEvent.SHEAR, p_28941_);
          if (!this.level.isClientSide) {
@@ -145,11 +_,21 @@
       }
    }
 
+   @Override
+   public java.util.List<ItemStack> onSheared(@javax.annotation.Nullable Player player, @javax.annotation.Nonnull ItemStack item, Level world, BlockPos pos, int fortune) {
+      this.gameEvent(GameEvent.SHEAR, player);
+      return shearInternal(player == null ? SoundSource.BLOCKS : SoundSource.PLAYERS);
+   }
+
    public void shear(SoundSource p_28924_) {
+      shearInternal(p_28924_).forEach(s -> this.level.addFreshEntity(new ItemEntity(this.level, this.getX(), this.getY(1.0D), this.getZ(), s)));
+   }
+
+   private java.util.List<ItemStack> shearInternal(SoundSource p_28924_) {
       this.level.playSound((Player)null, this, SoundEvents.MOOSHROOM_SHEAR, p_28924_, 1.0F, 1.0F);
       if (!this.level.isClientSide()) {
          ((ServerLevel)this.level).sendParticles(ParticleTypes.EXPLOSION, this.getX(), this.getY(0.5D), this.getZ(), 1, 0.0D, 0.0D, 0.0D, 0.0D);
-         this.discard();
+         // this.discard(); // CraftBukkit - moved down
          Cow cow = EntityType.COW.create(this.level);
          cow.moveTo(this.getX(), this.getY(), this.getZ(), this.getYRot(), this.getXRot());
          cow.setHealth(this.getHealth());
@@ -164,12 +_,32 @@
          }
 
          cow.setInvulnerable(this.isInvulnerable());
+         // CraftBukkit start
+         if (org.bukkit.craftbukkit.v1_18_R2.event.CraftEventFactory.callEntityTransformEvent(this, cow, org.bukkit.event.entity.EntityTransformEvent.TransformReason.SHEARED).isCancelled()) {
+            return java.util.Collections.emptyList();
+         }
+         this.level.prepareEntity(cow, org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason.SHEARED); //Magma - add spawn reason
          this.level.addFreshEntity(cow);
+         this.discard(); // CraftBukkit - from above
+         // CraftBukkit end
 
+         java.util.List<ItemStack> items = new java.util.ArrayList<>();
          for(int i = 0; i < 5; ++i) {
-            this.level.addFreshEntity(new ItemEntity(this.level, this.getX(), this.getY(1.0D), this.getZ(), new ItemStack(this.getMushroomType().blockState.getBlock())));
+
+            // CraftBukkit start
+            ItemEntity entityitem = new ItemEntity(this.level, this.getX(), this.getY(1.0D), this.getZ(), new ItemStack(this.getMushroomType().blockState.getBlock()));
+            org.bukkit.event.entity.EntityDropItemEvent event = new org.bukkit.event.entity.EntityDropItemEvent(this.getBukkitEntity(), (org.bukkit.entity.Item) entityitem.getBukkitEntity());
+            org.bukkit.Bukkit.getPluginManager().callEvent(event);
+            if (event.isCancelled()) {
+               continue;
+            }
+            items.add(entityitem.getItem()); // Magma
+            // CraftBukkit end
+
          }
+         return items;
       }
+      return java.util.Collections.emptyList();
 
    }
 
@@ -182,6 +_,7 @@
       p_28944_.putString("Type", this.getMushroomType().type);
       if (this.effect != null) {
          p_28944_.putByte("EffectId", (byte)MobEffect.getId(this.effect));
+         net.minecraftforge.common.ForgeHooks.saveMobEffect(p_28944_, "forge:effect_id", this.effect);
          p_28944_.putInt("EffectDuration", this.effectDuration);
       }
 
@@ -192,6 +_,7 @@
       this.setMushroomType(MushroomCow.MushroomType.byType(p_28936_.getString("Type")));
       if (p_28936_.contains("EffectId", 1)) {
          this.effect = MobEffect.byId(p_28936_.getByte("EffectId"));
+         this.effect = net.minecraftforge.common.ForgeHooks.loadMobEffect(p_28936_, "forge:effect_id", this.effect);
       }
 
       if (p_28936_.contains("EffectDuration", 3)) {
@@ -238,6 +_,11 @@
       }
 
       return mushroomcow$mushroomtype2;
+   }
+
+   @Override
+   public boolean isShearable(@javax.annotation.Nonnull ItemStack item, Level world, BlockPos pos) {
+      return readyForShearing();
    }
 
    public static enum MushroomType {
