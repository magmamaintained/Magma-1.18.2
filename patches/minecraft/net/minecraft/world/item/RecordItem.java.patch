--- a/net/minecraft/world/item/RecordItem.java
+++ b/net/minecraft/world/item/RecordItem.java
@@ -20,15 +_,38 @@
 import net.minecraft.world.level.block.state.BlockState;
 
 public class RecordItem extends Item {
+   @Deprecated // Forge: refer to WorldRender#playRecord. Modders: there's no need to reflectively modify this map!
    private static final Map<SoundEvent, RecordItem> BY_NAME = Maps.newHashMap();
    private final int analogOutput;
+   @Deprecated // Forge: refer to soundSupplier
    private final SoundEvent sound;
+   private final java.util.function.Supplier<SoundEvent> soundSupplier;
 
+   @Deprecated // Forge: Use the constructor that takes a supplier instead
    public RecordItem(int p_43037_, SoundEvent p_43038_, Item.Properties p_43039_) {
       super(p_43039_);
       this.analogOutput = p_43037_;
       this.sound = p_43038_;
       BY_NAME.put(this.sound, this);
+      this.soundSupplier = this.sound.delegate;
+   }
+
+   /**
+    * For mod use, allows to create a music disc without having to create a new
+    * SoundEvent before their registry event is fired.
+    *
+    * @param comparatorValue The value this music disc should output on the comparator. Must be between 0 and 15.
+    * @param soundSupplier A supplier that provides the sound that should be played. Use a
+    *                      {@link net.minecraftforge.registries.RegistryObject<SoundEvent>} or a
+    *                      {@link net.minecraftforge.registries.IRegistryDelegate} for this parameter.
+    * @param builder A set of {@link Item.Properties} that describe this item.
+    */
+   public RecordItem(int comparatorValue, java.util.function.Supplier<SoundEvent> soundSupplier, Item.Properties builder)
+   {
+      super(builder);
+      this.analogOutput = comparatorValue;
+      this.sound = null;
+      this.soundSupplier = soundSupplier;
    }
 
    public InteractionResult useOn(UseOnContext p_43048_) {
@@ -38,13 +_,15 @@
       if (blockstate.is(Blocks.JUKEBOX) && !blockstate.getValue(JukeboxBlock.HAS_RECORD)) {
          ItemStack itemstack = p_43048_.getItemInHand();
          if (!level.isClientSide) {
-            ((JukeboxBlock)Blocks.JUKEBOX).setRecord(level, blockpos, blockstate, itemstack);
-            level.levelEvent((Player)null, 1010, blockpos, Item.getId(this));
-            itemstack.shrink(1);
+            //Magma - move before return
             Player player = p_43048_.getPlayer();
             if (player != null) {
                player.awardStat(Stats.PLAY_RECORD);
             }
+            if (true) return InteractionResult.SUCCESS; // CraftBukkit - handled in ItemStack
+            ((JukeboxBlock)Blocks.JUKEBOX).setRecord(level, blockpos, blockstate, itemstack);
+            level.levelEvent((Player)null, 1010, blockpos, Item.getId(this));
+            itemstack.shrink(1);
          }
 
          return InteractionResult.sidedSuccess(level.isClientSide);
@@ -71,6 +_,6 @@
    }
 
    public SoundEvent getSound() {
-      return this.sound;
+      return this.soundSupplier.get();
    }
 }
