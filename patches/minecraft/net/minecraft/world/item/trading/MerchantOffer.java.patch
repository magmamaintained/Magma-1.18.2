--- a/net/minecraft/world/item/trading/MerchantOffer.java
+++ b/net/minecraft/world/item/trading/MerchantOffer.java
@@ -17,6 +_,23 @@
    public float priceMultiplier;
    public int xp = 1;
 
+   // CraftBukkit start
+   private org.bukkit.craftbukkit.v1_18_R2.inventory.CraftMerchantRecipe bukkitHandle; // CraftBukkit
+
+   public org.bukkit.craftbukkit.v1_18_R2.inventory.CraftMerchantRecipe asBukkit() {
+      return (this.bukkitHandle == null) ? (this.bukkitHandle = new org.bukkit.craftbukkit.v1_18_R2.inventory.CraftMerchantRecipe(this)) : this.bukkitHandle;
+   }
+
+   public MerchantOffer(ItemStack itemstack, ItemStack itemstack1, ItemStack itemstack2, int uses, int maxUses, int experience, float priceMultiplier, org.bukkit.craftbukkit.v1_18_R2.inventory.CraftMerchantRecipe bukkit) {
+      this(itemstack, itemstack1, itemstack2, uses, maxUses, experience, priceMultiplier, 0, bukkit);
+   }
+
+   public MerchantOffer(ItemStack itemstack, ItemStack itemstack1, ItemStack itemstack2, int uses, int maxUses, int experience, float priceMultiplier, int demand, org.bukkit.craftbukkit.v1_18_R2.inventory.CraftMerchantRecipe bukkit) {
+      this(itemstack, itemstack1, itemstack2, uses, maxUses, experience, priceMultiplier, demand);
+      this.bukkitHandle = bukkit;
+   }
+   // CraftBukkit end
+
    public MerchantOffer(CompoundTag p_45351_) {
       this.baseCostA = ItemStack.of(p_45351_.getCompound("buy"));
       this.costB = ItemStack.of(p_45351_.getCompound("buyB"));
@@ -73,9 +_,10 @@
 
    public ItemStack getCostA() {
       int i = this.baseCostA.getCount();
+      if (i <= 0) return ItemStack.EMPTY; // CraftBukkit - SPIGOT-5476
       ItemStack itemstack = this.baseCostA.copy();
       int j = Math.max(0, Mth.floor((float)(i * this.demand) * this.priceMultiplier));
-      itemstack.setCount(Mth.clamp(i + j + this.specialPriceDiff, 1, this.baseCostA.getItem().getMaxStackSize()));
+      itemstack.setCount(Mth.clamp(i + j + this.specialPriceDiff, 1, this.baseCostA.getMaxStackSize()));
       return itemstack;
    }
 
@@ -179,7 +_,7 @@
          return true;
       } else {
          ItemStack itemstack = p_45366_.copy();
-         if (itemstack.getItem().canBeDepleted()) {
+         if (itemstack.getItem().isDamageable(itemstack)) {
             itemstack.setDamageValue(itemstack.getDamageValue());
          }
 
@@ -191,7 +_,11 @@
       if (!this.satisfiedBy(p_45362_, p_45363_)) {
          return false;
       } else {
-         p_45362_.shrink(this.getCostA().getCount());
+         // CraftBukkit start
+         if (!this.getCostA().isEmpty()) {
+            p_45362_.shrink(this.getCostA().getCount());
+         }
+         // CraftBukkit end
          if (!this.getCostB().isEmpty()) {
             p_45363_.shrink(this.getCostB().getCount());
          }
