--- a/net/minecraft/world/level/storage/PrimaryLevelData.java
+++ b/net/minecraft/world/level/storage/PrimaryLevelData.java
@@ -76,6 +_,21 @@
    private final Set<String> knownServerBrands;
    private boolean wasModded;
    private final TimerQueue<MinecraftServer> scheduledEvents;
+   private boolean confirmedExperimentalWarning = false;
+
+   // CraftBukkit start - Add world and pdc
+   private net.minecraft.server.level.ServerLevel world;
+   protected Tag pdc;
+
+   public void setWorld(net.minecraft.server.level.ServerLevel world) {
+      if (this.world != null) {
+         return;
+      }
+      this.world = world;
+      world.getWorld().readBukkitValues(pdc);
+      pdc = null;
+   }
+   // CraftBukkit end
 
    private PrimaryLevelData(@Nullable DataFixer p_164942_, int p_164943_, @Nullable CompoundTag p_164944_, boolean p_164945_, int p_164946_, int p_164947_, int p_164948_, float p_164949_, long p_164950_, long p_164951_, int p_164952_, int p_164953_, int p_164954_, boolean p_164955_, int p_164956_, boolean p_164957_, boolean p_164958_, boolean p_164959_, WorldBorder.Settings p_164960_, int p_164961_, int p_164962_, @Nullable UUID p_164963_, Set<String> p_164964_, TimerQueue<MinecraftServer> p_164965_, @Nullable CompoundTag p_164966_, CompoundTag p_164967_, LevelSettings p_164968_, WorldGenSettings p_164969_, Lifecycle p_164970_) {
       this.fixerUpper = p_164942_;
@@ -104,7 +_,9 @@
       this.scheduledEvents = p_164965_;
       this.customBossEvents = p_164966_;
       this.endDragonFightData = p_164967_;
-      this.settings = p_164968_;
+      this.settings = p_164968_.withLifecycle(p_164970_);
+      if (p_164970_ == Lifecycle.stable()) //Reset to unconfirmed if the lifecycle goes back to stable
+         this.confirmedExperimentalWarning = false;
       this.worldGenSettings = p_164969_;
       this.worldGenSettingsLifecycle = p_164970_;
    }
@@ -120,7 +_,7 @@
       });
       return new PrimaryLevelData(p_78532_, p_78533_, p_78534_, p_78531_.get("WasModded").asBoolean(false), p_78531_.get("SpawnX").asInt(0), p_78531_.get("SpawnY").asInt(0), p_78531_.get("SpawnZ").asInt(0), p_78531_.get("SpawnAngle").asFloat(0.0F), i, p_78531_.get("DayTime").asLong(i), p_78536_.levelDataVersion(), p_78531_.get("clearWeatherTime").asInt(0), p_78531_.get("rainTime").asInt(0), p_78531_.get("raining").asBoolean(false), p_78531_.get("thunderTime").asInt(0), p_78531_.get("thundering").asBoolean(false), p_78531_.get("initialized").asBoolean(true), p_78531_.get("DifficultyLocked").asBoolean(false), WorldBorder.Settings.read(p_78531_, WorldBorder.DEFAULT_SETTINGS), p_78531_.get("WanderingTraderSpawnDelay").asInt(0), p_78531_.get("WanderingTraderSpawnChance").asInt(0), p_78531_.get("WanderingTraderId").read(SerializableUUID.CODEC).result().orElse((UUID)null), p_78531_.get("ServerBrands").asStream().flatMap((p_78529_) -> {
          return p_78529_.asString().result().stream();
-      }).collect(Collectors.toCollection(Sets::newLinkedHashSet)), new TimerQueue<>(TimerCallbacks.SERVER_CALLBACKS, p_78531_.get("ScheduledEvents").asStream()), (CompoundTag)p_78531_.get("CustomBossEvents").orElseEmptyMap().getValue(), compoundtag, p_78535_, p_78537_, p_78538_);
+      }).collect(Collectors.toCollection(Sets::newLinkedHashSet)), new TimerQueue<>(TimerCallbacks.SERVER_CALLBACKS, p_78531_.get("ScheduledEvents").asStream()), (CompoundTag)p_78531_.get("CustomBossEvents").orElseEmptyMap().getValue(), compoundtag, p_78535_, p_78537_, p_78538_).withConfirmedWarning(p_78538_ != Lifecycle.stable() && p_78531_.get("confirmedExperimentalSettings").asBoolean(false));
    }
 
    public CompoundTag createTag(RegistryAccess p_78543_, @Nullable CompoundTag p_78544_) {
@@ -191,6 +_,13 @@
          p_78547_.putUUID("WanderingTraderId", this.wanderingTraderId);
       }
 
+      if (org.bukkit.Bukkit.getServer() != null) {
+         p_78547_.putString("Bukkit.Version", org.bukkit.Bukkit.getName() + "/" + org.bukkit.Bukkit.getVersion() + "/" + org.bukkit.Bukkit.getBukkitVersion()); // CraftBukkit
+         world.getWorld().storeBukkitValues(p_78547_); // CraftBukkit - add pdc
+      }
+
+      p_78547_.putString("forgeLifecycle", net.minecraftforge.common.ForgeHooks.encodeLifecycle(this.settings.getLifecycle()));
+      p_78547_.putBoolean("confirmedExperimentalSettings", this.confirmedExperimentalWarning);
    }
 
    public int getXSpawn() {
@@ -288,6 +_,20 @@
    }
 
    public void setThundering(boolean p_78562_) {
+      // CraftBukkit start
+      if (this.thundering == p_78562_) {
+         return;
+      }
+
+      org.bukkit.World world = org.bukkit.Bukkit.getWorld(getLevelName());
+      if (world != null) {
+         org.bukkit.event.weather.ThunderChangeEvent thunder = new org.bukkit.event.weather.ThunderChangeEvent(world, p_78562_);
+         org.bukkit.Bukkit.getServer().getPluginManager().callEvent(thunder);
+         if (thunder.isCancelled()) {
+            return;
+         }
+      }
+      // CraftBukkit end
       this.thundering = p_78562_;
    }
 
@@ -304,6 +_,20 @@
    }
 
    public void setRaining(boolean p_78576_) {
+      // CraftBukkit start
+      if (this.raining == p_78576_) {
+         return;
+      }
+
+      org.bukkit.World world = org.bukkit.Bukkit.getWorld(getLevelName());
+      if (world != null) {
+         org.bukkit.event.weather.WeatherChangeEvent weather = new org.bukkit.event.weather.WeatherChangeEvent(world, p_78576_);
+         org.bukkit.Bukkit.getServer().getPluginManager().callEvent(weather);
+         if (weather.isCancelled()) {
+            return;
+         }
+      }
+      // CraftBukkit end
       this.raining = p_78576_;
    }
 
@@ -357,6 +_,14 @@
 
    public void setDifficulty(Difficulty p_78521_) {
       this.settings = this.settings.withDifficulty(p_78521_);
+      /* Magma todo add back once full world patches
+      // CraftBukkit start
+      net.minecraft.network.protocol.game.ClientboundChangeDifficultyPacket packet = new net.minecraft.network.protocol.game.ClientboundChangeDifficultyPacket(this.getDifficulty(), this.isDifficultyLocked());
+      for (net.minecraft.server.level.ServerPlayer player : (java.util.List<net.minecraft.server.level.ServerPlayer>) (java.util.List) world.players()) {
+         player.connection.send(packet);
+      }
+      // CraftBukkit end
+       */
    }
 
    public boolean isDifficultyLocked() {
@@ -453,5 +_,22 @@
 
    public LevelSettings getLevelSettings() {
       return this.settings.copy();
+   }
+
+   // CraftBukkit start - Check if the name stored in NBT is the correct one
+   public void checkName(String name) {
+      if (!this.settings.levelName.equals(name)) {
+         this.settings.levelName = name;
+      }
+   }
+   // CraftBukkit end
+
+   //FORGE
+   public boolean hasConfirmedExperimentalWarning() {
+      return this.confirmedExperimentalWarning;
+   }
+   public PrimaryLevelData withConfirmedWarning(boolean confirmedWarning) { //Builder-like to not patch ctor
+      this.confirmedExperimentalWarning = confirmedWarning;
+      return this;
    }
 }
