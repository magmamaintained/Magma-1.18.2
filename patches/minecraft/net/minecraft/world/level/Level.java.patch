--- a/net/minecraft/world/level/Level.java
+++ b/net/minecraft/world/level/Level.java
@@ -1,30 +_,21 @@
 package net.minecraft.world.level;
 
+import com.destroystokyo.paper.youcandfindpaper.PaperWorldConfig;
 import com.google.common.collect.Lists;
 import com.mojang.serialization.Codec;
-import java.io.IOException;
-import java.util.Iterator;
-import java.util.List;
-import java.util.Random;
-import java.util.function.Consumer;
-import java.util.function.Predicate;
-import java.util.function.Supplier;
-import javax.annotation.Nullable;
 import net.minecraft.CrashReport;
 import net.minecraft.CrashReportCategory;
 import net.minecraft.ReportedException;
-import net.minecraft.core.BlockPos;
-import net.minecraft.core.Direction;
-import net.minecraft.core.Holder;
-import net.minecraft.core.Registry;
-import net.minecraft.core.SectionPos;
+import net.minecraft.core.*;
 import net.minecraft.core.particles.ParticleOptions;
 import net.minecraft.nbt.CompoundTag;
 import net.minecraft.network.protocol.Packet;
+import net.minecraft.network.protocol.game.*;
 import net.minecraft.resources.ResourceKey;
 import net.minecraft.resources.ResourceLocation;
 import net.minecraft.server.MinecraftServer;
 import net.minecraft.server.level.ChunkHolder;
+import net.minecraft.server.level.ServerLevel;
 import net.minecraft.sounds.SoundEvent;
 import net.minecraft.sounds.SoundSource;
 import net.minecraft.util.Mth;
@@ -34,6 +_,7 @@
 import net.minecraft.world.entity.Entity;
 import net.minecraft.world.entity.boss.EnderDragonPart;
 import net.minecraft.world.entity.boss.enderdragon.EnderDragon;
+import net.minecraft.world.entity.item.ItemEntity;
 import net.minecraft.world.entity.player.Player;
 import net.minecraft.world.item.ItemStack;
 import net.minecraft.world.item.crafting.RecipeManager;
@@ -45,859 +_,1223 @@
 import net.minecraft.world.level.block.entity.BlockEntity;
 import net.minecraft.world.level.block.entity.TickingBlockEntity;
 import net.minecraft.world.level.block.state.BlockState;
+import net.minecraft.world.level.border.BorderChangeListener;
 import net.minecraft.world.level.border.WorldBorder;
 import net.minecraft.world.level.chunk.ChunkAccess;
 import net.minecraft.world.level.chunk.ChunkStatus;
 import net.minecraft.world.level.chunk.LevelChunk;
 import net.minecraft.world.level.dimension.DimensionType;
+import net.minecraft.world.level.dimension.LevelStem;
 import net.minecraft.world.level.entity.EntityTypeTest;
 import net.minecraft.world.level.entity.LevelEntityGetter;
 import net.minecraft.world.level.gameevent.GameEvent;
 import net.minecraft.world.level.levelgen.Heightmap;
+import net.minecraft.world.level.levelgen.WorldGenSettings;
 import net.minecraft.world.level.lighting.LevelLightEngine;
 import net.minecraft.world.level.material.FluidState;
 import net.minecraft.world.level.material.Fluids;
 import net.minecraft.world.level.saveddata.maps.MapItemSavedData;
 import net.minecraft.world.level.storage.LevelData;
+import net.minecraft.world.level.storage.ServerLevelData;
 import net.minecraft.world.level.storage.WritableLevelData;
 import net.minecraft.world.phys.AABB;
 import net.minecraft.world.scores.Scoreboard;
-
-public abstract class Level implements LevelAccessor, AutoCloseable {
-   public static final Codec<ResourceKey<Level>> f_46427_ = ResourceLocation.f_135803_.xmap(ResourceKey.m_135797_(Registry.f_122819_), ResourceKey::m_135782_);
-   public static final ResourceKey<Level> f_46428_ = ResourceKey.m_135785_(Registry.f_122819_, new ResourceLocation("overworld"));
-   public static final ResourceKey<Level> f_46429_ = ResourceKey.m_135785_(Registry.f_122819_, new ResourceLocation("the_nether"));
-   public static final ResourceKey<Level> f_46430_ = ResourceKey.m_135785_(Registry.f_122819_, new ResourceLocation("the_end"));
-   public static final int f_151505_ = 30000000;
-   public static final int f_151506_ = 512;
-   public static final int f_151507_ = 32;
-   private static final Direction[] f_46422_ = Direction.values();
-   public static final int f_151508_ = 15;
-   public static final int f_151509_ = 24000;
-   public static final int f_151510_ = 20000000;
-   public static final int f_151511_ = -20000000;
-   protected final List<TickingBlockEntity> f_151512_ = Lists.newArrayList();
-   private final List<TickingBlockEntity> f_151503_ = Lists.newArrayList();
-   private boolean f_151504_;
-   private final Thread f_46423_;
-   private final boolean f_46424_;
-   private int f_46425_;
-   protected int f_46435_ = (new Random()).nextInt();
-   protected final int f_46436_ = 1013904223;
-   public float f_46437_;
-   public float f_46438_;
-   public float f_46439_;
-   public float f_46440_;
-   public final Random f_46441_ = new Random();
-   final DimensionType f_46445_;
-   private final Holder<DimensionType> f_204147_;
-   public final WritableLevelData f_46442_;
-   private final Supplier<ProfilerFiller> f_46446_;
-   public final boolean f_46443_;
-   private final WorldBorder f_46447_;
-   private final BiomeManager f_46420_;
-   private final ResourceKey<Level> f_46421_;
-   private long f_186455_;
-
-   protected Level(WritableLevelData p_204149_, ResourceKey<Level> p_204150_, Holder<DimensionType> p_204151_, Supplier<ProfilerFiller> p_204152_, boolean p_204153_, boolean p_204154_, long p_204155_) {
-      this.f_46446_ = p_204152_;
-      this.f_46442_ = p_204149_;
-      this.f_204147_ = p_204151_;
-      this.f_46445_ = p_204151_.m_203334_();
-      this.f_46421_ = p_204150_;
-      this.f_46443_ = p_204153_;
-      if (this.f_46445_.m_63959_() != 1.0D) {
-         this.f_46447_ = new WorldBorder() {
-            public double m_6347_() {
-               return super.m_6347_() / Level.this.f_46445_.m_63959_();
-            }
-
-            public double m_6345_() {
-               return super.m_6345_() / Level.this.f_46445_.m_63959_();
-            }
-         };
-      } else {
-         this.f_46447_ = new WorldBorder();
-      }
-
-      this.f_46423_ = Thread.currentThread();
-      this.f_46420_ = new BiomeManager(this, p_204155_);
-      this.f_46424_ = p_204154_;
-   }
-
-   public boolean m_5776_() {
-      return this.f_46443_;
-   }
-
-   @Nullable
-   public MinecraftServer m_142572_() {
-      return null;
-   }
-
-   public boolean m_46739_(BlockPos p_46740_) {
-      return !this.m_151570_(p_46740_) && m_46457_(p_46740_);
-   }
-
-   public static boolean m_46741_(BlockPos p_46742_) {
-      return !m_46724_(p_46742_.m_123342_()) && m_46457_(p_46742_);
-   }
-
-   private static boolean m_46457_(BlockPos p_46458_) {
-      return p_46458_.m_123341_() >= -30000000 && p_46458_.m_123343_() >= -30000000 && p_46458_.m_123341_() < 30000000 && p_46458_.m_123343_() < 30000000;
-   }
-
-   private static boolean m_46724_(int p_46725_) {
-      return p_46725_ < -20000000 || p_46725_ >= 20000000;
-   }
-
-   public LevelChunk m_46745_(BlockPos p_46746_) {
-      return this.m_6325_(SectionPos.m_123171_(p_46746_.m_123341_()), SectionPos.m_123171_(p_46746_.m_123343_()));
-   }
-
-   public LevelChunk m_6325_(int p_46727_, int p_46728_) {
-      return (LevelChunk)this.m_46819_(p_46727_, p_46728_, ChunkStatus.f_62326_);
-   }
-
-   @Nullable
-   public ChunkAccess m_6522_(int p_46502_, int p_46503_, ChunkStatus p_46504_, boolean p_46505_) {
-      ChunkAccess chunkaccess = this.m_7726_().m_7587_(p_46502_, p_46503_, p_46504_, p_46505_);
-      if (chunkaccess == null && p_46505_) {
-         throw new IllegalStateException("Should always be able to create a chunk!");
-      } else {
-         return chunkaccess;
-      }
-   }
-
-   public boolean m_7731_(BlockPos p_46601_, BlockState p_46602_, int p_46603_) {
-      return this.m_6933_(p_46601_, p_46602_, p_46603_, 512);
-   }
-
-   public boolean m_6933_(BlockPos p_46605_, BlockState p_46606_, int p_46607_, int p_46608_) {
-      if (this.m_151570_(p_46605_)) {
-         return false;
-      } else if (!this.f_46443_ && this.m_46659_()) {
-         return false;
-      } else {
-         LevelChunk levelchunk = this.m_46745_(p_46605_);
-         Block block = p_46606_.m_60734_();
-         BlockState blockstate = levelchunk.m_6978_(p_46605_, p_46606_, (p_46607_ & 64) != 0);
-         if (blockstate == null) {
-            return false;
-         } else {
-            BlockState blockstate1 = this.m_8055_(p_46605_);
-            if ((p_46607_ & 128) == 0 && blockstate1 != blockstate && (blockstate1.m_60739_(this, p_46605_) != blockstate.m_60739_(this, p_46605_) || blockstate1.m_60791_() != blockstate.m_60791_() || blockstate1.m_60787_() || blockstate.m_60787_())) {
-               this.m_46473_().m_6180_("queueCheckLight");
-               this.m_7726_().m_7827_().m_142202_(p_46605_);
-               this.m_46473_().m_7238_();
-            }
-
-            if (blockstate1 == p_46606_) {
-               if (blockstate != blockstate1) {
-                  this.m_6550_(p_46605_, blockstate, blockstate1);
-               }
-
-               if ((p_46607_ & 2) != 0 && (!this.f_46443_ || (p_46607_ & 4) == 0) && (this.f_46443_ || levelchunk.m_6708_() != null && levelchunk.m_6708_().m_140114_(ChunkHolder.FullChunkStatus.TICKING))) {
-                  this.m_7260_(p_46605_, blockstate, p_46606_, p_46607_);
-               }
-
-               if ((p_46607_ & 1) != 0) {
-                  this.m_6289_(p_46605_, blockstate.m_60734_());
-                  if (!this.f_46443_ && p_46606_.m_60807_()) {
-                     this.m_46717_(p_46605_, block);
-                  }
-               }
-
-               if ((p_46607_ & 16) == 0 && p_46608_ > 0) {
-                  int i = p_46607_ & -34;
-                  blockstate.m_60762_(this, p_46605_, i, p_46608_ - 1);
-                  p_46606_.m_60705_(this, p_46605_, i, p_46608_ - 1);
-                  p_46606_.m_60762_(this, p_46605_, i, p_46608_ - 1);
-               }
-
-               this.m_6559_(p_46605_, blockstate, blockstate1);
-            }
-
+import org.apache.logging.log4j.util.Strings;
+import org.bukkit.Bukkit;
+import org.bukkit.Location;
+import org.bukkit.World;
+import org.bukkit.craftbukkit.v1_18_R2.CraftServer;
+import org.bukkit.craftbukkit.v1_18_R2.CraftWorld;
+import org.bukkit.craftbukkit.v1_18_R2.block.CapturedBlockState;
+import org.bukkit.craftbukkit.v1_18_R2.block.data.CraftBlockData;
+import org.bukkit.craftbukkit.v1_18_R2.util.CraftNamespacedKey;
+import org.bukkit.craftbukkit.v1_18_R2.util.CraftSpawnCategory;
+import org.bukkit.entity.SpawnCategory;
+import org.bukkit.event.block.BlockPhysicsEvent;
+import org.bukkit.event.world.GenericGameEvent;
+import org.bukkit.generator.ChunkGenerator;
+import org.magmafoundation.magma.Magma;
+import org.magmafoundation.magma.forge.ForgeInject;
+
+import javax.annotation.Nullable;
+import java.io.IOException;
+import java.util.*;
+import java.util.function.Consumer;
+import java.util.function.Predicate;
+import java.util.function.Supplier;
+
+public abstract class Level extends net.minecraftforge.common.capabilities.CapabilityProvider<Level> implements LevelAccessor, AutoCloseable, net.minecraftforge.common.extensions.IForgeLevel {
+    public static final Codec<ResourceKey<Level>> f_46427_ = ResourceLocation.f_135803_.xmap( ResourceKey.m_135797_( Registry.f_122819_ ), ResourceKey::m_135782_ );
+    public static final ResourceKey<Level> f_46428_ = ResourceKey.m_135785_( Registry.f_122819_, new ResourceLocation( "overworld" ) );
+    public static final ResourceKey<Level> f_46429_ = ResourceKey.m_135785_( Registry.f_122819_, new ResourceLocation( "the_nether" ) );
+    public static final ResourceKey<Level> f_46430_ = ResourceKey.m_135785_( Registry.f_122819_, new ResourceLocation( "the_end" ) );
+    public static final int f_151505_ = 30000000;
+    public static final int f_151506_ = 512;
+    public static final int f_151507_ = 32;
+    private static final Direction[] f_46422_ = Direction.values();
+    public static final int f_151508_ = 15;
+    public static final int f_151509_ = 24000;
+    public static final int f_151510_ = 20000000;
+    public static final int f_151511_ = -20000000;
+    protected final List<TickingBlockEntity> f_151512_ = Lists.newArrayList();
+    private final List<TickingBlockEntity> f_151503_ = Lists.newArrayList();
+    private boolean f_151504_;
+    private final Thread f_46423_;
+    private final boolean f_46424_;
+    private int f_46425_;
+    protected int f_46435_ = (new Random()).nextInt();
+    protected final int f_46436_ = 1013904223;
+    public float f_46437_;
+    public float f_46438_;
+    public float f_46439_;
+    public float f_46440_;
+    public final Random f_46441_ = new Random();
+    final DimensionType f_46445_;
+    private final Holder<DimensionType> f_204147_;
+    public final WritableLevelData f_46442_;
+    private final Supplier<ProfilerFiller> f_46446_;
+    public final boolean f_46443_;
+    private final WorldBorder f_46447_;
+    private final BiomeManager f_46420_;
+    private final ResourceKey<Level> f_46421_;
+    private long f_186455_;
+    public boolean restoringBlockSnapshots = false;
+    public boolean captureBlockSnapshots = false;
+    public java.util.ArrayList<net.minecraftforge.common.util.BlockSnapshot> capturedBlockSnapshots = new java.util.ArrayList<>();
+    private final java.util.ArrayList<BlockEntity> freshBlockEntities = new java.util.ArrayList<>();
+    private final java.util.ArrayList<BlockEntity> pendingFreshBlockEntities = new java.util.ArrayList<>();
+
+    // CraftBukkit start Added the following
+    public CraftWorld world;
+    public boolean pvpMode;
+    public boolean keepSpawnInMemory = true;
+    public static org.bukkit.generator.ChunkGenerator generator;
+    public static org.bukkit.World.Environment environment;
+    public static org.bukkit.generator.BiomeProvider biomeProvider;
+    public boolean preventPoiUpdated = false; // CraftBukkit - SPIGOT-5710
+    public boolean captureBlockStates = false;
+    public boolean captureTreeGeneration = false;
+    public Map<BlockPos, CapturedBlockState> capturedBlockStates = new java.util.LinkedHashMap<>();
+    public Map<BlockPos, BlockEntity> capturedTileEntities = new HashMap<>();
+    public List<ItemEntity> captureDrops;
+    public final it.unimi.dsi.fastutil.objects.Object2LongOpenHashMap<SpawnCategory> ticksPerSpawnCategory = new it.unimi.dsi.fastutil.objects.Object2LongOpenHashMap<>();
+    public boolean populating;
+    public final co.aikar.timings.WorldTimingsHandler timings; // Paper
+    public final org.spigotmc.SpigotWorldConfig spigotConfig; // Spigot
+
+    public final PaperWorldConfig paperConfig; // Paper
+
+    public static BlockPos lastPhysicsProblem; // Spigot
+    private org.spigotmc.TickLimiter entityLimiter;
+    private org.spigotmc.TickLimiter tileLimiter;
+    private int tileTickPosition;
+
+    protected final ResourceKey<Level> typeKey;
+
+    public CraftWorld getWorld() {
+        return this.world;
+    }
+
+    public CraftServer getCraftServer() {
+        return (CraftServer) Bukkit.getServer();
+    }
+
+    //Magma - remove abstract modifier to fix abstract method error
+    public ResourceKey<LevelStem> getTypeKey() {
+        return WorldGenSettings.m_190052_(typeKey);
+    }
+
+    public static void setGeneratorAndEnv(ChunkGenerator gen, World.Environment env) {
+        generator = gen;
+        environment = env;
+    }
+
+    //Magma start - fix dummy level NPE
+    public String init_levelName;
+    protected Level(WritableLevelData p_204149_, ResourceKey<Level> p_204150_, Holder<DimensionType> p_204151_, Supplier<ProfilerFiller> p_204152_, boolean p_204153_, boolean p_204154_, long p_204155_) {
+        super( Level.class );
+        this.typeKey = p_204150_;
+        try {
+            this.init_levelName = p_204149_ == null ? Strings.EMPTY : ((ServerLevelData) p_204149_).m_5462_();
+        } catch (ClassCastException e) {
+            Magma.LOGGER.error("Failed to get level name from WritableLevelData, using empty string instead", e);
+            this.init_levelName = Strings.EMPTY;
+        }
+        this.spigotConfig = new org.spigotmc.SpigotWorldConfig(init_levelName); // Spigot
+        this.paperConfig = new PaperWorldConfig(((ServerLevelData) p_204149_).m_5462_(), this.spigotConfig); // Paper
+        //Magma end
+        // CraftBukkit Ticks things
+        for (SpawnCategory spawnCategory : SpawnCategory.values()) {
+            if (CraftSpawnCategory.isValidForLimits( spawnCategory )) {
+                this.ticksPerSpawnCategory.put( spawnCategory, (long) this.getCraftServer().getTicksPerSpawns( spawnCategory ) );
+            }
+        }
+        if (generator == null && p_204150_ != null) { //Magma
+            generator = getCraftServer().getGenerator( p_204150_.getRegistryName().m_135827_() );
+        }
+        if (environment == null) {
+            environment = ForgeInject.environments.getOrDefault(getTypeKey(), World.Environment.CUSTOM);
+        }
+        // CraftBukkit end
+        this.f_46446_ = p_204152_;
+        this.f_46442_ = p_204149_;
+        this.f_204147_ = p_204151_;
+        this.f_46445_ = p_204151_.m_203334_();
+        this.f_46421_ = p_204150_;
+        this.f_46443_ = p_204153_;
+        if (this.f_46445_.m_63959_() != 1.0D) {
+            this.f_46447_ = new WorldBorder() {
+                public double m_6347_() {
+                    return super.m_6347_(); // CraftBukkit
+                }
+
+                public double m_6345_() {
+                    return super.m_6345_(); // CraftBukkit
+                }
+            };
+        } else {
+            this.f_46447_ = new WorldBorder();
+        }
+
+        this.f_46423_ = Thread.currentThread();
+        this.f_46420_ = new BiomeManager( this, p_204155_ );
+        this.f_46424_ = p_204154_;
+        // CraftBukkit start
+        m_6857_().world = this; //Magma - fix ClassCastException
+        // From PlayerList.setPlayerFileData
+        m_6857_().m_61929_( new BorderChangeListener() {
+            @Override
+            public void m_6312_(WorldBorder worldborder, double d0) {
+                getCraftServer().getHandle().broadcastAll( new ClientboundSetBorderSizePacket( worldborder ), worldborder.world );
+            }
+
+            @Override
+            public void m_6689_(WorldBorder worldborder, double d0, double d1, long i) {
+                getCraftServer().getHandle().broadcastAll( new ClientboundSetBorderLerpSizePacket( worldborder ), worldborder.world );
+            }
+
+            @Override
+            public void m_7721_(WorldBorder worldborder, double d0, double d1) {
+                getCraftServer().getHandle().broadcastAll( new ClientboundSetBorderCenterPacket( worldborder ), worldborder.world );
+            }
+
+            @Override
+            public void m_5904_(WorldBorder worldborder, int i) {
+                getCraftServer().getHandle().broadcastAll( new ClientboundSetBorderWarningDelayPacket( worldborder ), worldborder.world );
+            }
+
+            @Override
+            public void m_5903_(WorldBorder worldborder, int i) {
+                getCraftServer().getHandle().broadcastAll( new ClientboundSetBorderWarningDistancePacket( worldborder ), worldborder.world );
+            }
+
+            @Override
+            public void m_6315_(WorldBorder worldborder, double d0) {
+            }
+
+            @Override
+            public void m_6313_(WorldBorder worldborder, double d0) {
+            }
+        } );
+        // CraftBukkit end
+        timings = new co.aikar.timings.WorldTimingsHandler(this); // Paper - code below can generate new world and access timings
+        this.entityLimiter = new org.spigotmc.TickLimiter(spigotConfig.entityMaxTickTime);
+        this.tileLimiter = new org.spigotmc.TickLimiter(spigotConfig.tileMaxTickTime);
+    }
+
+    public boolean m_5776_() {
+        return this.f_46443_;
+    }
+
+    @Nullable
+    public MinecraftServer m_142572_() {
+        return MinecraftServer.getServer();
+    }
+
+    public boolean m_46739_(BlockPos p_46740_) {
+        return !this.m_151570_( p_46740_ ) && m_46457_( p_46740_ );
+    }
+
+    public static boolean m_46741_(BlockPos p_46742_) {
+        return !m_46724_( p_46742_.m_123342_() ) && m_46457_( p_46742_ );
+    }
+
+    private static boolean m_46457_(BlockPos p_46458_) {
+        return p_46458_.m_123341_() >= -30000000 && p_46458_.m_123343_() >= -30000000 && p_46458_.m_123341_() < 30000000 && p_46458_.m_123343_() < 30000000;
+    }
+
+    private static boolean m_46724_(int p_46725_) {
+        return p_46725_ < -20000000 || p_46725_ >= 20000000;
+    }
+
+    public LevelChunk m_46745_(BlockPos p_46746_) {
+        return this.m_6325_( SectionPos.m_123171_( p_46746_.m_123341_() ), SectionPos.m_123171_( p_46746_.m_123343_() ) );
+    }
+
+    public LevelChunk m_6325_(int p_46727_, int p_46728_) {
+        return (LevelChunk) this.m_46819_( p_46727_, p_46728_, ChunkStatus.f_62326_ );
+    }
+
+    @Nullable
+    public ChunkAccess m_6522_(int p_46502_, int p_46503_, ChunkStatus p_46504_, boolean p_46505_) {
+        ChunkAccess chunkaccess = this.m_7726_().m_7587_( p_46502_, p_46503_, p_46504_, p_46505_ );
+        if (chunkaccess == null && p_46505_) {
+            throw new IllegalStateException( "Should always be able to create a chunk!" );
+        } else {
+            return chunkaccess;
+        }
+    }
+
+    //Magma start - move to original method
+    private int setBlock_int = 512;
+    public boolean m_7731_(BlockPos p_46601_, BlockState p_46602_, int p_46603_) {
+        int p_46608_ = setBlock_int;
+        setBlock_int = 512; //reset
+
+        // CraftBukkit start - tree generation
+        if (this.captureTreeGeneration) {
+            CapturedBlockState blockstate = capturedBlockStates.get( p_46601_ );
+            if (blockstate == null) {
+                blockstate = CapturedBlockState.getTreeBlockState( this, p_46601_, p_46603_ );
+                this.capturedBlockStates.put( p_46601_.m_7949_(), blockstate );
+            }
+            blockstate.setData( p_46602_ );
             return true;
-         }
-      }
-   }
-
-   public void m_6559_(BlockPos p_46609_, BlockState p_46610_, BlockState p_46611_) {
-   }
-
-   public boolean m_7471_(BlockPos p_46623_, boolean p_46624_) {
-      FluidState fluidstate = this.m_6425_(p_46623_);
-      return this.m_7731_(p_46623_, fluidstate.m_76188_(), 3 | (p_46624_ ? 64 : 0));
-   }
-
-   public boolean m_7740_(BlockPos p_46626_, boolean p_46627_, @Nullable Entity p_46628_, int p_46629_) {
-      BlockState blockstate = this.m_8055_(p_46626_);
-      if (blockstate.m_60795_()) {
-         return false;
-      } else {
-         FluidState fluidstate = this.m_6425_(p_46626_);
-         if (!(blockstate.m_60734_() instanceof BaseFireBlock)) {
-            this.m_46796_(2001, p_46626_, Block.m_49956_(blockstate));
-         }
-
-         if (p_46627_) {
-            BlockEntity blockentity = blockstate.m_155947_() ? this.m_7702_(p_46626_) : null;
-            Block.m_49881_(blockstate, this, p_46626_, blockentity, p_46628_, ItemStack.f_41583_);
-         }
-
-         boolean flag = this.m_6933_(p_46626_, fluidstate.m_76188_(), 3, p_46629_);
-         if (flag) {
-            this.m_142346_(p_46628_, GameEvent.f_157794_, p_46626_);
-         }
-
-         return flag;
-      }
-   }
-
-   public void m_142052_(BlockPos p_151531_, BlockState p_151532_) {
-   }
-
-   public boolean m_46597_(BlockPos p_46598_, BlockState p_46599_) {
-      return this.m_7731_(p_46598_, p_46599_, 3);
-   }
-
-   public abstract void m_7260_(BlockPos p_46612_, BlockState p_46613_, BlockState p_46614_, int p_46615_);
-
-   public void m_6550_(BlockPos p_46678_, BlockState p_46679_, BlockState p_46680_) {
-   }
-
-   public void m_46672_(BlockPos p_46673_, Block p_46674_) {
-      this.m_46586_(p_46673_.m_142125_(), p_46674_, p_46673_);
-      this.m_46586_(p_46673_.m_142126_(), p_46674_, p_46673_);
-      this.m_46586_(p_46673_.m_7495_(), p_46674_, p_46673_);
-      this.m_46586_(p_46673_.m_7494_(), p_46674_, p_46673_);
-      this.m_46586_(p_46673_.m_142127_(), p_46674_, p_46673_);
-      this.m_46586_(p_46673_.m_142128_(), p_46674_, p_46673_);
-   }
-
-   public void m_46590_(BlockPos p_46591_, Block p_46592_, Direction p_46593_) {
-      if (p_46593_ != Direction.WEST) {
-         this.m_46586_(p_46591_.m_142125_(), p_46592_, p_46591_);
-      }
-
-      if (p_46593_ != Direction.EAST) {
-         this.m_46586_(p_46591_.m_142126_(), p_46592_, p_46591_);
-      }
-
-      if (p_46593_ != Direction.DOWN) {
-         this.m_46586_(p_46591_.m_7495_(), p_46592_, p_46591_);
-      }
-
-      if (p_46593_ != Direction.UP) {
-         this.m_46586_(p_46591_.m_7494_(), p_46592_, p_46591_);
-      }
-
-      if (p_46593_ != Direction.NORTH) {
-         this.m_46586_(p_46591_.m_142127_(), p_46592_, p_46591_);
-      }
-
-      if (p_46593_ != Direction.SOUTH) {
-         this.m_46586_(p_46591_.m_142128_(), p_46592_, p_46591_);
-      }
-
-   }
-
-   public void m_46586_(BlockPos p_46587_, Block p_46588_, BlockPos p_46589_) {
-      if (!this.f_46443_) {
-         BlockState blockstate = this.m_8055_(p_46587_);
-
-         try {
-            blockstate.m_60690_(this, p_46587_, p_46588_, p_46589_, false);
-         } catch (Throwable throwable) {
-            CrashReport crashreport = CrashReport.m_127521_(throwable, "Exception while updating neighbours");
-            CrashReportCategory crashreportcategory = crashreport.m_127514_("Block being updated");
-            crashreportcategory.m_128165_("Source block type", () -> {
-               try {
-                  return String.format("ID #%s (%s // %s)", Registry.f_122824_.m_7981_(p_46588_), p_46588_.m_7705_(), p_46588_.getClass().getCanonicalName());
-               } catch (Throwable throwable1) {
-                  return "ID #" + Registry.f_122824_.m_7981_(p_46588_);
-               }
-            });
-            CrashReportCategory.m_178950_(crashreportcategory, this, p_46587_, blockstate);
-            throw new ReportedException(crashreport);
-         }
-      }
-   }
-
-   public int m_6924_(Heightmap.Types p_46571_, int p_46572_, int p_46573_) {
-      int i;
-      if (p_46572_ >= -30000000 && p_46573_ >= -30000000 && p_46572_ < 30000000 && p_46573_ < 30000000) {
-         if (this.m_7232_(SectionPos.m_123171_(p_46572_), SectionPos.m_123171_(p_46573_))) {
-            i = this.m_6325_(SectionPos.m_123171_(p_46572_), SectionPos.m_123171_(p_46573_)).m_5885_(p_46571_, p_46572_ & 15, p_46573_ & 15) + 1;
-         } else {
-            i = this.m_141937_();
-         }
-      } else {
-         i = this.m_5736_() + 1;
-      }
-
-      return i;
-   }
-
-   public LevelLightEngine m_5518_() {
-      return this.m_7726_().m_7827_();
-   }
-
-   public BlockState m_8055_(BlockPos p_46732_) {
-      if (this.m_151570_(p_46732_)) {
-         return Blocks.f_50626_.m_49966_();
-      } else {
-         LevelChunk levelchunk = this.m_6325_(SectionPos.m_123171_(p_46732_.m_123341_()), SectionPos.m_123171_(p_46732_.m_123343_()));
-         return levelchunk.m_8055_(p_46732_);
-      }
-   }
-
-   public FluidState m_6425_(BlockPos p_46671_) {
-      if (this.m_151570_(p_46671_)) {
-         return Fluids.f_76191_.m_76145_();
-      } else {
-         LevelChunk levelchunk = this.m_46745_(p_46671_);
-         return levelchunk.m_6425_(p_46671_);
-      }
-   }
-
-   public boolean m_46461_() {
-      return !this.m_6042_().m_63967_() && this.f_46425_ < 4;
-   }
-
-   public boolean m_46462_() {
-      return !this.m_6042_().m_63967_() && !this.m_46461_();
-   }
-
-   public void m_5594_(@Nullable Player p_46560_, BlockPos p_46561_, SoundEvent p_46562_, SoundSource p_46563_, float p_46564_, float p_46565_) {
-      this.m_6263_(p_46560_, (double)p_46561_.m_123341_() + 0.5D, (double)p_46561_.m_123342_() + 0.5D, (double)p_46561_.m_123343_() + 0.5D, p_46562_, p_46563_, p_46564_, p_46565_);
-   }
-
-   public abstract void m_6263_(@Nullable Player p_46543_, double p_46544_, double p_46545_, double p_46546_, SoundEvent p_46547_, SoundSource p_46548_, float p_46549_, float p_46550_);
-
-   public abstract void m_6269_(@Nullable Player p_46551_, Entity p_46552_, SoundEvent p_46553_, SoundSource p_46554_, float p_46555_, float p_46556_);
-
-   public void m_7785_(double p_46482_, double p_46483_, double p_46484_, SoundEvent p_46485_, SoundSource p_46486_, float p_46487_, float p_46488_, boolean p_46489_) {
-   }
-
-   public void m_7106_(ParticleOptions p_46631_, double p_46632_, double p_46633_, double p_46634_, double p_46635_, double p_46636_, double p_46637_) {
-   }
-
-   public void m_6493_(ParticleOptions p_46638_, boolean p_46639_, double p_46640_, double p_46641_, double p_46642_, double p_46643_, double p_46644_, double p_46645_) {
-   }
-
-   public void m_7107_(ParticleOptions p_46684_, double p_46685_, double p_46686_, double p_46687_, double p_46688_, double p_46689_, double p_46690_) {
-   }
-
-   public void m_6485_(ParticleOptions p_46691_, boolean p_46692_, double p_46693_, double p_46694_, double p_46695_, double p_46696_, double p_46697_, double p_46698_) {
-   }
-
-   public float m_46490_(float p_46491_) {
-      float f = this.m_46942_(p_46491_);
-      return f * ((float)Math.PI * 2F);
-   }
-
-   public void m_151525_(TickingBlockEntity p_151526_) {
-      (this.f_151504_ ? this.f_151503_ : this.f_151512_).add(p_151526_);
-   }
-
-   protected void m_46463_() {
-      ProfilerFiller profilerfiller = this.m_46473_();
-      profilerfiller.m_6180_("blockEntities");
-      this.f_151504_ = true;
-      if (!this.f_151503_.isEmpty()) {
-         this.f_151512_.addAll(this.f_151503_);
-         this.f_151503_.clear();
-      }
-
-      Iterator<TickingBlockEntity> iterator = this.f_151512_.iterator();
-
-      while(iterator.hasNext()) {
-         TickingBlockEntity tickingblockentity = iterator.next();
-         if (tickingblockentity.m_142220_()) {
-            iterator.remove();
-         } else if (this.m_183438_(ChunkPos.m_151388_(tickingblockentity.m_142689_()))) {
-            tickingblockentity.m_142224_();
-         }
-      }
-
-      this.f_151504_ = false;
-      profilerfiller.m_7238_();
-   }
-
-   public <T extends Entity> void m_46653_(Consumer<T> p_46654_, T p_46655_) {
-      try {
-         p_46654_.accept(p_46655_);
-      } catch (Throwable throwable) {
-         CrashReport crashreport = CrashReport.m_127521_(throwable, "Ticking entity");
-         CrashReportCategory crashreportcategory = crashreport.m_127514_("Entity being ticked");
-         p_46655_.m_7976_(crashreportcategory);
-         throw new ReportedException(crashreport);
-      }
-   }
-
-   public boolean m_183599_(Entity p_186458_) {
-      return true;
-   }
-
-   public boolean m_183438_(long p_186456_) {
-      return true;
-   }
-
-   public Explosion m_46511_(@Nullable Entity p_46512_, double p_46513_, double p_46514_, double p_46515_, float p_46516_, Explosion.BlockInteraction p_46517_) {
-      return this.m_7703_(p_46512_, (DamageSource)null, (ExplosionDamageCalculator)null, p_46513_, p_46514_, p_46515_, p_46516_, false, p_46517_);
-   }
-
-   public Explosion m_46518_(@Nullable Entity p_46519_, double p_46520_, double p_46521_, double p_46522_, float p_46523_, boolean p_46524_, Explosion.BlockInteraction p_46525_) {
-      return this.m_7703_(p_46519_, (DamageSource)null, (ExplosionDamageCalculator)null, p_46520_, p_46521_, p_46522_, p_46523_, p_46524_, p_46525_);
-   }
-
-   public Explosion m_7703_(@Nullable Entity p_46526_, @Nullable DamageSource p_46527_, @Nullable ExplosionDamageCalculator p_46528_, double p_46529_, double p_46530_, double p_46531_, float p_46532_, boolean p_46533_, Explosion.BlockInteraction p_46534_) {
-      Explosion explosion = new Explosion(this, p_46526_, p_46527_, p_46528_, p_46529_, p_46530_, p_46531_, p_46532_, p_46533_, p_46534_);
-      explosion.m_46061_();
-      explosion.m_46075_(true);
-      return explosion;
-   }
-
-   public abstract String m_46464_();
-
-   @Nullable
-   public BlockEntity m_7702_(BlockPos p_46716_) {
-      if (this.m_151570_(p_46716_)) {
-         return null;
-      } else {
-         return !this.f_46443_ && Thread.currentThread() != this.f_46423_ ? null : this.m_46745_(p_46716_).m_5685_(p_46716_, LevelChunk.EntityCreationType.IMMEDIATE);
-      }
-   }
-
-   public void m_151523_(BlockEntity p_151524_) {
-      BlockPos blockpos = p_151524_.m_58899_();
-      if (!this.m_151570_(blockpos)) {
-         this.m_46745_(blockpos).m_142170_(p_151524_);
-      }
-   }
-
-   public void m_46747_(BlockPos p_46748_) {
-      if (!this.m_151570_(p_46748_)) {
-         this.m_46745_(p_46748_).m_8114_(p_46748_);
-      }
-   }
-
-   public boolean m_46749_(BlockPos p_46750_) {
-      return this.m_151570_(p_46750_) ? false : this.m_7726_().m_5563_(SectionPos.m_123171_(p_46750_.m_123341_()), SectionPos.m_123171_(p_46750_.m_123343_()));
-   }
-
-   public boolean m_46578_(BlockPos p_46579_, Entity p_46580_, Direction p_46581_) {
-      if (this.m_151570_(p_46579_)) {
-         return false;
-      } else {
-         ChunkAccess chunkaccess = this.m_6522_(SectionPos.m_123171_(p_46579_.m_123341_()), SectionPos.m_123171_(p_46579_.m_123343_()), ChunkStatus.f_62326_, false);
-         return chunkaccess == null ? false : chunkaccess.m_8055_(p_46579_).m_60638_(this, p_46579_, p_46580_, p_46581_);
-      }
-   }
-
-   public boolean m_46575_(BlockPos p_46576_, Entity p_46577_) {
-      return this.m_46578_(p_46576_, p_46577_, Direction.UP);
-   }
-
-   public void m_46465_() {
-      double d0 = 1.0D - (double)(this.m_46722_(1.0F) * 5.0F) / 16.0D;
-      double d1 = 1.0D - (double)(this.m_46661_(1.0F) * 5.0F) / 16.0D;
-      double d2 = 0.5D + 2.0D * Mth.m_14008_((double)Mth.m_14089_(this.m_46942_(1.0F) * ((float)Math.PI * 2F)), -0.25D, 0.25D);
-      this.f_46425_ = (int)((1.0D - d2 * d0 * d1) * 11.0D);
-   }
-
-   public void m_46703_(boolean p_46704_, boolean p_46705_) {
-      this.m_7726_().m_6707_(p_46704_, p_46705_);
-   }
-
-   protected void m_46466_() {
-      if (this.f_46442_.m_6533_()) {
-         this.f_46438_ = 1.0F;
-         if (this.f_46442_.m_6534_()) {
-            this.f_46440_ = 1.0F;
-         }
-      }
-
-   }
-
-   public void close() throws IOException {
-      this.m_7726_().close();
-   }
-
-   @Nullable
-   public BlockGetter m_7925_(int p_46711_, int p_46712_) {
-      return this.m_6522_(p_46711_, p_46712_, ChunkStatus.f_62326_, false);
-   }
-
-   public List<Entity> m_6249_(@Nullable Entity p_46536_, AABB p_46537_, Predicate<? super Entity> p_46538_) {
-      this.m_46473_().m_6174_("getEntities");
-      List<Entity> list = Lists.newArrayList();
-      this.m_142646_().m_142232_(p_46537_, (p_151522_) -> {
-         if (p_151522_ != p_46536_ && p_46538_.test(p_151522_)) {
-            list.add(p_151522_);
-         }
-
-         if (p_151522_ instanceof EnderDragon) {
-            for(EnderDragonPart enderdragonpart : ((EnderDragon)p_151522_).m_31156_()) {
-               if (p_151522_ != p_46536_ && p_46538_.test(enderdragonpart)) {
-                  list.add(enderdragonpart);
-               }
-            }
-         }
-
-      });
-      return list;
-   }
-
-   public <T extends Entity> List<T> m_142425_(EntityTypeTest<Entity, T> p_151528_, AABB p_151529_, Predicate<? super T> p_151530_) {
-      this.m_46473_().m_6174_("getEntities");
-      List<T> list = Lists.newArrayList();
-      this.m_142646_().m_142137_(p_151528_, p_151529_, (p_151539_) -> {
-         if (p_151530_.test(p_151539_)) {
-            list.add(p_151539_);
-         }
-
-         if (p_151539_ instanceof EnderDragon) {
-            EnderDragon enderdragon = (EnderDragon)p_151539_;
-
-            for(EnderDragonPart enderdragonpart : enderdragon.m_31156_()) {
-               T t = p_151528_.m_141992_(enderdragonpart);
-               if (t != null && p_151530_.test(t)) {
-                  list.add(t);
-               }
-            }
-         }
-
-      });
-      return list;
-   }
-
-   @Nullable
-   public abstract Entity m_6815_(int p_46492_);
-
-   public void m_151543_(BlockPos p_151544_) {
-      if (this.m_46805_(p_151544_)) {
-         this.m_46745_(p_151544_).m_8092_(true);
-      }
-
-   }
-
-   public int m_5736_() {
-      return 63;
-   }
-
-   public int m_46751_(BlockPos p_46752_) {
-      int i = 0;
-      i = Math.max(i, this.m_46852_(p_46752_.m_7495_(), Direction.DOWN));
-      if (i >= 15) {
-         return i;
-      } else {
-         i = Math.max(i, this.m_46852_(p_46752_.m_7494_(), Direction.UP));
-         if (i >= 15) {
+        }
+        // CraftBukkit end
+        if (this.m_151570_( p_46601_ )) {
+            return false;
+        } else if (!this.f_46443_ && this.m_46659_()) {
+            return false;
+        } else {
+            LevelChunk levelchunk = this.m_46745_( p_46601_ );
+            Block block = p_46602_.m_60734_();
+
+            p_46601_ = p_46601_.m_7949_(); // Forge - prevent mutable BlockPos leaks
+            net.minecraftforge.common.util.BlockSnapshot blockSnapshot = null;
+            if (this.captureBlockSnapshots && !this.f_46443_) {
+                blockSnapshot = net.minecraftforge.common.util.BlockSnapshot.create( this.f_46421_, this, p_46601_, p_46603_ );
+                this.capturedBlockSnapshots.add( blockSnapshot );
+            }
+
+            BlockState old = m_8055_( p_46601_ );
+            int oldLight = old.getLightEmission( this, p_46601_ );
+            int oldOpacity = old.m_60739_( this, p_46601_ );
+
+            // CraftBukkit start - capture blockstates
+            boolean captured = false;
+            if (this.captureBlockStates && !this.capturedBlockStates.containsKey( p_46601_ )) {
+                CapturedBlockState blockstate = CapturedBlockState.getBlockState( this, p_46601_, p_46603_ );
+                this.capturedBlockStates.put( p_46601_.m_7949_(), blockstate );
+                captured = true;
+            }
+            // CraftBukkit end
+            BlockState blockstate = levelchunk.setBlockState( p_46601_, p_46602_, (p_46603_ & 64) != 0, (p_46603_ & 1024) == 0 ); // CraftBukkit custom NO_PLACE flag
+
+            if (blockstate == null) {
+                // CraftBukkit start - remove blockstate if failed (or the same)
+                if (this.captureBlockStates && captured) {
+                    this.capturedBlockStates.remove( p_46601_ );
+                }
+                // CraftBukkit end
+                if (blockSnapshot != null) this.capturedBlockSnapshots.remove( blockSnapshot );
+                return false;
+            } else {
+                BlockState blockstate1 = this.m_8055_( p_46601_ );
+                if ((p_46603_ & 128) == 0 && blockstate1 != blockstate && (blockstate1.m_60739_( this, p_46601_ ) != oldOpacity || blockstate1.getLightEmission( this, p_46601_ ) != oldLight || blockstate1.m_60787_() || blockstate.m_60787_())) {
+                    this.m_46473_().m_6180_( "queueCheckLight" );
+                    this.m_7726_().m_7827_().m_142202_( p_46601_ );
+                    this.m_46473_().m_7238_();
+                }
+
+                if (blockSnapshot == null) { // Don't notify clients or update physics while capturing blockstates
+                    // Spigot start
+                    try {
+                        this.markAndNotifyBlock( p_46601_, levelchunk, blockstate, p_46602_, p_46603_, p_46608_ );
+                    } catch (StackOverflowError ex) {
+                        lastPhysicsProblem = new BlockPos(p_46601_);
+                    }
+                    // Spigot end
+                }
+
+                return true;
+            }
+        }
+    }
+
+    public boolean m_6933_(BlockPos p_46605_, BlockState p_46606_, int p_46607_, int p_46608_) {
+        setBlock_int = p_46608_;
+        return m_7731_( p_46605_, p_46606_, p_46607_ );
+    }
+    //Magma end
+
+    // Split off from original setBlockState(BlockPos, BlockState, int, int) method in order to directly send client and physic updates
+    public void markAndNotifyBlock(BlockPos p_46605_, @Nullable LevelChunk levelchunk, BlockState blockstate, BlockState p_46606_, int p_46607_, int p_46608_) {
+        Block block = p_46606_.m_60734_();
+        BlockState blockstate1 = m_8055_( p_46605_ );
+        {
+            {
+                if (blockstate1 == p_46606_) {
+                    if (blockstate != blockstate1) {
+                        this.m_6550_( p_46605_, blockstate, blockstate1 );
+                    }
+
+                    if ((p_46607_ & 2) != 0 && (!this.f_46443_ || (p_46607_ & 4) == 0) && (this.f_46443_ || levelchunk.m_6708_() != null && levelchunk.m_6708_().m_140114_( ChunkHolder.FullChunkStatus.TICKING ))) {
+                        this.m_7260_( p_46605_, blockstate, p_46606_, p_46607_ );
+                    }
+
+                    if ((p_46607_ & 1) != 0) {
+                        this.m_6289_( p_46605_, blockstate.m_60734_() );
+                        if (!this.f_46443_ && p_46606_.m_60807_()) {
+                            this.m_46717_( p_46605_, block );
+                        }
+                    }
+
+                    if ((p_46607_ & 16) == 0 && p_46608_ > 0) {
+                        int i = p_46607_ & -34;
+                        blockstate.m_60762_( this, p_46605_, i, p_46608_ - 1 );
+
+                        // CraftBukkit start
+                        CraftWorld world = ((ServerLevel) this).getWorld();
+                        if (world != null) {
+                            BlockPhysicsEvent event = new BlockPhysicsEvent( world.getBlockAt( p_46605_.m_123341_(), p_46605_.m_123342_(), p_46605_.m_123343_() ), CraftBlockData.fromData( p_46606_ ) );
+                            this.getCraftServer().getPluginManager().callEvent( event );
+                            if (event.isCancelled()) {
+                                return;
+                            }
+                        }
+                        // CraftBukkit end
+
+                        p_46606_.m_60705_( this, p_46605_, i, p_46608_ - 1 );
+                        p_46606_.m_60762_( this, p_46605_, i, p_46608_ - 1 );
+                    }
+
+                    this.m_6559_( p_46605_, blockstate, blockstate1 );
+                    p_46606_.onBlockStateChange(this, p_46605_, blockstate);
+                }
+            }
+        }
+    }
+
+    public void m_6559_(BlockPos p_46609_, BlockState p_46610_, BlockState p_46611_) {
+    }
+
+    public boolean m_7471_(BlockPos p_46623_, boolean p_46624_) {
+        FluidState fluidstate = this.m_6425_( p_46623_ );
+        return this.m_7731_( p_46623_, fluidstate.m_76188_(), 3 | (p_46624_ ? 64 : 0) );
+    }
+
+    public boolean m_7740_(BlockPos p_46626_, boolean p_46627_, @Nullable Entity p_46628_, int p_46629_) {
+        BlockState blockstate = this.m_8055_( p_46626_ );
+        if (blockstate.m_60795_()) {
+            return false;
+        } else {
+            FluidState fluidstate = this.m_6425_( p_46626_ );
+            if (!(blockstate.m_60734_() instanceof BaseFireBlock)) {
+                this.m_46796_( 2001, p_46626_, Block.m_49956_( blockstate ) );
+            }
+
+            if (p_46627_) {
+                BlockEntity blockentity = blockstate.m_155947_() ? this.m_7702_( p_46626_ ) : null;
+                Block.m_49881_( blockstate, this, p_46626_, blockentity, p_46628_, ItemStack.f_41583_ );
+            }
+
+            boolean flag = this.m_6933_( p_46626_, fluidstate.m_76188_(), 3, p_46629_ );
+            if (flag) {
+                this.m_142346_( p_46628_, GameEvent.f_157794_, p_46626_ );
+            }
+
+            return flag;
+        }
+    }
+
+    public void m_142052_(BlockPos p_151531_, BlockState p_151532_) {
+    }
+
+    public boolean m_46597_(BlockPos p_46598_, BlockState p_46599_) {
+        return this.m_7731_( p_46598_, p_46599_, 3 );
+    }
+
+    public abstract void m_7260_(BlockPos p_46612_, BlockState p_46613_, BlockState p_46614_, int p_46615_);
+
+    public void m_6550_(BlockPos p_46678_, BlockState p_46679_, BlockState p_46680_) {
+    }
+
+    public void m_46672_(BlockPos p_46673_, Block p_46674_) {
+        if (net.minecraftforge.event.ForgeEventFactory.onNeighborNotify( this, p_46673_, this.m_8055_( p_46673_ ), java.util.EnumSet.allOf( Direction.class ), false ).isCanceled())
+            return;
+        this.m_46586_( p_46673_.m_142125_(), p_46674_, p_46673_ );
+        this.m_46586_( p_46673_.m_142126_(), p_46674_, p_46673_ );
+        this.m_46586_( p_46673_.m_7495_(), p_46674_, p_46673_ );
+        this.m_46586_( p_46673_.m_7494_(), p_46674_, p_46673_ );
+        this.m_46586_( p_46673_.m_142127_(), p_46674_, p_46673_ );
+        this.m_46586_( p_46673_.m_142128_(), p_46674_, p_46673_ );
+    }
+
+    public void m_46590_(BlockPos p_46591_, Block p_46592_, Direction p_46593_) {
+        java.util.EnumSet<Direction> directions = java.util.EnumSet.allOf( Direction.class );
+        directions.remove( p_46593_ );
+        if (net.minecraftforge.event.ForgeEventFactory.onNeighborNotify( this, p_46591_, this.m_8055_( p_46591_ ), directions, false ).isCanceled())
+            return;
+
+        if (p_46593_ != Direction.WEST) {
+            this.m_46586_( p_46591_.m_142125_(), p_46592_, p_46591_ );
+        }
+
+        if (p_46593_ != Direction.EAST) {
+            this.m_46586_( p_46591_.m_142126_(), p_46592_, p_46591_ );
+        }
+
+        if (p_46593_ != Direction.DOWN) {
+            this.m_46586_( p_46591_.m_7495_(), p_46592_, p_46591_ );
+        }
+
+        if (p_46593_ != Direction.UP) {
+            this.m_46586_( p_46591_.m_7494_(), p_46592_, p_46591_ );
+        }
+
+        if (p_46593_ != Direction.NORTH) {
+            this.m_46586_( p_46591_.m_142127_(), p_46592_, p_46591_ );
+        }
+
+        if (p_46593_ != Direction.SOUTH) {
+            this.m_46586_( p_46591_.m_142128_(), p_46592_, p_46591_ );
+        }
+
+    }
+
+    public void m_46586_(BlockPos p_46587_, Block p_46588_, BlockPos p_46589_) {
+        if (!this.f_46443_) {
+            BlockState blockstate = this.m_8055_( p_46587_ );
+
+            try {
+                // CraftBukkit start
+                CraftWorld world = ((ServerLevel) this).getWorld();
+                if (world != null) {
+                    BlockPhysicsEvent event = new BlockPhysicsEvent( world.getBlockAt( p_46587_.m_123341_(), p_46587_.m_123342_(), p_46587_.m_123343_() ), CraftBlockData.fromData( blockstate ), world.getBlockAt( p_46589_.m_123341_(), p_46589_.m_123342_(), p_46589_.m_123343_() ) );
+                    this.getCraftServer().getPluginManager().callEvent( event );
+
+                    if (event.isCancelled()) {
+                        return;
+                    }
+                }
+                // CraftBukkit end
+                blockstate.m_60690_( this, p_46587_, p_46588_, p_46589_, false );
+                // Spigot Start
+            } catch (StackOverflowError ex) {
+                lastPhysicsProblem = new BlockPos(p_46587_);
+                // Spigot End
+            } catch (Throwable throwable) {
+                CrashReport crashreport = CrashReport.m_127521_( throwable, "Exception while updating neighbours" );
+                CrashReportCategory crashreportcategory = crashreport.m_127514_( "Block being updated" );
+                crashreportcategory.m_128165_( "Source block type", () -> {
+                    try {
+                        return String.format( "ID #%s (%s // %s)", p_46588_.getRegistryName(), p_46588_.m_7705_(), p_46588_.getClass().getCanonicalName() );
+                    } catch (Throwable throwable1) {
+                        return "ID #" + p_46588_.getRegistryName();
+                    }
+                } );
+                CrashReportCategory.m_178950_( crashreportcategory, this, p_46587_, blockstate );
+                throw new ReportedException( crashreport );
+            }
+        }
+    }
+
+    public int m_6924_(Heightmap.Types p_46571_, int p_46572_, int p_46573_) {
+        int i;
+        if (p_46572_ >= -30000000 && p_46573_ >= -30000000 && p_46572_ < 30000000 && p_46573_ < 30000000) {
+            if (this.m_7232_( SectionPos.m_123171_( p_46572_ ), SectionPos.m_123171_( p_46573_ ) )) {
+                i = this.m_6325_( SectionPos.m_123171_( p_46572_ ), SectionPos.m_123171_( p_46573_ ) ).m_5885_( p_46571_, p_46572_ & 15, p_46573_ & 15 ) + 1;
+            } else {
+                i = this.m_141937_();
+            }
+        } else {
+            i = this.m_5736_() + 1;
+        }
+
+        return i;
+    }
+
+    public LevelLightEngine m_5518_() {
+        return this.m_7726_().m_7827_();
+    }
+
+    public BlockState m_8055_(BlockPos p_46732_) {
+        // CraftBukkit start - tree generation
+        if (captureTreeGeneration) {
+            CapturedBlockState previous = capturedBlockStates.get( p_46732_ );
+            if (previous != null) {
+                return previous.getHandle();
+            }
+        }
+        // CraftBukkit end
+        if (this.m_151570_( p_46732_ )) {
+            return Blocks.f_50626_.m_49966_();
+        } else {
+            LevelChunk levelchunk = this.m_6325_( SectionPos.m_123171_( p_46732_.m_123341_() ), SectionPos.m_123171_( p_46732_.m_123343_() ) );
+            return levelchunk.m_8055_( p_46732_ );
+        }
+    }
+
+    public FluidState m_6425_(BlockPos p_46671_) {
+        if (this.m_151570_( p_46671_ )) {
+            return Fluids.f_76191_.m_76145_();
+        } else {
+            LevelChunk levelchunk = this.m_46745_( p_46671_ );
+            return levelchunk.m_6425_( p_46671_ );
+        }
+    }
+
+    public boolean m_46461_() {
+        return !this.m_6042_().m_63967_() && this.f_46425_ < 4;
+    }
+
+    public boolean m_46462_() {
+        return !this.m_6042_().m_63967_() && !this.m_46461_();
+    }
+
+    public void m_5594_(@Nullable Player p_46560_, BlockPos p_46561_, SoundEvent p_46562_, SoundSource p_46563_, float p_46564_, float p_46565_) {
+        this.m_6263_( p_46560_, (double) p_46561_.m_123341_() + 0.5D, (double) p_46561_.m_123342_() + 0.5D, (double) p_46561_.m_123343_() + 0.5D, p_46562_, p_46563_, p_46564_, p_46565_ );
+    }
+
+    public abstract void m_6263_(@Nullable Player p_46543_, double p_46544_, double p_46545_, double p_46546_, SoundEvent p_46547_, SoundSource p_46548_, float p_46549_, float p_46550_);
+
+    public abstract void m_6269_(@Nullable Player p_46551_, Entity p_46552_, SoundEvent p_46553_, SoundSource p_46554_, float p_46555_, float p_46556_);
+
+    public void m_7785_(double p_46482_, double p_46483_, double p_46484_, SoundEvent p_46485_, SoundSource p_46486_, float p_46487_, float p_46488_, boolean p_46489_) {
+    }
+
+    public void m_7106_(ParticleOptions p_46631_, double p_46632_, double p_46633_, double p_46634_, double p_46635_, double p_46636_, double p_46637_) {
+    }
+
+    public void m_6493_(ParticleOptions p_46638_, boolean p_46639_, double p_46640_, double p_46641_, double p_46642_, double p_46643_, double p_46644_, double p_46645_) {
+    }
+
+    public void m_7107_(ParticleOptions p_46684_, double p_46685_, double p_46686_, double p_46687_, double p_46688_, double p_46689_, double p_46690_) {
+    }
+
+    public void m_6485_(ParticleOptions p_46691_, boolean p_46692_, double p_46693_, double p_46694_, double p_46695_, double p_46696_, double p_46697_, double p_46698_) {
+    }
+
+    public float m_46490_(float p_46491_) {
+        float f = this.m_46942_( p_46491_ );
+        return f * ((float) Math.PI * 2F);
+    }
+
+    public void m_151525_(TickingBlockEntity p_151526_) {
+        (this.f_151504_ ? this.f_151503_ : this.f_151512_).add( p_151526_ );
+    }
+
+    public void addFreshBlockEntities(java.util.Collection<BlockEntity> beList) {
+        if (this.f_151504_) {
+            this.pendingFreshBlockEntities.addAll( beList );
+        } else {
+            this.freshBlockEntities.addAll( beList );
+        }
+    }
+
+    protected void m_46463_() {
+        ProfilerFiller profilerfiller = this.m_46473_();
+        profilerfiller.m_6180_( "blockEntities" );
+        timings.tileEntityPending.startTiming(); // Spigot
+        if (!this.pendingFreshBlockEntities.isEmpty()) {
+            this.freshBlockEntities.addAll( this.pendingFreshBlockEntities );
+            this.pendingFreshBlockEntities.clear();
+        }
+
+        this.f_151504_ = true;
+        if (!this.freshBlockEntities.isEmpty()) {
+            this.freshBlockEntities.forEach( BlockEntity::onLoad );
+            this.freshBlockEntities.clear();
+        }
+        if (!this.f_151503_.isEmpty()) {
+            this.f_151512_.addAll( this.f_151503_ );
+            this.f_151503_.clear();
+        }
+        timings.tileEntityPending.stopTiming(); // Spigot
+
+        timings.tileEntityTick.startTiming(); // Spigot
+        Iterator<TickingBlockEntity> iterator = this.f_151512_.iterator();
+
+        // Spigot start
+        int tilesThisCycle = 0;
+        for (tileLimiter.initTick();
+             tilesThisCycle < f_151512_.size() && (tilesThisCycle % 10 != 0 || tileLimiter.shouldContinue());
+             tileTickPosition++, tilesThisCycle++) {
+            tileTickPosition = (tileTickPosition < f_151512_.size()) ? tileTickPosition : 0;
+            TickingBlockEntity tickingblockentity = (TickingBlockEntity) this.f_151512_.get(tileTickPosition);
+            // Spigot start
+            if (tickingblockentity == null) {
+                getCraftServer().getLogger().severe( "Spigot has detected a null entity and has removed it, preventing a crash" );
+                tilesThisCycle--;
+                this.f_151512_.remove(tileTickPosition--);
+                continue;
+            }
+            // Spigot end
+            if (tickingblockentity.m_142220_()) {
+                // Spigot start
+                tilesThisCycle--;
+                this.f_151512_.remove(tileTickPosition--);
+                // Spigot end
+            } else if (this.m_183438_( ChunkPos.m_151388_( tickingblockentity.m_142689_() ) )) {
+                tickingblockentity.m_142224_();
+            }
+        }
+
+        timings.tileEntityTick.stopTiming(); // Spigot
+        this.f_151504_ = false;
+        co.aikar.timings.TimingHistory.tileEntityTicks += this.f_151512_.size(); // Paper
+        profilerfiller.m_7238_();
+        spigotConfig.currentPrimedTnt = 0; // Spigot
+    }
+
+    public <T extends Entity> void m_46653_(Consumer<T> p_46654_, T p_46655_) {
+        try {
+            net.minecraftforge.server.timings.TimeTracker.ENTITY_UPDATE.trackStart( p_46655_ );
+            p_46654_.accept( p_46655_ );
+        } catch (Throwable throwable) {
+            CrashReport crashreport = CrashReport.m_127521_( throwable, "Ticking entity" );
+            CrashReportCategory crashreportcategory = crashreport.m_127514_( "Entity being ticked" );
+            p_46655_.m_7976_( crashreportcategory );
+            if (net.minecraftforge.common.ForgeConfig.SERVER.removeErroringEntities.get()) {
+                com.mojang.logging.LogUtils.getLogger().error( "{}", crashreport.m_127526_() );
+                p_46655_.m_146870_();
+            } else
+                throw new ReportedException( crashreport );
+        } finally {
+            net.minecraftforge.server.timings.TimeTracker.ENTITY_UPDATE.trackEnd( p_46655_ );
+        }
+    }
+
+    public boolean m_183599_(Entity p_186458_) {
+        return true;
+    }
+
+    public boolean m_183438_(long p_186456_) {
+        return true;
+    }
+
+    //Magma start - fix mixin inject error
+    private boolean explosion_createFire = false;
+    public void prepareExplosion(boolean fire) {
+        explosion_createFire = fire;
+    }
+
+    public Explosion m_46511_(@Nullable Entity p_46512_, double p_46513_, double p_46514_, double p_46515_, float p_46516_, Explosion.BlockInteraction p_46517_) {
+        boolean temp = explosion_createFire;
+        explosion_createFire = false;
+        return this.m_7703_( p_46512_, (DamageSource) null, (ExplosionDamageCalculator) null, p_46513_, p_46514_, p_46515_, p_46516_, temp, p_46517_ );
+    }
+    //Magma end
+
+    public Explosion m_46518_(@Nullable Entity p_46519_, double p_46520_, double p_46521_, double p_46522_, float p_46523_, boolean p_46524_, Explosion.BlockInteraction p_46525_) {
+        return this.m_7703_( p_46519_, (DamageSource) null, (ExplosionDamageCalculator) null, p_46520_, p_46521_, p_46522_, p_46523_, p_46524_, p_46525_ );
+    }
+
+    public Explosion m_7703_(@Nullable Entity p_46526_, @Nullable DamageSource p_46527_, @Nullable ExplosionDamageCalculator p_46528_, double p_46529_, double p_46530_, double p_46531_, float p_46532_, boolean p_46533_, Explosion.BlockInteraction p_46534_) {
+        Explosion explosion = new Explosion( this, p_46526_, p_46527_, p_46528_, p_46529_, p_46530_, p_46531_, p_46532_, p_46533_, p_46534_ );
+        if (net.minecraftforge.event.ForgeEventFactory.onExplosionStart( this, explosion )) return explosion;
+        explosion.m_46061_();
+        explosion.m_46075_( true );
+        return explosion;
+    }
+
+    public abstract String m_46464_();
+
+    @Nullable
+    public BlockEntity m_7702_(BlockPos p_46716_) {
+        // CraftBukkit start - Magma - doing this is weird validate is never used so why is it here? should we remove it?
+        return getBlockEntity( p_46716_, true );
+    }
+
+    @Nullable
+    public BlockEntity getBlockEntity(BlockPos p_46716_, boolean validate) {
+        if (capturedTileEntities.containsKey( p_46716_ )) {
+            return capturedTileEntities.get( p_46716_ );
+        }
+        // CraftBukkit end
+        if (this.m_151570_( p_46716_ )) {
+            return null;
+        } else {
+            return !this.f_46443_ && Thread.currentThread() != this.f_46423_ ? null : this.m_46745_( p_46716_ ).m_5685_( p_46716_, LevelChunk.EntityCreationType.IMMEDIATE );
+        }
+    }
+
+    public void m_151523_(BlockEntity p_151524_) {
+        BlockPos blockpos = p_151524_.m_58899_();
+        if (!this.m_151570_( blockpos )) {
+            // CraftBukkit start
+            if (captureBlockStates) {
+                capturedTileEntities.put( blockpos.m_7949_(), p_151524_ );
+                return;
+            }
+            // CraftBukkit end
+            this.m_46745_( blockpos ).m_142170_( p_151524_ );
+        }
+    }
+
+    public void m_46747_(BlockPos p_46748_) {
+        if (!this.m_151570_( p_46748_ )) {
+            this.m_46745_( p_46748_ ).m_8114_( p_46748_ );
+        }
+        this.m_46717_( p_46748_, m_8055_( p_46748_ ).m_60734_() ); //Notify neighbors of changes
+    }
+
+    public boolean m_46749_(BlockPos p_46750_) {
+        return this.m_151570_( p_46750_ ) ? false : this.m_7726_().m_5563_( SectionPos.m_123171_( p_46750_.m_123341_() ), SectionPos.m_123171_( p_46750_.m_123343_() ) );
+    }
+
+    public boolean m_46578_(BlockPos p_46579_, Entity p_46580_, Direction p_46581_) {
+        if (this.m_151570_( p_46579_ )) {
+            return false;
+        } else {
+            ChunkAccess chunkaccess = this.m_6522_( SectionPos.m_123171_( p_46579_.m_123341_() ), SectionPos.m_123171_( p_46579_.m_123343_() ), ChunkStatus.f_62326_, false );
+            return chunkaccess == null ? false : chunkaccess.m_8055_( p_46579_ ).m_60638_( this, p_46579_, p_46580_, p_46581_ );
+        }
+    }
+
+    public boolean m_46575_(BlockPos p_46576_, Entity p_46577_) {
+        return this.m_46578_( p_46576_, p_46577_, Direction.UP );
+    }
+
+    public void m_46465_() {
+        double d0 = 1.0D - (double) (this.m_46722_( 1.0F ) * 5.0F) / 16.0D;
+        double d1 = 1.0D - (double) (this.m_46661_( 1.0F ) * 5.0F) / 16.0D;
+        double d2 = 0.5D + 2.0D * Mth.m_14008_( (double) Mth.m_14089_( this.m_46942_( 1.0F ) * ((float) Math.PI * 2F) ), -0.25D, 0.25D );
+        this.f_46425_ = (int) ((1.0D - d2 * d0 * d1) * 11.0D);
+    }
+
+    public void m_46703_(boolean p_46704_, boolean p_46705_) {
+        this.m_7726_().m_6707_( p_46704_, p_46705_ );
+    }
+
+    protected void m_46466_() {
+        if (this.f_46442_.m_6533_()) {
+            this.f_46438_ = 1.0F;
+            if (this.f_46442_.m_6534_()) {
+                this.f_46440_ = 1.0F;
+            }
+        }
+
+    }
+
+    public void close() throws IOException {
+        this.m_7726_().close();
+    }
+
+    @Nullable
+    public BlockGetter m_7925_(int p_46711_, int p_46712_) {
+        return this.m_6522_( p_46711_, p_46712_, ChunkStatus.f_62326_, false );
+    }
+
+    public List<Entity> m_6249_(@Nullable Entity p_46536_, AABB p_46537_, Predicate<? super Entity> p_46538_) {
+        this.m_46473_().m_6174_( "getEntities" );
+        List<Entity> list = Lists.newArrayList();
+        this.m_142646_().m_142232_( p_46537_, (p_151522_) -> {
+            if (p_151522_ != p_46536_ && p_46538_.test( p_151522_ )) {
+                list.add( p_151522_ );
+            }
+
+            if (false)
+                if (p_151522_ instanceof EnderDragon) {
+                    for (EnderDragonPart enderdragonpart : ((EnderDragon) p_151522_).m_31156_()) {
+                        if (p_151522_ != p_46536_ && p_46538_.test( enderdragonpart )) {
+                            list.add( enderdragonpart );
+                        }
+                    }
+                }
+
+        } );
+        for (net.minecraftforge.entity.PartEntity<?> p : this.getPartEntities()) {
+            if (p != p_46536_ && p.m_142469_().m_82381_( p_46537_ ) && p_46538_.test( p )) {
+                list.add( p );
+            }
+        }
+        return list;
+    }
+
+    public <T extends Entity> List<T> m_142425_(EntityTypeTest<Entity, T> p_151528_, AABB p_151529_, Predicate<? super T> p_151530_) {
+        this.m_46473_().m_6174_( "getEntities" );
+        List<T> list = Lists.newArrayList();
+        this.m_142646_().m_142137_( p_151528_, p_151529_, (p_151539_) -> {
+            if (p_151530_.test( p_151539_ )) {
+                list.add( p_151539_ );
+            }
+
+
+            if (false)
+                if (p_151539_ instanceof EnderDragon) {
+                    EnderDragon enderdragon = (EnderDragon) p_151539_;
+
+                    for (EnderDragonPart enderdragonpart : enderdragon.m_31156_()) {
+                        T t = p_151528_.m_141992_( enderdragonpart );
+                        if (t != null && p_151530_.test( t )) {
+                            list.add( t );
+                        }
+                    }
+                }
+
+        } );
+        for (net.minecraftforge.entity.PartEntity<?> p : this.getPartEntities()) {
+            T t = p_151528_.m_141992_( p );
+            if (t != null && t.m_142469_().m_82381_( p_151529_ ) && p_151530_.test( t )) {
+                list.add( t );
+            }
+        }
+        return list;
+    }
+
+    @Nullable
+    public abstract Entity m_6815_(int p_46492_);
+
+    public void m_151543_(BlockPos p_151544_) {
+        if (this.m_46805_( p_151544_ )) {
+            this.m_46745_( p_151544_ ).m_8092_( true );
+        }
+
+        this.m_46717_( p_151544_, m_8055_( p_151544_ ).m_60734_() ); //Notify neighbors of changes
+    }
+
+    public int m_5736_() {
+        return 63;
+    }
+
+    public int m_46751_(BlockPos p_46752_) {
+        int i = 0;
+        i = Math.max( i, this.m_46852_( p_46752_.m_7495_(), Direction.DOWN ) );
+        if (i >= 15) {
             return i;
-         } else {
-            i = Math.max(i, this.m_46852_(p_46752_.m_142127_(), Direction.NORTH));
+        } else {
+            i = Math.max( i, this.m_46852_( p_46752_.m_7494_(), Direction.UP ) );
             if (i >= 15) {
-               return i;
+                return i;
             } else {
-               i = Math.max(i, this.m_46852_(p_46752_.m_142128_(), Direction.SOUTH));
-               if (i >= 15) {
-                  return i;
-               } else {
-                  i = Math.max(i, this.m_46852_(p_46752_.m_142125_(), Direction.WEST));
-                  if (i >= 15) {
-                     return i;
-                  } else {
-                     i = Math.max(i, this.m_46852_(p_46752_.m_142126_(), Direction.EAST));
-                     return i >= 15 ? i : i;
-                  }
-               }
-            }
-         }
-      }
-   }
-
-   public boolean m_46616_(BlockPos p_46617_, Direction p_46618_) {
-      return this.m_46681_(p_46617_, p_46618_) > 0;
-   }
-
-   public int m_46681_(BlockPos p_46682_, Direction p_46683_) {
-      BlockState blockstate = this.m_8055_(p_46682_);
-      int i = blockstate.m_60746_(this, p_46682_, p_46683_);
-      return blockstate.m_60796_(this, p_46682_) ? Math.max(i, this.m_46751_(p_46682_)) : i;
-   }
-
-   public boolean m_46753_(BlockPos p_46754_) {
-      if (this.m_46681_(p_46754_.m_7495_(), Direction.DOWN) > 0) {
-         return true;
-      } else if (this.m_46681_(p_46754_.m_7494_(), Direction.UP) > 0) {
-         return true;
-      } else if (this.m_46681_(p_46754_.m_142127_(), Direction.NORTH) > 0) {
-         return true;
-      } else if (this.m_46681_(p_46754_.m_142128_(), Direction.SOUTH) > 0) {
-         return true;
-      } else if (this.m_46681_(p_46754_.m_142125_(), Direction.WEST) > 0) {
-         return true;
-      } else {
-         return this.m_46681_(p_46754_.m_142126_(), Direction.EAST) > 0;
-      }
-   }
-
-   public int m_46755_(BlockPos p_46756_) {
-      int i = 0;
-
-      for(Direction direction : f_46422_) {
-         int j = this.m_46681_(p_46756_.m_142300_(direction), direction);
-         if (j >= 15) {
-            return 15;
-         }
-
-         if (j > i) {
-            i = j;
-         }
-      }
-
-      return i;
-   }
-
-   public void m_7462_() {
-   }
-
-   public long m_46467_() {
-      return this.f_46442_.m_6793_();
-   }
-
-   public long m_46468_() {
-      return this.f_46442_.m_6792_();
-   }
-
-   public boolean m_7966_(Player p_46557_, BlockPos p_46558_) {
-      return true;
-   }
-
-   public void m_7605_(Entity p_46509_, byte p_46510_) {
-   }
-
-   public void m_7696_(BlockPos p_46582_, Block p_46583_, int p_46584_, int p_46585_) {
-      this.m_8055_(p_46582_).m_60677_(this, p_46582_, p_46584_, p_46585_);
-   }
-
-   public LevelData m_6106_() {
-      return this.f_46442_;
-   }
-
-   public GameRules m_46469_() {
-      return this.f_46442_.m_5470_();
-   }
-
-   public float m_46661_(float p_46662_) {
-      return Mth.m_14179_(p_46662_, this.f_46439_, this.f_46440_) * this.m_46722_(p_46662_);
-   }
-
-   public void m_46707_(float p_46708_) {
-      float f = Mth.m_14036_(p_46708_, 0.0F, 1.0F);
-      this.f_46439_ = f;
-      this.f_46440_ = f;
-   }
-
-   public float m_46722_(float p_46723_) {
-      return Mth.m_14179_(p_46723_, this.f_46437_, this.f_46438_);
-   }
-
-   public void m_46734_(float p_46735_) {
-      float f = Mth.m_14036_(p_46735_, 0.0F, 1.0F);
-      this.f_46437_ = f;
-      this.f_46438_ = f;
-   }
-
-   public boolean m_46470_() {
-      if (this.m_6042_().m_63935_() && !this.m_6042_().m_63946_()) {
-         return (double)this.m_46661_(1.0F) > 0.9D;
-      } else {
-         return false;
-      }
-   }
-
-   public boolean m_46471_() {
-      return (double)this.m_46722_(1.0F) > 0.2D;
-   }
-
-   public boolean m_46758_(BlockPos p_46759_) {
-      if (!this.m_46471_()) {
-         return false;
-      } else if (!this.m_45527_(p_46759_)) {
-         return false;
-      } else if (this.m_5452_(Heightmap.Types.MOTION_BLOCKING, p_46759_).m_123342_() > p_46759_.m_123342_()) {
-         return false;
-      } else {
-         Biome biome = this.m_204166_(p_46759_).m_203334_();
-         return biome.m_47530_() == Biome.Precipitation.RAIN && biome.m_198906_(p_46759_);
-      }
-   }
-
-   public boolean m_46761_(BlockPos p_46762_) {
-      Biome biome = this.m_204166_(p_46762_).m_203334_();
-      return biome.m_47533_();
-   }
-
-   @Nullable
-   public abstract MapItemSavedData m_7489_(String p_46650_);
-
-   public abstract void m_142325_(String p_151533_, MapItemSavedData p_151534_);
-
-   public abstract int m_7354_();
-
-   public void m_6798_(int p_46665_, BlockPos p_46666_, int p_46667_) {
-   }
-
-   public CrashReportCategory m_6026_(CrashReport p_46656_) {
-      CrashReportCategory crashreportcategory = p_46656_.m_127516_("Affected level", 1);
-      crashreportcategory.m_128165_("All players", () -> {
-         return this.m_6907_().size() + " total; " + this.m_6907_();
-      });
-      crashreportcategory.m_128165_("Chunk stats", this.m_7726_()::m_6754_);
-      crashreportcategory.m_128165_("Level dimension", () -> {
-         return this.m_46472_().m_135782_().toString();
-      });
-
-      try {
-         this.f_46442_.m_142471_(crashreportcategory, this);
-      } catch (Throwable throwable) {
-         crashreportcategory.m_128162_("Level Data Unobtainable", throwable);
-      }
-
-      return crashreportcategory;
-   }
-
-   public abstract void m_6801_(int p_46506_, BlockPos p_46507_, int p_46508_);
-
-   public void m_7228_(double p_46475_, double p_46476_, double p_46477_, double p_46478_, double p_46479_, double p_46480_, @Nullable CompoundTag p_46481_) {
-   }
-
-   public abstract Scoreboard m_6188_();
-
-   public void m_46717_(BlockPos p_46718_, Block p_46719_) {
-      for(Direction direction : Direction.Plane.HORIZONTAL) {
-         BlockPos blockpos = p_46718_.m_142300_(direction);
-         if (this.m_46805_(blockpos)) {
-            BlockState blockstate = this.m_8055_(blockpos);
-            if (blockstate.m_60713_(Blocks.f_50328_)) {
-               blockstate.m_60690_(this, blockpos, p_46719_, p_46718_, false);
-            } else if (blockstate.m_60796_(this, blockpos)) {
-               blockpos = blockpos.m_142300_(direction);
-               blockstate = this.m_8055_(blockpos);
-               if (blockstate.m_60713_(Blocks.f_50328_)) {
-                  blockstate.m_60690_(this, blockpos, p_46719_, p_46718_, false);
-               }
-            }
-         }
-      }
-
-   }
-
-   public DifficultyInstance m_6436_(BlockPos p_46730_) {
-      long i = 0L;
-      float f = 0.0F;
-      if (this.m_46805_(p_46730_)) {
-         f = this.m_46940_();
-         i = this.m_46745_(p_46730_).m_6319_();
-      }
-
-      return new DifficultyInstance(this.m_46791_(), this.m_46468_(), i, f);
-   }
-
-   public int m_7445_() {
-      return this.f_46425_;
-   }
-
-   public void m_6580_(int p_46709_) {
-   }
-
-   public WorldBorder m_6857_() {
-      return this.f_46447_;
-   }
-
-   public void m_5503_(Packet<?> p_46657_) {
-      throw new UnsupportedOperationException("Can't send packets to server unless you're on the client.");
-   }
-
-   public DimensionType m_6042_() {
-      return this.f_46445_;
-   }
-
-   public Holder<DimensionType> m_204156_() {
-      return this.f_204147_;
-   }
-
-   public ResourceKey<Level> m_46472_() {
-      return this.f_46421_;
-   }
-
-   public Random m_5822_() {
-      return this.f_46441_;
-   }
-
-   public boolean m_7433_(BlockPos p_46620_, Predicate<BlockState> p_46621_) {
-      return p_46621_.test(this.m_8055_(p_46620_));
-   }
-
-   public boolean m_142433_(BlockPos p_151541_, Predicate<FluidState> p_151542_) {
-      return p_151542_.test(this.m_6425_(p_151541_));
-   }
-
-   public abstract RecipeManager m_7465_();
-
-   public BlockPos m_46496_(int p_46497_, int p_46498_, int p_46499_, int p_46500_) {
-      this.f_46435_ = this.f_46435_ * 3 + 1013904223;
-      int i = this.f_46435_ >> 2;
-      return new BlockPos(p_46497_ + (i & 15), p_46498_ + (i >> 16 & p_46500_), p_46499_ + (i >> 8 & 15));
-   }
-
-   public boolean m_7441_() {
-      return false;
-   }
-
-   public ProfilerFiller m_46473_() {
-      return this.f_46446_.get();
-   }
-
-   public Supplier<ProfilerFiller> m_46658_() {
-      return this.f_46446_;
-   }
-
-   public BiomeManager m_7062_() {
-      return this.f_46420_;
-   }
-
-   public final boolean m_46659_() {
-      return this.f_46424_;
-   }
-
-   protected abstract LevelEntityGetter<Entity> m_142646_();
-
-   protected void m_151513_(@Nullable Entity p_151514_, GameEvent p_151515_, BlockPos p_151516_, int p_151517_) {
-      int i = SectionPos.m_123171_(p_151516_.m_123341_() - p_151517_);
-      int j = SectionPos.m_123171_(p_151516_.m_123343_() - p_151517_);
-      int k = SectionPos.m_123171_(p_151516_.m_123341_() + p_151517_);
-      int l = SectionPos.m_123171_(p_151516_.m_123343_() + p_151517_);
-      int i1 = SectionPos.m_123171_(p_151516_.m_123342_() - p_151517_);
-      int j1 = SectionPos.m_123171_(p_151516_.m_123342_() + p_151517_);
-
-      for(int k1 = i; k1 <= k; ++k1) {
-         for(int l1 = j; l1 <= l; ++l1) {
-            ChunkAccess chunkaccess = this.m_7726_().m_7131_(k1, l1);
-            if (chunkaccess != null) {
-               for(int i2 = i1; i2 <= j1; ++i2) {
-                  chunkaccess.m_142336_(i2).m_142666_(p_151515_, p_151514_, p_151516_);
-               }
-            }
-         }
-      }
-
-   }
-
-   public long m_183596_() {
-      return (long)(this.f_186455_++);
-   }
+                i = Math.max( i, this.m_46852_( p_46752_.m_142127_(), Direction.NORTH ) );
+                if (i >= 15) {
+                    return i;
+                } else {
+                    i = Math.max( i, this.m_46852_( p_46752_.m_142128_(), Direction.SOUTH ) );
+                    if (i >= 15) {
+                        return i;
+                    } else {
+                        i = Math.max( i, this.m_46852_( p_46752_.m_142125_(), Direction.WEST ) );
+                        if (i >= 15) {
+                            return i;
+                        } else {
+                            i = Math.max( i, this.m_46852_( p_46752_.m_142126_(), Direction.EAST ) );
+                            return i >= 15 ? i : i;
+                        }
+                    }
+                }
+            }
+        }
+    }
+
+    public boolean m_46616_(BlockPos p_46617_, Direction p_46618_) {
+        return this.m_46681_( p_46617_, p_46618_ ) > 0;
+    }
+
+    public int m_46681_(BlockPos p_46682_, Direction p_46683_) {
+        BlockState blockstate = this.m_8055_( p_46682_ );
+        int i = blockstate.m_60746_( this, p_46682_, p_46683_ );
+        return blockstate.shouldCheckWeakPower( this, p_46682_, p_46683_ ) ? Math.max( i, this.m_46751_( p_46682_ ) ) : i;
+    }
+
+    public boolean m_46753_(BlockPos p_46754_) {
+        if (this.m_46681_( p_46754_.m_7495_(), Direction.DOWN ) > 0) {
+            return true;
+        } else if (this.m_46681_( p_46754_.m_7494_(), Direction.UP ) > 0) {
+            return true;
+        } else if (this.m_46681_( p_46754_.m_142127_(), Direction.NORTH ) > 0) {
+            return true;
+        } else if (this.m_46681_( p_46754_.m_142128_(), Direction.SOUTH ) > 0) {
+            return true;
+        } else if (this.m_46681_( p_46754_.m_142125_(), Direction.WEST ) > 0) {
+            return true;
+        } else {
+            return this.m_46681_( p_46754_.m_142126_(), Direction.EAST ) > 0;
+        }
+    }
+
+    public int m_46755_(BlockPos p_46756_) {
+        int i = 0;
+
+        for (Direction direction : f_46422_) {
+            int j = this.m_46681_( p_46756_.m_142300_( direction ), direction );
+            if (j >= 15) {
+                return 15;
+            }
+
+            if (j > i) {
+                i = j;
+            }
+        }
+
+        return i;
+    }
+
+    public void m_7462_() {
+    }
+
+    public long m_46467_() {
+        return this.f_46442_.m_6793_();
+    }
+
+    public long m_46468_() {
+        return this.f_46442_.m_6792_();
+    }
+
+    public boolean m_7966_(Player p_46557_, BlockPos p_46558_) {
+        return true;
+    }
+
+    public void m_7605_(Entity p_46509_, byte p_46510_) {
+    }
+
+    public void m_7696_(BlockPos p_46582_, Block p_46583_, int p_46584_, int p_46585_) {
+        this.m_8055_( p_46582_ ).m_60677_( this, p_46582_, p_46584_, p_46585_ );
+    }
+
+    public LevelData m_6106_() {
+        return this.f_46442_;
+    }
+
+    public GameRules m_46469_() {
+        return this.f_46442_.m_5470_();
+    }
+
+    public float m_46661_(float p_46662_) {
+        return Mth.m_14179_( p_46662_, this.f_46439_, this.f_46440_ ) * this.m_46722_( p_46662_ );
+    }
+
+    public void m_46707_(float p_46708_) {
+        float f = Mth.m_14036_( p_46708_, 0.0F, 1.0F );
+        this.f_46439_ = f;
+        this.f_46440_ = f;
+    }
+
+    public float m_46722_(float p_46723_) {
+        return Mth.m_14179_( p_46723_, this.f_46437_, this.f_46438_ );
+    }
+
+    public void m_46734_(float p_46735_) {
+        float f = Mth.m_14036_( p_46735_, 0.0F, 1.0F );
+        this.f_46437_ = f;
+        this.f_46438_ = f;
+    }
+
+    public boolean m_46470_() {
+        if (this.m_6042_().m_63935_() && !this.m_6042_().m_63946_()) {
+            return (double) this.m_46661_( 1.0F ) > 0.9D;
+        } else {
+            return false;
+        }
+    }
+
+    public boolean m_46471_() {
+        return (double) this.m_46722_( 1.0F ) > 0.2D;
+    }
+
+    public boolean m_46758_(BlockPos p_46759_) {
+        if (!this.m_46471_()) {
+            return false;
+        } else if (!this.m_45527_( p_46759_ )) {
+            return false;
+        } else if (this.m_5452_( Heightmap.Types.MOTION_BLOCKING, p_46759_ ).m_123342_() > p_46759_.m_123342_()) {
+            return false;
+        } else {
+            Biome biome = this.m_204166_( p_46759_ ).m_203334_();
+            return biome.m_47530_() == Biome.Precipitation.RAIN && biome.m_198906_( p_46759_ );
+        }
+    }
+
+    public boolean m_46761_(BlockPos p_46762_) {
+        Biome biome = this.m_204166_( p_46762_ ).m_203334_();
+        return biome.m_47533_();
+    }
+
+    @Nullable
+    public abstract MapItemSavedData m_7489_(String p_46650_);
+
+    public abstract void m_142325_(String p_151533_, MapItemSavedData p_151534_);
+
+    public abstract int m_7354_();
+
+    public void m_6798_(int p_46665_, BlockPos p_46666_, int p_46667_) {
+    }
+
+    public CrashReportCategory m_6026_(CrashReport p_46656_) {
+        CrashReportCategory crashreportcategory = p_46656_.m_127516_( "Affected level", 1 );
+        crashreportcategory.m_128165_( "All players", () -> {
+            return this.m_6907_().size() + " total; " + this.m_6907_();
+        } );
+        crashreportcategory.m_128165_( "Chunk stats", this.m_7726_()::m_6754_ );
+        crashreportcategory.m_128165_( "Level dimension", () -> {
+            return this.m_46472_().m_135782_().toString();
+        } );
+
+        try {
+            this.f_46442_.m_142471_( crashreportcategory, this );
+        } catch (Throwable throwable) {
+            crashreportcategory.m_128162_( "Level Data Unobtainable", throwable );
+        }
+
+        return crashreportcategory;
+    }
+
+    public abstract void m_6801_(int p_46506_, BlockPos p_46507_, int p_46508_);
+
+    public void m_7228_(double p_46475_, double p_46476_, double p_46477_, double p_46478_, double p_46479_, double p_46480_, @Nullable CompoundTag p_46481_) {
+    }
+
+    public abstract Scoreboard m_6188_();
+
+    public void m_46717_(BlockPos p_46718_, Block p_46719_) {
+        for (Direction direction : Direction.values()) {
+            BlockPos blockpos = p_46718_.m_142300_( direction );
+            if (this.m_46805_( blockpos )) {
+                BlockState blockstate = this.m_8055_( blockpos );
+                blockstate.onNeighborChange( this, blockpos, p_46718_ );
+                if (blockstate.m_60796_( this, blockpos )) {
+                    blockpos = blockpos.m_142300_( direction );
+                    blockstate = this.m_8055_( blockpos );
+                    if (blockstate.getWeakChanges( this, blockpos )) {
+                        blockstate.m_60690_( this, blockpos, p_46719_, p_46718_, false );
+                    }
+                }
+            }
+        }
+
+    }
+
+    public DifficultyInstance m_6436_(BlockPos p_46730_) {
+        long i = 0L;
+        float f = 0.0F;
+        if (this.m_46805_( p_46730_ )) {
+            f = this.m_46940_();
+            i = this.m_46745_( p_46730_ ).m_6319_();
+        }
+
+        return new DifficultyInstance( this.m_46791_(), this.m_46468_(), i, f );
+    }
+
+    public int m_7445_() {
+        return this.f_46425_;
+    }
+
+    public void m_6580_(int p_46709_) {
+    }
+
+    public WorldBorder m_6857_() {
+        return this.f_46447_;
+    }
+
+    public void m_5503_(Packet<?> p_46657_) {
+        throw new UnsupportedOperationException( "Can't send packets to server unless you're on the client." );
+    }
+
+    public DimensionType m_6042_() {
+        return this.f_46445_;
+    }
+
+    public Holder<DimensionType> m_204156_() {
+        return this.f_204147_;
+    }
+
+    public ResourceKey<Level> m_46472_() {
+        return this.f_46421_;
+    }
+
+    public Random m_5822_() {
+        return this.f_46441_;
+    }
+
+    public boolean m_7433_(BlockPos p_46620_, Predicate<BlockState> p_46621_) {
+        return p_46621_.test( this.m_8055_( p_46620_ ) );
+    }
+
+    public boolean m_142433_(BlockPos p_151541_, Predicate<FluidState> p_151542_) {
+        return p_151542_.test( this.m_6425_( p_151541_ ) );
+    }
+
+    public abstract RecipeManager m_7465_();
+
+    public BlockPos m_46496_(int p_46497_, int p_46498_, int p_46499_, int p_46500_) {
+        this.f_46435_ = this.f_46435_ * 3 + 1013904223;
+        int i = this.f_46435_ >> 2;
+        return new BlockPos( p_46497_ + (i & 15), p_46498_ + (i >> 16 & p_46500_), p_46499_ + (i >> 8 & 15) );
+    }
+
+    public boolean m_7441_() {
+        return false;
+    }
+
+    public ProfilerFiller m_46473_() {
+        return this.f_46446_.get();
+    }
+
+    public Supplier<ProfilerFiller> m_46658_() {
+        return this.f_46446_;
+    }
+
+    public BiomeManager m_7062_() {
+        return this.f_46420_;
+    }
+
+    private double maxEntityRadius = 2.0D;
+
+    @Override
+    public double getMaxEntityRadius() {
+        return maxEntityRadius;
+    }
+
+    @Override
+    public double increaseMaxEntityRadius(double value) {
+        if (value > maxEntityRadius)
+            maxEntityRadius = value;
+        return maxEntityRadius;
+    }
+
+    public final boolean m_46659_() {
+        return this.f_46424_;
+    }
+
+    public abstract LevelEntityGetter<Entity> m_142646_();
+
+    protected void m_151513_(@Nullable Entity p_151514_, GameEvent p_151515_, BlockPos p_151516_, int p_151517_) {
+        // CraftBukkit start
+        GenericGameEvent event = new GenericGameEvent( org.bukkit.GameEvent.getByKey( CraftNamespacedKey.fromMinecraft( Registry.f_175412_.m_7981_( p_151515_ ) ) ), new Location( this.getWorld(), p_151516_.m_123341_(), p_151516_.m_123342_(), p_151516_.m_123343_() ), (p_151514_ == null) ? null : p_151514_.getBukkitEntity(), p_151517_ );
+        getCraftServer().getPluginManager().callEvent( event );
+        if (event.isCancelled()) {
+            return;
+        }
+        p_151517_ = event.getRadius();
+        // CraftBukkit end
+        int i = SectionPos.m_123171_( p_151516_.m_123341_() - p_151517_ );
+        int j = SectionPos.m_123171_( p_151516_.m_123343_() - p_151517_ );
+        int k = SectionPos.m_123171_( p_151516_.m_123341_() + p_151517_ );
+        int l = SectionPos.m_123171_( p_151516_.m_123343_() + p_151517_ );
+        int i1 = SectionPos.m_123171_( p_151516_.m_123342_() - p_151517_ );
+        int j1 = SectionPos.m_123171_( p_151516_.m_123342_() + p_151517_ );
+
+        for (int k1 = i; k1 <= k; ++k1) {
+            for (int l1 = j; l1 <= l; ++l1) {
+                ChunkAccess chunkaccess = this.m_7726_().m_7131_( k1, l1 );
+                if (chunkaccess != null) {
+                    for (int i2 = i1; i2 <= j1; ++i2) {
+                        chunkaccess.m_142336_( i2 ).m_142666_( p_151515_, p_151514_, p_151516_ );
+                    }
+                }
+            }
+        }
+
+    }
+
+    public long m_183596_() {
+        return (long) (this.f_186455_++);
+    }
+
+    // Magma Stub
+    public void notifyAndUpdatePhysics(BlockPos position, Object o, BlockState oldBlock, BlockState newBlock, BlockState newBlock1, int flag, int i) {
+    }
 }
