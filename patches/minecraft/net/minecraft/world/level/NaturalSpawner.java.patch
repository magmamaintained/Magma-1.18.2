--- a/net/minecraft/world/level/NaturalSpawner.java
+++ b/net/minecraft/world/level/NaturalSpawner.java
@@ -83,7 +_,7 @@
             mob = (Mob)entity;
          } while(mob.isPersistenceRequired() || mob.requiresCustomPersistence());
 
-         MobCategory mobcategory = entity.getType().getCategory();
+         MobCategory mobcategory = entity.getClassification(true);
          if (mobcategory != MobCategory.MISC) {
             Entity entity_f = entity;
             BlockPos blockpos = entity.blockPosition();
@@ -109,13 +_,31 @@
 
    public static void spawnForChunk(ServerLevel p_47030_, LevelChunk p_47031_, NaturalSpawner.SpawnState p_47032_, boolean p_47033_, boolean p_47034_, boolean p_47035_) {
       p_47030_.getProfiler().push("spawner");
+      p_47030_.timings.mobSpawn.startTiming(); // Spigot
+
+      net.minecraft.world.level.storage.LevelData worlddata = p_47030_.getLevelData(); // CraftBukkit - Other mob type spawn tick rate
 
       for(MobCategory mobcategory : SPAWNING_CATEGORIES) {
-         if ((p_47033_ || !mobcategory.isFriendly()) && (p_47034_ || mobcategory.isFriendly()) && (p_47035_ || !mobcategory.isPersistent()) && p_47032_.canSpawnForCategory(mobcategory, p_47031_.getPos())) {
+         // CraftBukkit start - Use per-world spawn limits
+         boolean spawnThisTick = true;
+         int limit = mobcategory.getMaxInstancesPerChunk();
+         org.bukkit.entity.SpawnCategory spawnCategory = org.bukkit.craftbukkit.v1_18_R2.util.CraftSpawnCategory.toBukkit(mobcategory);
+         if (org.bukkit.craftbukkit.v1_18_R2.util.CraftSpawnCategory.isValidForLimits(spawnCategory)) {
+            spawnThisTick = p_47030_.ticksPerSpawnCategory.getLong(spawnCategory) != 0 && worlddata.getGameTime() % p_47030_.ticksPerSpawnCategory.getLong(spawnCategory) == 0;
+            limit = p_47030_.getWorld().getSpawnLimit(spawnCategory);
+         }
+
+        // if ((p_47033_ || !mobcategory.isFriendly()) && (p_47034_ || mobcategory.isFriendly()) && (p_47035_ || !mobcategory.isPersistent()) && p_47032_.canSpawnForCategory(mobcategory, p_47031_.getPos())) {
+         if (!spawnThisTick || limit == 0) {
+            continue;
+         }
+         if ((p_47033_ || !mobcategory.isFriendly()) && (p_47034_ || mobcategory.isFriendly()) && (p_47035_ || !mobcategory.isPersistent()) && p_47032_.canSpawnForCategory(mobcategory, p_47031_.getPos(), limit)) {
+            // CraftBukkit end
             spawnCategoryForChunk(mobcategory, p_47030_, p_47031_, p_47032_::canSpawn, p_47032_::afterSpawn);
          }
       }
 
+      p_47030_.timings.mobSpawn.stopTiming(); // Spigot
       p_47030_.getProfiler().pop();
    }
 
@@ -179,13 +_,22 @@
                         }
 
                         mob.moveTo(d0, (double)i, d1, p_47040_.random.nextFloat() * 360.0F, 0.0F);
-                        if (isValidPositionForMob(p_47040_, mob, d2)) {
+                        int canSpawn = net.minecraftforge.common.ForgeHooks.canEntitySpawn(mob, p_47040_, d0, i, d1, null, MobSpawnType.NATURAL);
+                        if (canSpawn != -1 && (canSpawn == 1 || isValidPositionForMob(p_47040_, mob, d2))) {
+                           if (!net.minecraftforge.event.ForgeEventFactory.doSpecialSpawn(mob, (LevelAccessor) p_47040_, (float)d0, (float)i, (float)d1, null, MobSpawnType.NATURAL))
                            spawngroupdata = mob.finalizeSpawn(p_47040_, p_47040_.getCurrentDifficultyAt(mob.blockPosition()), MobSpawnType.NATURAL, spawngroupdata, (CompoundTag)null);
-                           ++j;
-                           ++l1;
+                           // CraftBukkit start
+                           //Magma start - set the spawn reason in the entity class instead of here
+                           p_47040_.prepareEntity(mob, org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason.NATURAL);
                            p_47040_.addFreshEntityWithPassengers(mob);
-                           p_47044_.run(mob, p_47041_);
-                           if (j >= mob.getMaxSpawnClusterSize()) {
+                           //Magma end
+                           if (!mob.isRemoved()) {
+                              ++j;
+                              ++l1;
+                              p_47044_.run(mob, p_47041_);
+                           }
+                           // CraftBukkit end
+                           if (j >= net.minecraftforge.event.ForgeEventFactory.getMaxSpawnPackSize(mob)) {
                               return;
                            }
 
@@ -265,7 +_,7 @@
    }
 
    private static WeightedRandomList<MobSpawnSettings.SpawnerData> mobsAt(ServerLevel p_204169_, StructureFeatureManager p_204170_, ChunkGenerator p_204171_, MobCategory p_204172_, BlockPos p_204173_, @Nullable Holder<Biome> p_204174_) {
-      return isInNetherFortressBounds(p_204173_, p_204169_, p_204172_, p_204170_) ? NetherFortressFeature.FORTRESS_ENEMIES : p_204171_.getMobsAt(p_204174_ != null ? p_204174_ : p_204169_.getBiome(p_204173_), p_204170_, p_204172_, p_204173_);
+      return net.minecraftforge.event.ForgeEventFactory.getPotentialSpawns(p_204169_, p_204172_, p_204173_, isInNetherFortressBounds(p_204173_, p_204169_, p_204172_, p_204170_) ? NetherFortressFeature.FORTRESS_ENEMIES : p_204171_.getMobsAt(p_204174_ != null ? p_204174_ : p_204169_.getBiome(p_204173_), p_204170_, p_204172_, p_204173_));
    }
 
    public static boolean isInNetherFortressBounds(BlockPos p_186530_, ServerLevel p_186531_, MobCategory p_186532_, StructureFeatureManager p_186533_) {
@@ -304,6 +_,13 @@
       if (p_47052_ == SpawnPlacements.Type.NO_RESTRICTIONS) {
          return true;
       } else if (p_47055_ != null && p_47053_.getWorldBorder().isWithinBounds(p_47054_)) {
+         return p_47052_.canSpawnAt(p_47053_, p_47054_, p_47055_);
+      }
+      return false;
+   }
+
+   public static boolean canSpawnAtBody(SpawnPlacements.Type p_47052_, LevelReader p_47053_, BlockPos p_47054_, @Nullable EntityType<?> p_47055_) {
+      {
          BlockState blockstate = p_47053_.getBlockState(p_47054_);
          FluidState fluidstate = p_47053_.getFluidState(p_47054_);
          BlockPos blockpos = p_47054_.above();
@@ -316,14 +_,12 @@
          case ON_GROUND:
          default:
             BlockState blockstate1 = p_47053_.getBlockState(blockpos1);
-            if (!blockstate1.isValidSpawn(p_47053_, blockpos1, p_47055_)) {
+            if (!blockstate1.isValidSpawn(p_47053_, blockpos1, p_47052_, p_47055_)) {
                return false;
             } else {
                return isValidEmptySpawnBlock(p_47053_, p_47054_, blockstate, fluidstate, p_47055_) && isValidEmptySpawnBlock(p_47053_, blockpos, p_47053_.getBlockState(blockpos), p_47053_.getFluidState(blockpos), p_47055_);
             }
          }
-      } else {
-         return false;
       }
    }
 
@@ -369,8 +_,10 @@
                         entity.moveTo(d0, (double)blockpos.getY(), d1, p_204179_.nextFloat() * 360.0F, 0.0F);
                         if (entity instanceof Mob) {
                            Mob mob = (Mob)entity;
+                           if (net.minecraftforge.common.ForgeHooks.canEntitySpawn(mob, p_204176_, d0, blockpos.getY(), d1, null, MobSpawnType.CHUNK_GENERATION) == -1) continue;
                            if (mob.checkSpawnRules(p_204176_, MobSpawnType.CHUNK_GENERATION) && mob.checkSpawnObstruction(p_204176_)) {
                               spawngroupdata = mob.finalizeSpawn(p_204176_, p_204176_.getCurrentDifficultyAt(mob.blockPosition()), MobSpawnType.CHUNK_GENERATION, spawngroupdata, (CompoundTag)null);
+                              p_204176_.prepareEntity(mob, org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason.CHUNK_GEN); //Magma - add spawn reason
                               p_204176_.addFreshEntityWithPassengers(mob);
                               flag = true;
                            }
@@ -492,8 +_,21 @@
          return this.unmodifiableMobCategoryCounts;
       }
 
+      //Magma - add original canSpawnForCategory method for mods that implement this
       boolean canSpawnForCategory(MobCategory p_186549_, ChunkPos p_186550_) {
          int i = p_186549_.getMaxInstancesPerChunk() * this.spawnableChunkCount / NaturalSpawner.MAGIC_NUMBER;
+         if (this.mobCategoryCounts.getInt(p_186549_) >= i) {
+            return false;
+         } else {
+            return this.localMobCapCalculator.canSpawn(p_186549_, p_186550_);
+         }
+      }
+      //Magma - end
+      // CraftBukkit start
+      boolean canSpawnForCategory(MobCategory p_186549_, ChunkPos p_186550_, int limit) {
+         int i = limit * this.spawnableChunkCount / NaturalSpawner.MAGIC_NUMBER;
+         // CraftBukkit end
+
          if (this.mobCategoryCounts.getInt(p_186549_) >= i) {
             return false;
          } else {
