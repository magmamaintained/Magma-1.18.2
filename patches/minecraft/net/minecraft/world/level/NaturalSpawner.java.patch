--- a/net/minecraft/world/level/NaturalSpawner.java
+++ b/net/minecraft/world/level/NaturalSpawner.java
@@ -4,18 +_,7 @@
 import it.unimi.dsi.fastutil.objects.Object2IntMap;
 import it.unimi.dsi.fastutil.objects.Object2IntMaps;
 import it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap;
-import java.util.Iterator;
-import java.util.Objects;
-import java.util.Optional;
-import java.util.Random;
-import java.util.function.Consumer;
-import java.util.stream.Stream;
-import javax.annotation.Nullable;
-import net.minecraft.core.BlockPos;
-import net.minecraft.core.Direction;
-import net.minecraft.core.Holder;
-import net.minecraft.core.QuartPos;
-import net.minecraft.core.Registry;
+import net.minecraft.core.*;
 import net.minecraft.nbt.CompoundTag;
 import net.minecraft.server.level.ServerLevel;
 import net.minecraft.tags.BlockTags;
@@ -23,13 +_,7 @@
 import net.minecraft.util.Mth;
 import net.minecraft.util.VisibleForDebug;
 import net.minecraft.util.random.WeightedRandomList;
-import net.minecraft.world.entity.Entity;
-import net.minecraft.world.entity.EntityType;
-import net.minecraft.world.entity.Mob;
-import net.minecraft.world.entity.MobCategory;
-import net.minecraft.world.entity.MobSpawnType;
-import net.minecraft.world.entity.SpawnGroupData;
-import net.minecraft.world.entity.SpawnPlacements;
+import net.minecraft.world.entity.*;
 import net.minecraft.world.entity.player.Player;
 import net.minecraft.world.level.biome.Biome;
 import net.minecraft.world.level.biome.MobSpawnSettings;
@@ -44,9 +_,22 @@
 import net.minecraft.world.level.levelgen.structure.BuiltinStructures;
 import net.minecraft.world.level.material.FluidState;
 import net.minecraft.world.level.pathfinder.PathComputationType;
+import net.minecraft.world.level.storage.LevelData;
 import net.minecraft.world.phys.Vec3;
+import org.bukkit.craftbukkit.v1_18_R2.util.CraftSpawnCategory;
+import org.bukkit.entity.SpawnCategory;
+import org.bukkit.event.entity.CreatureSpawnEvent;
 import org.slf4j.Logger;
 
+import javax.annotation.Nullable;
+import java.util.Iterator;
+import java.util.Objects;
+import java.util.Optional;
+import java.util.Random;
+import java.util.function.Consumer;
+import java.util.stream.Stream;
+
+// TODO: ForgeEventFactory.getPotentialSpawns, ForgeHooks.canEntitySpawn
 public final class NaturalSpawner {
    private static final Logger f_46977_ = LogUtils.getLogger();
    private static final int f_151589_ = 24;
@@ -83,7 +_,7 @@
             mob = (Mob)entity;
          } while(mob.m_21532_() || mob.m_8023_());
 
-         MobCategory mobcategory = entity.m_6095_().m_20674_();
+         MobCategory mobcategory = entity.getClassification(true);
          if (mobcategory != MobCategory.MISC) {
             Entity entity_f = entity;
             BlockPos blockpos = entity.m_142538_();
@@ -109,13 +_,31 @@
 
    public static void m_47029_(ServerLevel p_47030_, LevelChunk p_47031_, NaturalSpawner.SpawnState p_47032_, boolean p_47033_, boolean p_47034_, boolean p_47035_) {
       p_47030_.m_46473_().m_6180_("spawner");
+      p_47030_.timings.mobSpawn.startTiming(); // Spigot
+
+      LevelData worlddata = p_47030_.m_6106_(); // CraftBukkit - Other mob type spawn tick rate
 
       for(MobCategory mobcategory : f_46979_) {
-         if ((p_47033_ || !mobcategory.m_21609_()) && (p_47034_ || mobcategory.m_21609_()) && (p_47035_ || !mobcategory.m_21610_()) && p_47032_.m_186548_(mobcategory, p_47031_.m_7697_())) {
+         // CraftBukkit start - Use per-world spawn limits
+         boolean spawnThisTick = true;
+         int limit = mobcategory.m_21608_();
+         SpawnCategory spawnCategory = CraftSpawnCategory.toBukkit(mobcategory);
+         if (CraftSpawnCategory.isValidForLimits(spawnCategory)) {
+            spawnThisTick = p_47030_.ticksPerSpawnCategory.getLong(spawnCategory) != 0 && worlddata.m_6793_() % p_47030_.ticksPerSpawnCategory.getLong(spawnCategory) == 0;
+            limit = p_47030_.getWorld().getSpawnLimit(spawnCategory);
+         }
+
+        // if ((p_47033_ || !mobcategory.isFriendly()) && (p_47034_ || mobcategory.isFriendly()) && (p_47035_ || !mobcategory.isPersistent()) && p_47032_.canSpawnForCategory(mobcategory, p_47031_.getPos())) {
+         if (!spawnThisTick || limit == 0) {
+            continue;
+         }
+         if ((p_47033_ || !mobcategory.m_21609_()) && (p_47034_ || mobcategory.m_21609_()) && (p_47035_ || !mobcategory.m_21610_()) && p_47032_.canSpawnForCategory(mobcategory, p_47031_.m_7697_(), limit)) {
+            // CraftBukkit end
             m_47045_(mobcategory, p_47030_, p_47031_, p_47032_::m_47127_, p_47032_::m_47131_);
          }
       }
 
+      p_47030_.timings.mobSpawn.stopTiming(); // Spigot
       p_47030_.m_46473_().m_7238_();
    }
 
@@ -179,13 +_,20 @@
                         }
 
                         mob.m_7678_(d0, (double)i, d1, p_47040_.f_46441_.nextFloat() * 360.0F, 0.0F);
-                        if (m_46991_(p_47040_, mob, d2)) {
+                        int canSpawn = net.minecraftforge.common.ForgeHooks.canEntitySpawn(mob, p_47040_, d0, i, d1, null, MobSpawnType.NATURAL);
+                        if (canSpawn != -1 && (canSpawn == 1 || m_46991_(p_47040_, mob, d2))) {
+                           if (!net.minecraftforge.event.ForgeEventFactory.doSpecialSpawn(mob, (LevelAccessor) p_47040_, (float)d0, (float)i, (float)d1, null, MobSpawnType.NATURAL))
                            spawngroupdata = mob.m_6518_(p_47040_, p_47040_.m_6436_(mob.m_142538_()), MobSpawnType.NATURAL, spawngroupdata, (CompoundTag)null);
-                           ++j;
-                           ++l1;
-                           p_47040_.m_47205_(mob);
-                           p_47044_.m_47100_(mob, p_47041_);
-                           if (j >= mob.m_5792_()) {
+                           // CraftBukkit start
+                           p_47040_.m_47205_(mob); // , CreatureSpawnEvent.SpawnReason.NATURAL); // Magma TODO: Find a better way to add CreatureSpawnEvent.SpawnReason.NATURAL to this call
+                                                                       // Make Botania crash in mixin hell @https://github.com/VazkiiMods/Botania/blob/951bac20da6d8032b2db19a632d9fe3d4130930d/Xplat/src/main/java/vazkii/botania/mixin/MixinNaturalSpawner.java#L31
+                           if (!mob.m_146910_()) {
+                              ++j;
+                              ++l1;
+                              p_47044_.m_47100_(mob, p_47041_);
+                           }
+                           // CraftBukkit end
+                           if (j >= net.minecraftforge.event.ForgeEventFactory.getMaxSpawnPackSize(mob)) {
                               return;
                            }
 
@@ -304,6 +_,13 @@
       if (p_47052_ == SpawnPlacements.Type.NO_RESTRICTIONS) {
          return true;
       } else if (p_47055_ != null && p_47053_.m_6857_().m_61937_(p_47054_)) {
+         return p_47052_.canSpawnAt(p_47053_, p_47054_, p_47055_);
+      }
+      return false;
+   }
+
+   public static boolean canSpawnAtBody(SpawnPlacements.Type p_47052_, LevelReader p_47053_, BlockPos p_47054_, @Nullable EntityType<?> p_47055_) {
+      {
          BlockState blockstate = p_47053_.m_8055_(p_47054_);
          FluidState fluidstate = p_47053_.m_6425_(p_47054_);
          BlockPos blockpos = p_47054_.m_7494_();
@@ -316,14 +_,12 @@
          case ON_GROUND:
          default:
             BlockState blockstate1 = p_47053_.m_8055_(blockpos1);
-            if (!blockstate1.m_60643_(p_47053_, blockpos1, p_47055_)) {
+            if (!blockstate1.isValidSpawn(p_47053_, blockpos1, p_47052_, p_47055_)) {
                return false;
             } else {
                return m_47056_(p_47053_, p_47054_, blockstate, fluidstate, p_47055_) && m_47056_(p_47053_, blockpos, p_47053_.m_8055_(blockpos), p_47053_.m_6425_(blockpos), p_47055_);
             }
          }
-      } else {
-         return false;
       }
    }
 
@@ -369,9 +_,10 @@
                         entity.m_7678_(d0, (double)blockpos.m_123342_(), d1, p_204179_.nextFloat() * 360.0F, 0.0F);
                         if (entity instanceof Mob) {
                            Mob mob = (Mob)entity;
+                           if (net.minecraftforge.common.ForgeHooks.canEntitySpawn(mob, p_204176_, d0, blockpos.m_123342_(), d1, null, MobSpawnType.CHUNK_GENERATION) == -1) continue;
                            if (mob.m_5545_(p_204176_, MobSpawnType.CHUNK_GENERATION) && mob.m_6914_(p_204176_)) {
                               spawngroupdata = mob.m_6518_(p_204176_, p_204176_.m_6436_(mob.m_142538_()), MobSpawnType.CHUNK_GENERATION, spawngroupdata, (CompoundTag)null);
-                              p_204176_.m_47205_(mob);
+                              p_204176_.addFreshEntityWithPassengers(mob, CreatureSpawnEvent.SpawnReason.CHUNK_GEN); // CraftBukkit
                               flag = true;
                            }
                         }
@@ -492,8 +_,11 @@
          return this.f_47113_;
       }
 
-      boolean m_186548_(MobCategory p_186549_, ChunkPos p_186550_) {
-         int i = p_186549_.m_21608_() * this.f_47110_ / NaturalSpawner.f_46978_;
+      // CraftBukkit start
+      boolean canSpawnForCategory(MobCategory p_186549_, ChunkPos p_186550_, int limit) {
+         int i = limit * this.f_47110_ / NaturalSpawner.f_46978_;
+         // CraftBukkit end
+
          if (this.f_47111_.getInt(p_186549_) >= i) {
             return false;
          } else {
