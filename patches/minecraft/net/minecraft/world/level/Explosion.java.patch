--- a/net/minecraft/world/level/Explosion.java
+++ b/net/minecraft/world/level/Explosion.java
@@ -57,6 +_,8 @@
    private final ExplosionDamageCalculator damageCalculator;
    private final List<BlockPos> toBlow = Lists.newArrayList();
    private final Map<Player, Vec3> hitPlayers = Maps.newHashMap();
+   private final Vec3 position;
+   public boolean wasCanceled = false; // CraftBukkit - add field
 
    public Explosion(Level p_151471_, @Nullable Entity p_151472_, double p_151473_, double p_151474_, double p_151475_, float p_151476_) {
       this(p_151471_, p_151472_, p_151473_, p_151474_, p_151475_, p_151476_, false, Explosion.BlockInteraction.DESTROY);
@@ -78,7 +_,7 @@
    public Explosion(Level p_46051_, @Nullable Entity p_46052_, @Nullable DamageSource p_46053_, @Nullable ExplosionDamageCalculator p_46054_, double p_46055_, double p_46056_, double p_46057_, float p_46058_, boolean p_46059_, Explosion.BlockInteraction p_46060_) {
       this.level = p_46051_;
       this.source = p_46052_;
-      this.radius = p_46058_;
+      this.radius = (float) Math.max(p_46058_, 0.0); // CraftBukkit - clamp bad values
       this.x = p_46055_;
       this.y = p_46056_;
       this.z = p_46057_;
@@ -86,6 +_,7 @@
       this.blockInteraction = p_46060_;
       this.damageSource = p_46053_ == null ? DamageSource.explosion(this) : p_46053_;
       this.damageCalculator = p_46054_ == null ? this.makeDamageCalculator(p_46052_) : p_46054_;
+      this.position = new Vec3(this.x, this.y, this.z);
    }
 
    private ExplosionDamageCalculator makeDamageCalculator(@Nullable Entity p_46063_) {
@@ -126,6 +_,11 @@
    }
 
    public void explode() {
+      // CraftBukkit start
+      if (this.radius < 0.1F) {
+         return;
+      }
+      // CraftBukkit end
       this.level.gameEvent(this.source, GameEvent.EXPLODE, new BlockPos(this.x, this.y, this.z));
       Set<BlockPos> set = Sets.newHashSet();
       int i = 16;
@@ -181,6 +_,7 @@
       int j2 = Mth.floor(this.z - (double)f2 - 1.0D);
       int j1 = Mth.floor(this.z + (double)f2 + 1.0D);
       List<Entity> list = this.level.getEntities(this.source, new AABB((double)k1, (double)i2, (double)j2, (double)l1, (double)i1, (double)j1));
+      net.minecraftforge.event.ForgeEventFactory.onExplosionDetonate(this.level, this, list, f2);
       Vec3 vec3 = new Vec3(this.x, this.y, this.z);
 
       for(int k2 = 0; k2 < list.size(); ++k2) {
@@ -198,7 +_,37 @@
                   d9 /= d13;
                   double d14 = (double)getSeenPercent(vec3, entity);
                   double d10 = (1.0D - d12) * d14;
-                  entity.hurt(this.getDamageSource(), (float)((int)((d10 * d10 + d10) / 2.0D * 7.0D * (double)f2 + 1.0D)));
+
+                  // CraftBukkit start
+                  org.bukkit.craftbukkit.v1_18_R2.event.CraftEventFactory.entityDamage = source;
+                  entity.lastDamageCancelled = false;
+
+                  // Special case ender dragon only give knockback if no damage is cancelled
+                  // Thinks to note:
+                  // - Setting a velocity to a net.minecraft.world.entity.boss.EnderDragonPart is ignored (and therefore not needed)
+                  // - Damaging net.minecraft.world.entity.boss.EnderDragonPart while forward the damage to EnderDragon
+                  // - Damaging net.minecraft.world.entity.boss.enderdragon.EnderDragon does nothing
+                  // - net.minecraft.world.entity.boss.enderdragon.EnderDragon hitbock always covers the other parts and is therefore always present
+                  if (entity instanceof net.minecraft.world.entity.boss.EnderDragonPart) {
+                     continue;
+                  }
+
+                  if (entity instanceof net.minecraft.world.entity.boss.enderdragon.EnderDragon) {
+                     for (net.minecraft.world.entity.boss.EnderDragonPart entityComplexPart : ((net.minecraft.world.entity.boss.enderdragon.EnderDragon) entity).subEntities) {
+                        if (list.contains(entityComplexPart)) {
+                           entityComplexPart.hurt(this.getDamageSource(), (float) ((int) ((d10 * d10 + d10) / 2.0D * 7.0D * (double) f2 + 1.0D)));
+                        }
+                     }
+                  } else {
+                     entity.hurt(this.getDamageSource(), (float) ((int) ((d10 * d10 + d10) / 2.0D * 7.0D * (double) f2 + 1.0D)));
+                  }
+
+                  org.bukkit.craftbukkit.v1_18_R2.event.CraftEventFactory.entityDamage = null;
+                  if (entity.lastDamageCancelled) { // SPIGOT-5339, SPIGOT-6252, SPIGOT-6777: Skip entity if damage event was cancelled
+                     continue;
+                  }
+                  // CraftBukkit end
+
                   double d11 = d10;
                   if (entity instanceof LivingEntity) {
                      d11 = ProtectionEnchantment.getExplosionKnockbackAfterDampener((LivingEntity)entity, d10);
@@ -236,17 +_,62 @@
          ObjectArrayList<Pair<ItemStack, BlockPos>> objectarraylist = new ObjectArrayList<>();
          Collections.shuffle(this.toBlow, this.level.random);
 
+         // CraftBukkit start
+         org.bukkit.World bworld = this.level.getWorld();
+         org.bukkit.entity.Entity explode = this.source == null ? null : this.source.getBukkitEntity();
+         org.bukkit.Location location = new org.bukkit.Location(bworld, this.x, this.y, this.z);
+
+         List<org.bukkit.block.Block> blockList = Lists.newArrayList();
+         for (int i1 = this.toBlow.size() - 1; i1 >= 0; i1--) {
+            BlockPos cpos = (BlockPos) this.toBlow.get(i1);
+            org.bukkit.block.Block bblock = bworld.getBlockAt(cpos.getX(), cpos.getY(), cpos.getZ());
+            if (!bblock.getType().isAir()) {
+               blockList.add(bblock);
+            }
+         }
+
+         boolean cancelled;
+         List<org.bukkit.block.Block> bukkitBlocks;
+         float yield;
+
+         if (explode != null) {
+            org.bukkit.event.entity.EntityExplodeEvent event = new org.bukkit.event.entity.EntityExplodeEvent(explode, location, blockList, this.blockInteraction == Explosion.BlockInteraction.DESTROY ? 1.0F / this.radius : 1.0F);
+            this.level.getCraftServer().getPluginManager().callEvent(event);
+            cancelled = event.isCancelled();
+            bukkitBlocks = event.blockList();
+            yield = event.getYield();
+         } else {
+            org.bukkit.event.block.BlockExplodeEvent event = new org.bukkit.event.block.BlockExplodeEvent(location.getBlock(), blockList, this.blockInteraction == Explosion.BlockInteraction.DESTROY ? 1.0F / this.radius : 1.0F);
+            this.level.getCraftServer().getPluginManager().callEvent(event);
+            cancelled = event.isCancelled();
+            bukkitBlocks = event.blockList();
+            yield = event.getYield();
+         }
+
+         this.toBlow.clear();
+
+         for (org.bukkit.block.Block bblock : bukkitBlocks) {
+            BlockPos coords = new BlockPos(bblock.getX(), bblock.getY(), bblock.getZ());
+            toBlow.add(coords);
+         }
+
+         if (cancelled) {
+            this.wasCanceled = true;
+            return;
+         }
+         // CraftBukkit end
+
          for(BlockPos blockpos : this.toBlow) {
             BlockState blockstate = this.level.getBlockState(blockpos);
             Block block = blockstate.getBlock();
             if (!blockstate.isAir()) {
                BlockPos blockpos1 = blockpos.immutable();
                this.level.getProfiler().push("explosion_blocks");
-               if (block.dropFromExplosion(this) && this.level instanceof ServerLevel) {
+               if (blockstate.canDropFromExplosion(this.level, blockpos, this) && this.level instanceof ServerLevel) {
                   BlockEntity blockentity = blockstate.hasBlockEntity() ? this.level.getBlockEntity(blockpos) : null;
                   LootContext.Builder lootcontext$builder = (new LootContext.Builder((ServerLevel)this.level)).withRandom(this.level.random).withParameter(LootContextParams.ORIGIN, Vec3.atCenterOf(blockpos)).withParameter(LootContextParams.TOOL, ItemStack.EMPTY).withOptionalParameter(LootContextParams.BLOCK_ENTITY, blockentity).withOptionalParameter(LootContextParams.THIS_ENTITY, this.source);
-                  if (this.blockInteraction == Explosion.BlockInteraction.DESTROY) {
-                     lootcontext$builder.withParameter(LootContextParams.EXPLOSION_RADIUS, this.radius);
+                  if (this.blockInteraction == Explosion.BlockInteraction.DESTROY || yield < 1.0F) { // CraftBukkit - add yield
+                     lootcontext$builder.withParameter(LootContextParams.EXPLOSION_RADIUS,  1.0F / yield); // CraftBukkit - add yield
                   }
 
                   blockstate.getDrops(lootcontext$builder).forEach((p_46074_) -> {
@@ -254,8 +_,7 @@
                   });
                }
 
-               this.level.setBlock(blockpos, Blocks.AIR.defaultBlockState(), 3);
-               block.wasExploded(this.level, blockpos, this);
+               blockstate.onBlockExploded(this.level, blockpos, this);
                this.level.getProfiler().pop();
             }
          }
@@ -268,7 +_,11 @@
       if (this.fire) {
          for(BlockPos blockpos2 : this.toBlow) {
             if (this.random.nextInt(3) == 0 && this.level.getBlockState(blockpos2).isAir() && this.level.getBlockState(blockpos2.below()).isSolidRender(this.level, blockpos2.below())) {
-               this.level.setBlockAndUpdate(blockpos2, BaseFireBlock.getState(this.level, blockpos2));
+               // CraftBukkit start - Ignition by explosion
+               if (!org.bukkit.craftbukkit.v1_18_R2.event.CraftEventFactory.callBlockIgniteEvent(this.level, blockpos2.getX(), blockpos2.getY(), blockpos2.getZ(), this).isCancelled()) {
+                  this.level.setBlockAndUpdate(blockpos2, BaseFireBlock.getState(this.level, blockpos2));
+               }
+               // CraftBukkit end
             }
          }
       }
@@ -276,6 +_,7 @@
    }
 
    private static void addBlockDrops(ObjectArrayList<Pair<ItemStack, BlockPos>> p_46068_, ItemStack p_46069_, BlockPos p_46070_) {
+      if (p_46069_.isEmpty()) return; // CraftBukkit - SPIGOT-5425
       int i = p_46068_.size();
 
       for(int j = 0; j < i; ++j) {
@@ -327,6 +_,15 @@
 
    public List<BlockPos> getToBlow() {
       return this.toBlow;
+   }
+
+   public Vec3 getPosition() {
+      return this.position;
+   }
+
+   @Nullable
+   public Entity getExploder() {
+      return this.source;
    }
 
    public static enum BlockInteraction {
