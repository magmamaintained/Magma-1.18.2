--- a/net/minecraft/world/level/block/entity/BlockEntity.java
+++ b/net/minecraft/world/level/block/entity/BlockEntity.java
@@ -15,7 +_,8 @@
 import net.minecraft.world.level.block.state.BlockState;
 import org.slf4j.Logger;
 
-public abstract class BlockEntity {
+
+public abstract class BlockEntity extends net.minecraftforge.common.capabilities.CapabilityProvider<BlockEntity> implements net.minecraftforge.common.extensions.IForgeBlockEntity {
    private static final Logger LOGGER = LogUtils.getLogger();
    private final BlockEntityType<?> type;
    @Nullable
@@ -23,11 +_,21 @@
    protected final BlockPos worldPosition;
    protected boolean remove;
    private BlockState blockState;
+   private CompoundTag customTileData;
+
+   public co.aikar.timings.Timing tickTimer = co.aikar.timings.MinecraftTimings.getTileEntityTimings(this); // Paper
+
+   // CraftBukkit start - data containers
+   private static final org.bukkit.craftbukkit.v1_18_R2.persistence.CraftPersistentDataTypeRegistry DATA_TYPE_REGISTRY = new org.bukkit.craftbukkit.v1_18_R2.persistence.CraftPersistentDataTypeRegistry();
+   public org.bukkit.craftbukkit.v1_18_R2.persistence.CraftPersistentDataContainer persistentDataContainer;
+   // CraftBukkit end
 
    public BlockEntity(BlockEntityType<?> p_155228_, BlockPos p_155229_, BlockState p_155230_) {
+      super(BlockEntity.class);
       this.type = p_155228_;
       this.worldPosition = p_155229_.immutable();
       this.blockState = p_155230_;
+      this.gatherCapabilities();
    }
 
    public static BlockPos getPosFromTag(CompoundTag p_187473_) {
@@ -48,9 +_,20 @@
    }
 
    public void load(CompoundTag p_155245_) {
+      if (p_155245_.contains("ForgeData")) this.customTileData = p_155245_.getCompound("ForgeData");
+      if (getCapabilities() != null && p_155245_.contains("ForgeCaps")) deserializeCaps(p_155245_.getCompound("ForgeCaps"));
+      // CraftBukkit start - read container
+      this.persistentDataContainer = new org.bukkit.craftbukkit.v1_18_R2.persistence.CraftPersistentDataContainer(DATA_TYPE_REGISTRY);
+      net.minecraft.nbt.Tag persistentDataTag = p_155245_.get("PublicBukkitValues");
+      if (persistentDataTag instanceof CompoundTag) {
+         this.persistentDataContainer.putAll((CompoundTag) persistentDataTag);
+      }
+      // CraftBukkit end
    }
 
    protected void saveAdditional(CompoundTag p_187471_) {
+      if (this.customTileData != null) p_187471_.put("ForgeData", this.customTileData.copy());
+      if (getCapabilities() != null) p_187471_.put("ForgeCaps", serializeCaps());
    }
 
    public final CompoundTag saveWithFullMetadata() {
@@ -68,6 +_,11 @@
    public final CompoundTag saveWithoutMetadata() {
       CompoundTag compoundtag = new CompoundTag();
       this.saveAdditional(compoundtag);
+      // CraftBukkit start - store container
+      if (this.persistentDataContainer != null && !this.persistentDataContainer.isEmpty()) {
+         compoundtag.put("PublicBukkitValues", this.persistentDataContainer.toTagCompound());
+      }
+      // CraftBukkit end
       return compoundtag;
    }
 
@@ -133,7 +_,7 @@
    }
 
    protected static void setChanged(Level p_155233_, BlockPos p_155234_, BlockState p_155235_) {
-      p_155233_.blockEntityChanged(p_155234_);
+      p_155233_.blockEntityChangedWithoutNeighborUpdates(p_155234_);
       if (!p_155235_.isAir()) {
          p_155233_.updateNeighbourForOutputSignal(p_155234_, p_155235_.getBlock());
       }
@@ -163,6 +_,13 @@
 
    public void setRemoved() {
       this.remove = true;
+      this.invalidateCaps();
+      requestModelDataUpdate();
+   }
+
+   @Override
+   public void onChunkUnloaded() {
+      this.invalidateCaps();
    }
 
    public void clearRemoved() {
@@ -191,9 +_,22 @@
       return this.type;
    }
 
+   @Override
+   public CompoundTag getTileData() {
+      if (this.customTileData == null)
+         this.customTileData = new CompoundTag();
+      return this.customTileData;
+   }
+
    /** @deprecated */
    @Deprecated
    public void setBlockState(BlockState p_155251_) {
       this.blockState = p_155251_;
    }
+
+   // CraftBukkit start - add method
+   public org.bukkit.inventory.InventoryHolder getOwner() {
+      return org.magmafoundation.magma.helpers.InventoryHelper.getHolder(level, worldPosition);
+   }
+   // CraftBukkit end
 }
