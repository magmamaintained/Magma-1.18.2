--- a/net/minecraft/world/level/block/CactusBlock.java
+++ b/net/minecraft/world/level/block/CactusBlock.java
@@ -21,7 +_,7 @@
 import net.minecraft.world.phys.shapes.CollisionContext;
 import net.minecraft.world.phys.shapes.VoxelShape;
 
-public class CactusBlock extends Block {
+public class CactusBlock extends Block implements net.minecraftforge.common.IPlantable {
    public static final IntegerProperty AGE = BlockStateProperties.AGE_15;
    public static final int MAX_AGE = 15;
    protected static final int AABB_OFFSET = 1;
@@ -34,6 +_,7 @@
    }
 
    public void tick(BlockState p_51138_, ServerLevel p_51139_, BlockPos p_51140_, Random p_51141_) {
+      if (!p_51139_.isAreaLoaded(p_51140_, 1)) return; // Forge: prevent growing cactus from loading unloaded chunks with block update
       if (!p_51138_.canSurvive(p_51139_, p_51140_)) {
          p_51139_.destroyBlock(p_51140_, true);
       }
@@ -49,15 +_,20 @@
 
          if (i < 3) {
             int j = p_51166_.getValue(AGE);
-            if (j == 15) {
-               p_51167_.setBlockAndUpdate(blockpos, this.defaultBlockState());
+            if(net.minecraftforge.common.ForgeHooks.onCropsGrowPre(p_51167_, blockpos, p_51166_, true)) {
+            if (j >= (byte) range(3, ((100.0F / p_51167_.spigotConfig.cactusModifier) * 15) + 0.5F, 15)) { // Spigot
+               org.bukkit.craftbukkit.v1_18_R2.event.CraftEventFactory.handleBlockGrowEvent(p_51167_, blockpos, this.defaultBlockState()); // CraftBukkit
                BlockState blockstate = p_51166_.setValue(AGE, Integer.valueOf(0));
                p_51167_.setBlock(p_51168_, blockstate, 4);
-               blockstate.neighborChanged(p_51167_, blockpos, this, p_51168_, false);
+               if (org.magmafoundation.magma.configuration.MagmaConfig.instance.patchUpdateSuppression.getValues())
+                  p_51167_.neighborChanged(blockstate, blockpos, this, p_51168_, false);
+               else
+                  blockstate.neighborChanged(p_51167_, blockpos, this, p_51168_, false);
             } else {
                p_51167_.setBlock(p_51168_, p_51166_.setValue(AGE, Integer.valueOf(j + 1)), 4);
             }
-
+            net.minecraftforge.common.ForgeHooks.onCropsGrowPost(p_51167_, p_51168_, p_51166_);
+            }
          }
       }
    }
@@ -88,11 +_,13 @@
       }
 
       BlockState blockstate1 = p_51154_.getBlockState(p_51155_.below());
-      return (blockstate1.is(Blocks.CACTUS) || blockstate1.is(Blocks.SAND) || blockstate1.is(Blocks.RED_SAND)) && !p_51154_.getBlockState(p_51155_.above()).getMaterial().isLiquid();
+      return blockstate1.canSustainPlant(p_51154_, p_51155_, Direction.UP, this) && !p_51154_.getBlockState(p_51155_.above()).getMaterial().isLiquid();
    }
 
    public void entityInside(BlockState p_51148_, Level p_51149_, BlockPos p_51150_, Entity p_51151_) {
+      org.bukkit.craftbukkit.v1_18_R2.event.CraftEventFactory.blockDamage = p_51149_.getWorld().getBlockAt(p_51150_.getX(), p_51150_.getY(), p_51150_.getZ()); // CraftBukkit
       p_51151_.hurt(DamageSource.CACTUS, 1.0F);
+      org.bukkit.craftbukkit.v1_18_R2.event.CraftEventFactory.blockDamage = null; // CraftBukkit
    }
 
    protected void createBlockStateDefinition(StateDefinition.Builder<Block, BlockState> p_51164_) {
@@ -101,5 +_,15 @@
 
    public boolean isPathfindable(BlockState p_51143_, BlockGetter p_51144_, BlockPos p_51145_, PathComputationType p_51146_) {
       return false;
+   }
+
+   @Override
+   public net.minecraftforge.common.PlantType getPlantType(BlockGetter world, BlockPos pos) {
+      return net.minecraftforge.common.PlantType.DESERT;
+   }
+
+   @Override
+   public BlockState getPlant(BlockGetter world, BlockPos pos) {
+      return defaultBlockState();
    }
 }
