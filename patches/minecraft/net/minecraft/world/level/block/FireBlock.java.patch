--- a/net/minecraft/world/level/block/FireBlock.java
+++ b/net/minecraft/world/level/block/FireBlock.java
@@ -89,7 +_,23 @@
    }
 
    public BlockState updateShape(BlockState p_53458_, Direction p_53459_, BlockState p_53460_, LevelAccessor p_53461_, BlockPos p_53462_, BlockPos p_53463_) {
-      return this.canSurvive(p_53458_, p_53461_, p_53462_) ? this.getStateWithAge(p_53461_, p_53462_, p_53458_.getValue(AGE)) : Blocks.AIR.defaultBlockState();
+      // CraftBukkit start
+      if (!this.canSurvive(p_53458_, p_53461_, p_53462_)) {
+         // Suppress during worldgen
+         if (!(p_53461_ instanceof Level)) {
+            return Blocks.AIR.defaultBlockState();
+         }
+         org.bukkit.craftbukkit.v1_18_R2.block.CraftBlockState blockState = org.bukkit.craftbukkit.v1_18_R2.block.CraftBlockStates.getBlockState(p_53461_, p_53462_);
+         blockState.setData(Blocks.AIR.defaultBlockState());
+         org.bukkit.event.block.BlockFadeEvent event = new org.bukkit.event.block.BlockFadeEvent(blockState.getBlock(), blockState);
+         ((Level) p_53461_).getCraftServer().getPluginManager().callEvent(event);
+         if (!event.isCancelled()) {
+            return blockState.getHandle();
+         }
+      }
+      return this.getStateWithAge(p_53461_, p_53462_, (Integer) p_53458_.getValue(AGE));
+      // CraftBukkit end
+      
    }
 
    public VoxelShape getShape(BlockState p_53474_, BlockGetter p_53475_, BlockPos p_53476_, CollisionContext p_53477_) {
@@ -103,13 +_,13 @@
    protected BlockState getStateForPlacement(BlockGetter p_53471_, BlockPos p_53472_) {
       BlockPos blockpos = p_53472_.below();
       BlockState blockstate = p_53471_.getBlockState(blockpos);
-      if (!this.canBurn(blockstate) && !blockstate.isFaceSturdy(p_53471_, blockpos, Direction.UP)) {
+      if (!this.canCatchFire(p_53471_, p_53472_, Direction.UP) && !blockstate.isFaceSturdy(p_53471_, blockpos, Direction.UP)) {
          BlockState blockstate1 = this.defaultBlockState();
 
          for(Direction direction : Direction.values()) {
             BooleanProperty booleanproperty = PROPERTY_BY_DIRECTION.get(direction);
             if (booleanproperty != null) {
-               blockstate1 = blockstate1.setValue(booleanproperty, Boolean.valueOf(this.canBurn(p_53471_.getBlockState(p_53472_.relative(direction)))));
+               blockstate1 = blockstate1.setValue(booleanproperty, Boolean.valueOf(this.canCatchFire(p_53471_, p_53472_.relative(direction), direction.getOpposite())));
             }
          }
 
@@ -128,14 +_,18 @@
       p_53450_.scheduleTick(p_53451_, this, getFireTickDelay(p_53450_.random));
       if (p_53450_.getGameRules().getBoolean(GameRules.RULE_DOFIRETICK)) {
          if (!p_53449_.canSurvive(p_53450_, p_53451_)) {
-            p_53450_.removeBlock(p_53451_, false);
+            if (!org.bukkit.craftbukkit.v1_18_R2.event.CraftEventFactory.callBlockFadeEvent(p_53450_, p_53451_, Blocks.AIR.defaultBlockState()).isCancelled()) {
+               p_53450_.removeBlock(p_53451_, false); //Magma - directly implement removeBlock here to prevent a mixin inject error (look at this.fireExtinguished)
+            }
          }
 
          BlockState blockstate = p_53450_.getBlockState(p_53451_.below());
-         boolean flag = blockstate.is(p_53450_.dimensionType().infiniburn());
+         boolean flag = blockstate.isFireSource(p_53450_, p_53451_, Direction.UP);
          int i = p_53449_.getValue(AGE);
          if (!flag && p_53450_.isRaining() && this.isNearRain(p_53450_, p_53451_) && p_53452_.nextFloat() < 0.2F + (float)i * 0.03F) {
-            p_53450_.removeBlock(p_53451_, false);
+            if (!org.bukkit.craftbukkit.v1_18_R2.event.CraftEventFactory.callBlockFadeEvent(p_53450_, p_53451_, Blocks.AIR.defaultBlockState()).isCancelled()) {
+               p_53450_.removeBlock(p_53451_, false); //Magma - directly implement removeBlock here to prevent a mixin inject error (look at this.fireExtinguished)
+            }
          } else {
             int j = Math.min(15, i + p_53452_.nextInt(3) / 2);
             if (i != j) {
@@ -147,26 +_,32 @@
                if (!this.isValidFireLocation(p_53450_, p_53451_)) {
                   BlockPos blockpos = p_53451_.below();
                   if (!p_53450_.getBlockState(blockpos).isFaceSturdy(p_53450_, blockpos, Direction.UP) || i > 3) {
-                     p_53450_.removeBlock(p_53451_, false);
+                     if (!org.bukkit.craftbukkit.v1_18_R2.event.CraftEventFactory.callBlockFadeEvent(p_53450_, p_53451_, Blocks.AIR.defaultBlockState()).isCancelled()) {
+                        p_53450_.removeBlock(p_53451_, false); //Magma - directly implement removeBlock here to prevent a mixin inject error (look at this.fireExtinguished)
+                     }
                   }
 
                   return;
                }
 
-               if (i == 15 && p_53452_.nextInt(4) == 0 && !this.canBurn(p_53450_.getBlockState(p_53451_.below()))) {
-                  p_53450_.removeBlock(p_53451_, false);
+               if (i == 15 && p_53452_.nextInt(4) == 0 && !this.canCatchFire(p_53450_, p_53451_.below(), Direction.UP)) {
+                  if (!org.bukkit.craftbukkit.v1_18_R2.event.CraftEventFactory.callBlockFadeEvent(p_53450_, p_53451_, Blocks.AIR.defaultBlockState()).isCancelled()) {
+                     p_53450_.removeBlock(p_53451_, false); //Magma - directly implement removeBlock here to prevent a mixin inject error (look at this.fireExtinguished)
+                  }
                   return;
                }
             }
 
             boolean flag1 = p_53450_.isHumidAt(p_53451_);
             int k = flag1 ? -50 : 0;
-            this.checkBurnOut(p_53450_, p_53451_.east(), 300 + k, p_53452_, i);
-            this.checkBurnOut(p_53450_, p_53451_.west(), 300 + k, p_53452_, i);
-            this.checkBurnOut(p_53450_, p_53451_.below(), 250 + k, p_53452_, i);
-            this.checkBurnOut(p_53450_, p_53451_.above(), 250 + k, p_53452_, i);
-            this.checkBurnOut(p_53450_, p_53451_.north(), 300 + k, p_53452_, i);
-            this.checkBurnOut(p_53450_, p_53451_.south(), 300 + k, p_53452_, i);
+            // CraftBukkit start - add source blockposition to burn calls
+            this.tryCatchFire(p_53450_, p_53451_.east(), 300 + k, p_53452_, i, Direction.WEST, p_53451_);
+            this.tryCatchFire(p_53450_, p_53451_.west(), 300 + k, p_53452_, i, Direction.EAST, p_53451_);
+            this.tryCatchFire(p_53450_, p_53451_.below(), 250 + k, p_53452_, i, Direction.UP, p_53451_);
+            this.tryCatchFire(p_53450_, p_53451_.above(), 250 + k, p_53452_, i, Direction.DOWN, p_53451_);
+            this.tryCatchFire(p_53450_, p_53451_.north(), 300 + k, p_53452_, i, Direction.SOUTH, p_53451_);
+            this.tryCatchFire(p_53450_, p_53451_.south(), 300 + k, p_53452_, i, Direction.NORTH, p_53451_);
+            // CraftBukkit end
             BlockPos.MutableBlockPos blockpos$mutableblockpos = new BlockPos.MutableBlockPos();
 
             for(int l = -1; l <= 1; ++l) {
@@ -188,7 +_,14 @@
 
                            if (i2 > 0 && p_53452_.nextInt(k1) <= i2 && (!p_53450_.isRaining() || !this.isNearRain(p_53450_, blockpos$mutableblockpos))) {
                               int j2 = Math.min(15, i + p_53452_.nextInt(5) / 4);
-                              p_53450_.setBlock(blockpos$mutableblockpos, this.getStateWithAge(p_53450_, blockpos$mutableblockpos, j2), 3);
+                              // CraftBukkit start - Call to stop spread of fire
+                              if (p_53450_.getBlockState(blockpos$mutableblockpos).getBlock() != Blocks.FIRE) {
+                                 if (org.bukkit.craftbukkit.v1_18_R2.event.CraftEventFactory.callBlockIgniteEvent(p_53450_, blockpos$mutableblockpos, p_53451_).isCancelled()) {
+                                    continue;
+                                 }
+                                 org.bukkit.craftbukkit.v1_18_R2.event.CraftEventFactory.handleBlockSpreadEvent(p_53450_, p_53451_, blockpos$mutableblockpos, this.getStateWithAge(p_53450_, blockpos$mutableblockpos, j2), 3); // CraftBukkit
+                              }
+                              // CraftBukkit end
                            }
                         }
                      }
@@ -204,14 +_,87 @@
       return p_53429_.isRainingAt(p_53430_) || p_53429_.isRainingAt(p_53430_.west()) || p_53429_.isRainingAt(p_53430_.east()) || p_53429_.isRainingAt(p_53430_.north()) || p_53429_.isRainingAt(p_53430_.south());
    }
 
+   @Deprecated //Forge: Use IForgeBlockState.getFlammability, Public for default implementation only.
    public int getBurnOdd(BlockState p_53493_) {
       return p_53493_.hasProperty(BlockStateProperties.WATERLOGGED) && p_53493_.getValue(BlockStateProperties.WATERLOGGED) ? 0 : this.burnOdds.getInt(p_53493_.getBlock());
    }
 
+   @Deprecated //Forge: Use IForgeBlockState.getFireSpreadSpeed
    public int getFlameOdds(BlockState p_53495_) {
       return p_53495_.hasProperty(BlockStateProperties.WATERLOGGED) && p_53495_.getValue(BlockStateProperties.WATERLOGGED) ? 0 : this.flameOdds.getInt(p_53495_.getBlock());
    }
 
+   //Magma - add constructor without source block position
+   /*
+   private void tryCatchFire(Level p_53432_, BlockPos p_53433_, int p_53434_, Random p_53435_, int p_53436_, Direction face) {
+      if (this.tryCatchFire_source == null)
+         throw new IllegalStateException("Source block position is null!");
+      BlockPos source = tryCatchFire_source;
+      //unset
+      tryCatchFire_source = null;
+      int i = p_53432_.getBlockState(p_53433_).getFlammability(p_53432_, p_53433_, face);
+      if (p_53435_.nextInt(p_53434_) < i) {
+         BlockState blockstate = p_53432_.getBlockState(p_53433_);
+
+         // CraftBukkit start
+         org.bukkit.block.Block theBlock = p_53432_.getWorld().getBlockAt(p_53433_.getX(), p_53433_.getY(), p_53433_.getZ());
+         org.bukkit.block.Block sourceBlock = p_53432_.getWorld().getBlockAt(source.getX(), source.getY(), source.getZ());
+         org.bukkit.event.block.BlockBurnEvent event = new org.bukkit.event.block.BlockBurnEvent(theBlock, sourceBlock);
+         p_53432_.getCraftServer().getPluginManager().callEvent(event);
+         if (event.isCancelled()) {
+            return;
+         }
+         // CraftBukkit end
+
+         if (p_53435_.nextInt(p_53436_ + 10) < 5 && !p_53432_.isRainingAt(p_53433_)) {
+            int j = Math.min(p_53436_ + p_53435_.nextInt(5) / 4, 15);
+            p_53432_.setBlock(p_53433_, this.getStateWithAge(p_53432_, p_53433_, j), 3);
+         } else {
+            p_53432_.removeBlock(p_53433_, false);
+         }
+
+         blockstate.onCaughtFire(p_53432_, p_53433_, face, null);
+      }
+   }*/
+
+   //Magma start - add constructor without source block position
+   @org.jetbrains.annotations.Nullable private BlockPos tryCatchFire_source;
+   private void tryCatchFire(Level p_53432_, BlockPos p_53433_, int p_53434_, Random p_53435_, int p_53436_, Direction face) {
+      BlockPos source = tryCatchFire_source;
+      //unset
+      tryCatchFire_source = null;
+      int i = p_53432_.getBlockState(p_53433_).getFlammability(p_53432_, p_53433_, face);
+      if (p_53435_.nextInt(p_53434_) < i) {
+         BlockState blockstate = p_53432_.getBlockState(p_53433_);
+
+         // CraftBukkit start
+         org.bukkit.block.Block theBlock = p_53432_.getWorld().getBlockAt(p_53433_.getX(), p_53433_.getY(), p_53433_.getZ());
+         //Magma - had to add a null check to the source, this could be a potential problem for plugins interacting with mods but there was no other way
+         org.bukkit.block.Block sourceBlock = source == null ? null : p_53432_.getWorld().getBlockAt(source.getX(), source.getY(), source.getZ());
+         org.bukkit.event.block.BlockBurnEvent event = new org.bukkit.event.block.BlockBurnEvent(theBlock, sourceBlock);
+         p_53432_.getCraftServer().getPluginManager().callEvent(event);
+         if (event.isCancelled()) {
+            return;
+         }
+         // CraftBukkit end
+
+         if (p_53435_.nextInt(p_53436_ + 10) < 5 && !p_53432_.isRainingAt(p_53433_)) {
+            int j = Math.min(p_53436_ + p_53435_.nextInt(5) / 4, 15);
+            p_53432_.setBlock(p_53433_, this.getStateWithAge(p_53432_, p_53433_, j), 3);
+         } else {
+            p_53432_.removeBlock(p_53433_, false);
+         }
+
+         blockstate.onCaughtFire(p_53432_, p_53433_, face, null);
+      }
+   }
+
+   private void tryCatchFire(Level p_53432_, BlockPos p_53433_, int p_53434_, Random p_53435_, int p_53436_, Direction face, BlockPos source) { // CraftBukkit - added source
+      tryCatchFire_source = source;
+      tryCatchFire(p_53432_, p_53433_, p_53434_, p_53435_, p_53436_, face);
+   }
+   //Magma end
+
    private void checkBurnOut(Level p_53432_, BlockPos p_53433_, int p_53434_, Random p_53435_, int p_53436_) {
       int i = this.getBurnOdd(p_53432_.getBlockState(p_53433_));
       if (p_53435_.nextInt(p_53434_) < i) {
@@ -239,7 +_,7 @@
 
    private boolean isValidFireLocation(BlockGetter p_53486_, BlockPos p_53487_) {
       for(Direction direction : Direction.values()) {
-         if (this.canBurn(p_53486_.getBlockState(p_53487_.relative(direction)))) {
+         if (this.canCatchFire(p_53486_, p_53487_.relative(direction), direction.getOpposite())) {
             return true;
          }
       }
@@ -255,13 +_,14 @@
 
          for(Direction direction : Direction.values()) {
             BlockState blockstate = p_53442_.getBlockState(p_53443_.relative(direction));
-            i = Math.max(this.getFlameOdds(blockstate), i);
+            i = Math.max(blockstate.getFireSpreadSpeed(p_53442_, p_53443_.relative(direction), direction.getOpposite()), i);
          }
 
          return i;
       }
    }
 
+   @Deprecated //Forge: Use canCatchFire with more context
    protected boolean canBurn(BlockState p_53489_) {
       return this.getFlameOdds(p_53489_) > 0;
    }
@@ -280,8 +_,21 @@
    }
 
    private void setFlammable(Block p_53445_, int p_53446_, int p_53447_) {
+      if (p_53445_ == Blocks.AIR) throw new IllegalArgumentException("Tried to set air on fire... This is bad.");
       this.flameOdds.put(p_53445_, p_53446_);
       this.burnOdds.put(p_53445_, p_53447_);
+   }
+
+   /**
+    * Side sensitive version that calls the block function.
+    *
+    * @param world The current world
+    * @param pos Block position
+    * @param face The side the fire is coming from
+    * @return True if the face can catch fire.
+    */
+   public boolean canCatchFire(BlockGetter world, BlockPos pos, Direction face) {
+      return world.getBlockState(pos).isFlammable(world, pos, face);
    }
 
    public static void bootStrap() {
