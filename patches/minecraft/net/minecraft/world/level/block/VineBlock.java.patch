--- a/net/minecraft/world/level/block/VineBlock.java
+++ b/net/minecraft/world/level/block/VineBlock.java
@@ -22,7 +_,7 @@
 import net.minecraft.world.phys.shapes.Shapes;
 import net.minecraft.world.phys.shapes.VoxelShape;
 
-public class VineBlock extends Block {
+public class VineBlock extends Block implements net.minecraftforge.common.IForgeShearable {
    public static final BooleanProperty UP = PipeBlock.UP;
    public static final BooleanProperty NORTH = PipeBlock.NORTH;
    public static final BooleanProperty EAST = PipeBlock.EAST;
@@ -157,7 +_,7 @@
    }
 
    public void randomTick(BlockState p_57892_, ServerLevel p_57893_, BlockPos p_57894_, Random p_57895_) {
-      if (p_57895_.nextInt(4) == 0) {
+      if (p_57893_.random.nextInt(Math.max(1, (int) (100.0F / p_57893_.spigotConfig.vineModifier) * 4)) == 0 && p_57893_.isAreaLoaded(p_57894_, 4)) { // Forge: check area to prevent loading unloaded chunks // Spigot
          Direction direction = Direction.getRandom(p_57895_);
          BlockPos blockpos = p_57894_.above();
          if (direction.getAxis().isHorizontal() && !p_57892_.getValue(getPropertyForFace(direction))) {
@@ -171,19 +_,24 @@
                   boolean flag1 = p_57892_.getValue(getPropertyForFace(direction4));
                   BlockPos blockpos2 = blockpos4.relative(direction3);
                   BlockPos blockpos3 = blockpos4.relative(direction4);
+
+                  // CraftBukkit start - Call BlockSpreadEvent
+                  BlockPos source = p_57894_;
+
                   if (flag && isAcceptableNeighbour(p_57893_, blockpos2, direction3)) {
-                     p_57893_.setBlock(blockpos4, this.defaultBlockState().setValue(getPropertyForFace(direction3), Boolean.valueOf(true)), 2);
+                     org.bukkit.craftbukkit.v1_18_R2.event.CraftEventFactory.handleBlockSpreadEvent(p_57893_, source, blockpos4, this.defaultBlockState().setValue(getPropertyForFace(direction3), Boolean.valueOf(true)), 2);
                   } else if (flag1 && isAcceptableNeighbour(p_57893_, blockpos3, direction4)) {
-                     p_57893_.setBlock(blockpos4, this.defaultBlockState().setValue(getPropertyForFace(direction4), Boolean.valueOf(true)), 2);
+                     org.bukkit.craftbukkit.v1_18_R2.event.CraftEventFactory.handleBlockSpreadEvent(p_57893_, source, blockpos4, this.defaultBlockState().setValue(getPropertyForFace(direction4), Boolean.valueOf(true)), 2);
                   } else {
                      Direction direction1 = direction.getOpposite();
                      if (flag && p_57893_.isEmptyBlock(blockpos2) && isAcceptableNeighbour(p_57893_, p_57894_.relative(direction3), direction1)) {
-                        p_57893_.setBlock(blockpos2, this.defaultBlockState().setValue(getPropertyForFace(direction1), Boolean.valueOf(true)), 2);
+                        org.bukkit.craftbukkit.v1_18_R2.event.CraftEventFactory.handleBlockSpreadEvent(p_57893_, source, blockpos2, this.defaultBlockState().setValue(getPropertyForFace(direction1), Boolean.valueOf(true)), 2);
                      } else if (flag1 && p_57893_.isEmptyBlock(blockpos3) && isAcceptableNeighbour(p_57893_, p_57894_.relative(direction4), direction1)) {
-                        p_57893_.setBlock(blockpos3, this.defaultBlockState().setValue(getPropertyForFace(direction1), Boolean.valueOf(true)), 2);
+                        org.bukkit.craftbukkit.v1_18_R2.event.CraftEventFactory.handleBlockSpreadEvent(p_57893_, source, blockpos3, this.defaultBlockState().setValue(getPropertyForFace(direction1), Boolean.valueOf(true)), 2);
                      } else if ((double)p_57895_.nextFloat() < 0.05D && isAcceptableNeighbour(p_57893_, blockpos4.above(), Direction.UP)) {
-                        p_57893_.setBlock(blockpos4, this.defaultBlockState().setValue(UP, Boolean.valueOf(true)), 2);
+                        org.bukkit.craftbukkit.v1_18_R2.event.CraftEventFactory.handleBlockSpreadEvent(p_57893_, source, blockpos4, this.defaultBlockState().setValue(UP, Boolean.valueOf(true)), 2);
                      }
+                     // CraftBukkit end
                   }
                } else if (isAcceptableNeighbour(p_57893_, blockpos4, direction)) {
                   p_57893_.setBlock(p_57894_, p_57892_.setValue(getPropertyForFace(direction), Boolean.valueOf(true)), 2);
@@ -211,7 +_,7 @@
                   }
 
                   if (this.hasHorizontalConnection(blockstate3)) {
-                     p_57893_.setBlock(blockpos, blockstate3, 2);
+                     org.bukkit.craftbukkit.v1_18_R2.event.CraftEventFactory.handleBlockSpreadEvent(p_57893_, p_57894_, blockpos, blockstate3, 2);
                   }
 
                   return;
@@ -225,7 +_,7 @@
                   BlockState blockstate1 = blockstate.isAir() ? this.defaultBlockState() : blockstate;
                   BlockState blockstate2 = this.copyRandomFaces(p_57892_, blockstate1, p_57895_);
                   if (blockstate1 != blockstate2 && this.hasHorizontalConnection(blockstate2)) {
-                     p_57893_.setBlock(blockpos1, blockstate2, 2);
+                     org.bukkit.craftbukkit.v1_18_R2.event.CraftEventFactory.handleBlockSpreadEvent(p_57893_, p_57894_, blockpos1, blockstate2, 2);
                   }
                }
             }
