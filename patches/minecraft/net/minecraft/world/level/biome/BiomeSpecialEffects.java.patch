--- a/net/minecraft/world/level/biome/BiomeSpecialEffects.java
+++ b/net/minecraft/world/level/biome/BiomeSpecialEffects.java
@@ -203,7 +_,7 @@
       }
    }
 
-   public static enum GrassColorModifier implements StringRepresentable {
+   public static enum GrassColorModifier implements StringRepresentable, net.minecraftforge.common.IExtensibleEnum {
       NONE("none") {
          public int modifyColor(double p_48081_, double p_48082_, int p_48083_) {
             return p_48083_;
@@ -222,17 +_,35 @@
       };
 
       private final String name;
-      public static final Codec<BiomeSpecialEffects.GrassColorModifier> CODEC = StringRepresentable.fromEnum(BiomeSpecialEffects.GrassColorModifier::values, BiomeSpecialEffects.GrassColorModifier::byName);
+      public static final Codec<BiomeSpecialEffects.GrassColorModifier> CODEC = net.minecraftforge.common.IExtensibleEnum.createCodecForExtensibleEnum(BiomeSpecialEffects.GrassColorModifier::values, BiomeSpecialEffects.GrassColorModifier::byName);
       private static final Map<String, BiomeSpecialEffects.GrassColorModifier> BY_NAME = Arrays.stream(values()).collect(Collectors.toMap(BiomeSpecialEffects.GrassColorModifier::getName, (p_48069_) -> {
          return p_48069_;
       }));
 
-      public abstract int modifyColor(double p_48065_, double p_48066_, int p_48067_);
+      public int modifyColor(double p_48065_, double p_48066_, int p_48067_) {
+         return delegate.modifyGrassColor(p_48065_, p_48066_, p_48067_);
+      }
 
       GrassColorModifier(String p_48058_) {
          this.name = p_48058_;
       }
 
+      private ColorModifier delegate;
+      private GrassColorModifier(String name, ColorModifier delegate) {
+         this(name);
+         this.delegate = delegate;
+      }
+      public static GrassColorModifier create(String name, String id, ColorModifier delegate) {
+         throw new IllegalStateException("Enum not extended");
+      }
+      @Override
+      public void init() {
+         BY_NAME.put(this.getName(), this);
+      }
+      @FunctionalInterface
+      public interface ColorModifier {
+         int modifyGrassColor(double x, double z, int color);
+      }
       public String getName() {
          return this.name;
       }
