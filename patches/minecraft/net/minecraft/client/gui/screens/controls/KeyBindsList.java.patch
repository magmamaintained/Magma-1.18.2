--- a/net/minecraft/client/gui/screens/controls/KeyBindsList.java
+++ b/net/minecraft/client/gui/screens/controls/KeyBindsList.java
@@ -53,7 +_,7 @@
    }
 
    protected int getScrollbarPosition() {
-      return super.getScrollbarPosition() + 15;
+      return super.getScrollbarPosition() + 15 + 20;
    }
 
    public int getRowWidth() {
@@ -109,7 +_,7 @@
       KeyEntry(final KeyMapping p_193916_, final Component p_193917_) {
          this.key = p_193916_;
          this.name = p_193917_;
-         this.changeButton = new Button(0, 0, 75, 20, p_193917_, (p_193939_) -> {
+         this.changeButton = new Button(0, 0, 75 + 20 /* Forge: Add space */, 20, p_193917_, (p_193939_) -> {
             KeyBindsList.this.keyBindsScreen.selectedKey = p_193916_;
          }) {
             protected MutableComponent createNarrationMessage() {
@@ -117,6 +_,7 @@
             }
          };
          this.resetButton = new Button(0, 0, 50, 20, new TranslatableComponent("controls.reset"), (p_193935_) -> {
+            this.key.setToDefault();
             KeyBindsList.this.minecraft.options.setKey(p_193916_, p_193916_.getDefaultKey());
             KeyMapping.resetMapping();
          }) {
@@ -130,7 +_,7 @@
          boolean flag = KeyBindsList.this.keyBindsScreen.selectedKey == this.key;
          float f = (float)(p_193926_ + 90 - KeyBindsList.this.maxNameWidth);
          KeyBindsList.this.minecraft.font.draw(p_193923_, this.name, f, (float)(p_193925_ + p_193928_ / 2 - 9 / 2), 16777215);
-         this.resetButton.x = p_193926_ + 190;
+         this.resetButton.x = p_193926_ + 190 + 20;
          this.resetButton.y = p_193925_;
          this.resetButton.active = !this.key.isDefault();
          this.resetButton.render(p_193923_, p_193929_, p_193930_, p_193932_);
@@ -138,11 +_,12 @@
          this.changeButton.y = p_193925_;
          this.changeButton.setMessage(this.key.getTranslatedKeyMessage());
          boolean flag1 = false;
+         boolean keyCodeModifierConflict = true; // gracefully handle conflicts like SHIFT vs SHIFT+G
          if (!this.key.isUnbound()) {
             for(KeyMapping keymapping : KeyBindsList.this.minecraft.options.keyMappings) {
                if (keymapping != this.key && this.key.same(keymapping)) {
                   flag1 = true;
-                  break;
+                  keyCodeModifierConflict &= keymapping.hasKeyModifierConflict(this.key);
                }
             }
          }
@@ -150,7 +_,7 @@
          if (flag) {
             this.changeButton.setMessage((new TextComponent("> ")).append(this.changeButton.getMessage().copy().withStyle(ChatFormatting.YELLOW)).append(" <").withStyle(ChatFormatting.YELLOW));
          } else if (flag1) {
-            this.changeButton.setMessage(this.changeButton.getMessage().copy().withStyle(ChatFormatting.RED));
+            this.changeButton.setMessage(this.changeButton.getMessage().copy().withStyle(keyCodeModifierConflict ? ChatFormatting.GOLD : ChatFormatting.RED));
          }
 
          this.changeButton.render(p_193923_, p_193929_, p_193930_, p_193932_);
