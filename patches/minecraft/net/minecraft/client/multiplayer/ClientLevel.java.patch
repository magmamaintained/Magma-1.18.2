--- a/net/minecraft/client/multiplayer/ClientLevel.java
+++ b/net/minecraft/client/multiplayer/ClientLevel.java
@@ -117,6 +_,7 @@
    private final Deque<Runnable> lightUpdateQueue = Queues.newArrayDeque();
    private int serverSimulationDistance;
    private static final Set<Item> MARKER_PARTICLE_ITEMS = Set.of(Items.BARRIER, Items.LIGHT);
+   private final it.unimi.dsi.fastutil.ints.Int2ObjectMap<net.minecraftforge.entity.PartEntity<?>> partEntities = new it.unimi.dsi.fastutil.ints.Int2ObjectOpenHashMap<>();
 
    public ClientLevel(ClientPacketListener p_205505_, ClientLevel.ClientLevelData p_205506_, ResourceKey<Level> p_205507_, Holder<DimensionType> p_205508_, int p_205509_, int p_205510_, Supplier<ProfilerFiller> p_205511_, LevelRenderer p_205512_, boolean p_205513_, long p_205514_) {
       super(p_205506_, p_205507_, p_205508_, p_205511_, true, p_205513_, p_205514_);
@@ -129,6 +_,8 @@
       this.serverSimulationDistance = p_205510_;
       this.updateSkyBrightness();
       this.prepareWeather();
+      this.gatherCapabilities();
+      net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.world.WorldEvent.Load(this));
    }
 
    public void queueLightUpdate(Runnable p_194172_) {
@@ -215,6 +_,7 @@
       this.getProfiler().push(() -> {
          return Registry.ENTITY_TYPE.getKey(p_104640_.getType()).toString();
       });
+      if (p_104640_.canUpdate())
       p_104640_.tick();
       this.getProfiler().pop();
 
@@ -277,8 +_,10 @@
    }
 
    private void addEntity(int p_104740_, Entity p_104741_) {
+      if (net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.entity.EntityJoinWorldEvent(p_104741_, this))) return;
       this.removeEntity(p_104740_, Entity.RemovalReason.DISCARDED);
       this.entityStorage.addEntity(p_104741_);
+      p_104741_.onAddedToWorld();
    }
 
    public void removeEntity(int p_171643_, Entity.RemovalReason p_171644_) {
@@ -409,6 +_,11 @@
    }
 
    public void playSound(@Nullable Player p_104645_, double p_104646_, double p_104647_, double p_104648_, SoundEvent p_104649_, SoundSource p_104650_, float p_104651_, float p_104652_) {
+      net.minecraftforge.event.entity.PlaySoundAtEntityEvent event = net.minecraftforge.event.ForgeEventFactory.onPlaySoundAtEntity(p_104645_, p_104649_, p_104650_, p_104651_, p_104652_);
+      if (event.isCanceled() || event.getSound() == null) return;
+      p_104649_ = event.getSound();
+      p_104650_ = event.getCategory();
+      p_104651_ = event.getVolume();
       if (p_104645_ == this.minecraft.player) {
          this.playLocalSound(p_104646_, p_104647_, p_104648_, p_104649_, p_104650_, p_104651_, p_104652_, false);
       }
@@ -416,6 +_,11 @@
    }
 
    public void playSound(@Nullable Player p_104659_, Entity p_104660_, SoundEvent p_104661_, SoundSource p_104662_, float p_104663_, float p_104664_) {
+      net.minecraftforge.event.entity.PlaySoundAtEntityEvent event = net.minecraftforge.event.ForgeEventFactory.onPlaySoundAtEntity(p_104659_, p_104661_, p_104662_, p_104663_, p_104664_);
+      if (event.isCanceled() || event.getSound() == null) return;
+      p_104661_ = event.getSound();
+      p_104662_ = event.getCategory();
+      p_104663_ = event.getVolume();
       if (p_104659_ == this.minecraft.player) {
          this.minecraft.getSoundManager().play(new EntityBoundSoundInstance(p_104661_, p_104662_, p_104663_, p_104664_, p_104660_));
       }
@@ -732,6 +_,11 @@
    public void gameEvent(@Nullable Entity p_171646_, GameEvent p_171647_, BlockPos p_171648_) {
    }
 
+   @Override
+   public net.minecraft.server.level.ServerLevel getMinecraftWorld() {
+      return null;
+   }
+
    protected Map<String, MapItemSavedData> getAllMapData() {
       return ImmutableMap.copyOf(this.mapData);
    }
@@ -740,7 +_,7 @@
       this.mapData.putAll(p_171673_);
    }
 
-   protected LevelEntityGetter<Entity> getEntities() {
+   public LevelEntityGetter<Entity> getEntities() {
       return this.entityStorage.getEntityGetter();
    }
 
@@ -748,6 +_,11 @@
       return "Chunks[C] W: " + this.chunkSource.gatherStats() + " E: " + this.entityStorage.gatherStats();
    }
 
+   @Override
+   public ResourceKey<net.minecraft.world.level.dimension.LevelStem> getTypeKey() {
+      return null;
+   }
+
    public void addDestroyBlockEffect(BlockPos p_171667_, BlockState p_171668_) {
       this.minecraft.particleEngine.destroy(p_171667_, p_171668_);
    }
@@ -870,6 +_,7 @@
       }
 
       public void setDifficulty(Difficulty p_104852_) {
+         net.minecraftforge.common.ForgeHooks.onDifficultyChange(p_104852_, this.difficulty);
          this.difficulty = p_104852_;
       }
 
@@ -907,11 +_,30 @@
             ClientLevel.this.players.add((AbstractClientPlayer)p_171712_);
          }
 
+         if (p_171712_.isMultipartEntity()) {
+            for (net.minecraftforge.entity.PartEntity<?> part : p_171712_.getParts()) {
+               ClientLevel.this.partEntities.put(part.getId(), part);
+            }
+         }
       }
 
       public void onTrackingEnd(Entity p_171716_) {
          p_171716_.unRide();
          ClientLevel.this.players.remove(p_171716_);
+
+          p_171716_.onRemovedFromWorld();
+          net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.entity.EntityLeaveWorldEvent(p_171716_, ClientLevel.this));
+
+         if (p_171716_.isMultipartEntity()) {
+            for (net.minecraftforge.entity.PartEntity<?> part : p_171716_.getParts()) {
+               ClientLevel.this.partEntities.remove(part.getId());
+            }
+         }
       }
+   }
+
+   @Override
+   public java.util.Collection<net.minecraftforge.entity.PartEntity<?>> getPartEntities() {
+      return this.partEntities.values();
    }
 }
