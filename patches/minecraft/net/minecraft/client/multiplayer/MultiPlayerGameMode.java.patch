--- a/net/minecraft/client/multiplayer/MultiPlayerGameMode.java
+++ b/net/minecraft/client/multiplayer/MultiPlayerGameMode.java
@@ -102,6 +_,7 @@
    }
 
    public boolean destroyBlock(BlockPos p_105268_) {
+      if (minecraft.player.getMainHandItem().onBlockStartBreak(p_105268_, minecraft.player)) return false;
       if (this.minecraft.player.blockActionRestricted(this.minecraft.level, p_105268_, this.localPlayerMode)) {
          return false;
       } else {
@@ -116,9 +_,8 @@
             } else if (blockstate.isAir()) {
                return false;
             } else {
-               block.playerWillDestroy(level, p_105268_, blockstate, this.minecraft.player);
                FluidState fluidstate = level.getFluidState(p_105268_);
-               boolean flag = level.setBlock(p_105268_, fluidstate.createLegacyBlock(), 11);
+               boolean flag = blockstate.onDestroyedByPlayer(level, p_105268_, minecraft.player, false, fluidstate);
                if (flag) {
                   block.destroy(level, p_105268_, blockstate);
                }
@@ -139,21 +_,25 @@
             BlockState blockstate = this.minecraft.level.getBlockState(p_105270_);
             this.minecraft.getTutorial().onDestroyBlock(this.minecraft.level, p_105270_, blockstate, 1.0F);
             this.sendBlockAction(ServerboundPlayerActionPacket.Action.START_DESTROY_BLOCK, p_105270_, p_105271_);
+            if (!net.minecraftforge.common.ForgeHooks.onLeftClickBlock(this.minecraft.player, p_105270_, p_105271_).isCanceled())
             this.destroyBlock(p_105270_);
             this.destroyDelay = 5;
          } else if (!this.isDestroying || !this.sameDestroyTarget(p_105270_)) {
             if (this.isDestroying) {
                this.sendBlockAction(ServerboundPlayerActionPacket.Action.ABORT_DESTROY_BLOCK, this.destroyBlockPos, p_105271_);
             }
+            net.minecraftforge.event.entity.player.PlayerInteractEvent.LeftClickBlock event = net.minecraftforge.common.ForgeHooks.onLeftClickBlock(this.minecraft.player, p_105270_, p_105271_);
 
             BlockState blockstate1 = this.minecraft.level.getBlockState(p_105270_);
             this.minecraft.getTutorial().onDestroyBlock(this.minecraft.level, p_105270_, blockstate1, 0.0F);
             this.sendBlockAction(ServerboundPlayerActionPacket.Action.START_DESTROY_BLOCK, p_105270_, p_105271_);
             boolean flag = !blockstate1.isAir();
             if (flag && this.destroyProgress == 0.0F) {
+               if (event.getUseBlock() != net.minecraftforge.eventbus.api.Event.Result.DENY)
                blockstate1.attack(this.minecraft.level, p_105270_, this.minecraft.player);
             }
 
+            if (event.getUseItem() == net.minecraftforge.eventbus.api.Event.Result.DENY) return true;
             if (flag && blockstate1.getDestroyProgress(this.minecraft.player, this.minecraft.player.level, p_105270_) >= 1.0F) {
                this.destroyBlock(p_105270_);
             } else {
@@ -193,6 +_,7 @@
          BlockState blockstate1 = this.minecraft.level.getBlockState(p_105284_);
          this.minecraft.getTutorial().onDestroyBlock(this.minecraft.level, p_105284_, blockstate1, 1.0F);
          this.sendBlockAction(ServerboundPlayerActionPacket.Action.START_DESTROY_BLOCK, p_105284_, p_105285_);
+         if (!net.minecraftforge.common.ForgeHooks.onLeftClickBlock(this.minecraft.player, p_105284_, p_105285_).isCanceled())
          this.destroyBlock(p_105284_);
          return true;
       } else if (this.sameDestroyTarget(p_105284_)) {
@@ -203,12 +_,13 @@
          } else {
             this.destroyProgress += blockstate.getDestroyProgress(this.minecraft.player, this.minecraft.player.level, p_105284_);
             if (this.destroyTicks % 4.0F == 0.0F) {
-               SoundType soundtype = blockstate.getSoundType();
+               SoundType soundtype = blockstate.getSoundType(this.minecraft.level, p_105284_, this.minecraft.player);
                this.minecraft.getSoundManager().play(new SimpleSoundInstance(soundtype.getHitSound(), SoundSource.BLOCKS, (soundtype.getVolume() + 1.0F) / 8.0F, soundtype.getPitch() * 0.5F, p_105284_));
             }
 
             ++this.destroyTicks;
             this.minecraft.getTutorial().onDestroyBlock(this.minecraft.level, p_105284_, blockstate, Mth.clamp(this.destroyProgress, 0.0F, 1.0F));
+            if (net.minecraftforge.common.ForgeHooks.onLeftClickBlock(this.minecraft.player, p_105284_, p_105285_).getUseItem() == net.minecraftforge.eventbus.api.Event.Result.DENY) return true;
             if (this.destroyProgress >= 1.0F) {
                this.isDestroying = false;
                this.sendBlockAction(ServerboundPlayerActionPacket.Action.STOP_DESTROY_BLOCK, p_105284_, p_105285_);
@@ -227,7 +_,7 @@
    }
 
    public float getPickRange() {
-      return this.localPlayerMode.isCreative() ? 5.0F : 4.5F;
+      return (float) this.minecraft.player.getReachDistance();
    }
 
    public void tick() {
@@ -244,7 +_,7 @@
       ItemStack itemstack = this.minecraft.player.getMainHandItem();
       boolean flag = this.destroyingItem.isEmpty() && itemstack.isEmpty();
       if (!this.destroyingItem.isEmpty() && !itemstack.isEmpty()) {
-         flag = itemstack.is(this.destroyingItem.getItem()) && ItemStack.tagMatches(itemstack, this.destroyingItem) && (itemstack.isDamageableItem() || itemstack.getDamageValue() == this.destroyingItem.getDamageValue());
+         flag = !this.destroyingItem.shouldCauseBlockBreakReset(itemstack);
       }
 
       return p_105282_.equals(this.destroyBlockPos) && flag;
@@ -266,13 +_,27 @@
          return InteractionResult.FAIL;
       } else {
          ItemStack itemstack = p_105263_.getItemInHand(p_105265_);
+         net.minecraftforge.event.entity.player.PlayerInteractEvent.RightClickBlock event = net.minecraftforge.common.ForgeHooks
+                 .onRightClickBlock(p_105263_, p_105265_, blockpos, p_105266_);
+         if (event.isCanceled()) {
+            this.connection.send(new ServerboundUseItemOnPacket(p_105265_, p_105266_));
+            return event.getCancellationResult();
+         }
          if (this.localPlayerMode == GameType.SPECTATOR) {
             this.connection.send(new ServerboundUseItemOnPacket(p_105265_, p_105266_));
             return InteractionResult.SUCCESS;
          } else {
-            boolean flag = !p_105263_.getMainHandItem().isEmpty() || !p_105263_.getOffhandItem().isEmpty();
+            UseOnContext useoncontext = new UseOnContext(p_105263_, p_105265_, p_105266_);
+            if (event.getUseItem() != net.minecraftforge.eventbus.api.Event.Result.DENY) {
+               InteractionResult result = itemstack.onItemUseFirst(useoncontext);
+               if (result != InteractionResult.PASS) {
+                  this.connection.send(new ServerboundUseItemOnPacket(p_105265_, p_105266_));
+                  return result;
+               }
+            }
+            boolean flag = !p_105263_.getMainHandItem().doesSneakBypassUse(p_105264_,blockpos,p_105263_) || !p_105263_.getOffhandItem().doesSneakBypassUse(p_105264_,blockpos,p_105263_);
             boolean flag1 = p_105263_.isSecondaryUseActive() && flag;
-            if (!flag1) {
+            if (event.getUseBlock() == net.minecraftforge.eventbus.api.Event.Result.ALLOW || (event.getUseBlock() != net.minecraftforge.eventbus.api.Event.Result.DENY && !flag1)) {
                InteractionResult interactionresult = p_105264_.getBlockState(blockpos).use(p_105264_, p_105263_, p_105265_, p_105266_);
                if (interactionresult.consumesAction()) {
                   this.connection.send(new ServerboundUseItemOnPacket(p_105265_, p_105266_));
@@ -281,8 +_,8 @@
             }
 
             this.connection.send(new ServerboundUseItemOnPacket(p_105265_, p_105266_));
-            if (!itemstack.isEmpty() && !p_105263_.getCooldowns().isOnCooldown(itemstack.getItem())) {
-               UseOnContext useoncontext = new UseOnContext(p_105263_, p_105265_, p_105266_);
+            if (event.getUseItem() == net.minecraftforge.eventbus.api.Event.Result.DENY) return InteractionResult.PASS;
+            if (event.getUseItem() == net.minecraftforge.eventbus.api.Event.Result.ALLOW || (!itemstack.isEmpty() && !p_105263_.getCooldowns().isOnCooldown(itemstack.getItem()))) {
                InteractionResult interactionresult1;
                if (this.localPlayerMode.isCreative()) {
                   int i = itemstack.getCount();
@@ -311,10 +_,13 @@
          if (p_105236_.getCooldowns().isOnCooldown(itemstack.getItem())) {
             return InteractionResult.PASS;
          } else {
+            InteractionResult cancelResult = net.minecraftforge.common.ForgeHooks.onItemRightClick(p_105236_, p_105238_);
+            if (cancelResult != null) return cancelResult;
             InteractionResultHolder<ItemStack> interactionresultholder = itemstack.use(p_105237_, p_105236_, p_105238_);
             ItemStack itemstack1 = interactionresultholder.getObject();
             if (itemstack1 != itemstack) {
                p_105236_.setItemInHand(p_105238_, itemstack1);
+               if (itemstack1.isEmpty()) net.minecraftforge.event.ForgeEventFactory.onPlayerDestroyItem(p_105236_, itemstack, p_105238_);
             }
 
             return interactionresultholder.getResult();
@@ -350,6 +_,9 @@
       this.ensureHasSentCarriedItem();
       Vec3 vec3 = p_105233_.getLocation().subtract(p_105232_.getX(), p_105232_.getY(), p_105232_.getZ());
       this.connection.send(ServerboundInteractPacket.createInteractionPacket(p_105232_, p_105231_.isShiftKeyDown(), p_105234_, vec3));
+      if (this.localPlayerMode == GameType.SPECTATOR) return InteractionResult.PASS; // don't fire for spectators to match non-specific EntityInteract
+      InteractionResult cancelResult = net.minecraftforge.common.ForgeHooks.onInteractEntityAt(p_105231_, p_105232_, p_105233_, p_105234_);
+      if(cancelResult != null) return cancelResult;
       return this.localPlayerMode == GameType.SPECTATOR ? InteractionResult.PASS : p_105232_.interactAt(p_105231_, vec3, p_105234_);
    }
 
