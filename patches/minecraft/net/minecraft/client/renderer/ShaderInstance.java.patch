--- a/net/minecraft/client/renderer/ShaderInstance.java
+++ b/net/minecraft/client/renderer/ShaderInstance.java
@@ -96,10 +_,14 @@
    @Nullable
    public final Uniform CHUNK_OFFSET;
 
+   @Deprecated // FORGE: Use the ResourceLocation variant below
    public ShaderInstance(ResourceProvider p_173336_, String p_173337_, VertexFormat p_173338_) throws IOException {
-      this.name = p_173337_;
+      this(p_173336_, new ResourceLocation(p_173337_), p_173338_);
+   }
+   public ShaderInstance(ResourceProvider p_173336_, ResourceLocation shaderLocation, VertexFormat p_173338_) throws IOException {
+      this.name = shaderLocation.getNamespace().equals("minecraft") ? shaderLocation.getPath() : shaderLocation.toString();
       this.vertexFormat = p_173338_;
-      ResourceLocation resourcelocation = new ResourceLocation("shaders/core/" + p_173337_ + ".json");
+      ResourceLocation resourcelocation = new ResourceLocation(shaderLocation.getNamespace(), "shaders/core/" + shaderLocation.getPath() + ".json");
       Resource resource = null;
 
       try {
@@ -209,8 +_,9 @@
       Program program1 = p_173342_.getPrograms().get(p_173343_);
       Program program;
       if (program1 == null) {
-         String s = "shaders/core/" + p_173343_ + p_173342_.getExtension();
-         ResourceLocation resourcelocation = new ResourceLocation(s);
+         ResourceLocation loc = new ResourceLocation(p_173343_);
+         String s = "shaders/core/" + loc.getPath() + p_173342_.getExtension();
+         ResourceLocation resourcelocation = new ResourceLocation(loc.getNamespace(), s);
          Resource resource = p_173341_.getResource(resourcelocation);
          final String s1 = FileUtil.getFullResourcePath(s);
 
