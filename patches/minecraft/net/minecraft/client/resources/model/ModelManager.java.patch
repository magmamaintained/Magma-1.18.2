--- a/net/minecraft/client/resources/model/ModelManager.java
+++ b/net/minecraft/client/resources/model/ModelManager.java
@@ -19,7 +_,7 @@
 
 @OnlyIn(Dist.CLIENT)
 public class ModelManager extends SimplePreparableReloadListener<ModelBakery> implements AutoCloseable {
-   private Map<ResourceLocation, BakedModel> bakedRegistry;
+   private Map<ResourceLocation, BakedModel> bakedRegistry = new java.util.HashMap<>();
    @Nullable
    private AtlasSet atlases;
    private final BlockModelShaper blockModelShaper;
@@ -36,6 +_,10 @@
       this.blockModelShaper = new BlockModelShaper(this);
    }
 
+   public BakedModel getModel(ResourceLocation modelLocation) {
+      return this.bakedRegistry.getOrDefault(modelLocation, this.missingModel);
+   }
+
    public BakedModel getModel(ModelResourceLocation p_119423_) {
       return this.bakedRegistry.getOrDefault(p_119423_, this.missingModel);
    }
@@ -50,7 +_,7 @@
 
    protected ModelBakery prepare(ResourceManager p_119413_, ProfilerFiller p_119414_) {
       p_119414_.startTick();
-      ModelBakery modelbakery = new ModelBakery(p_119413_, this.blockColors, p_119414_, this.maxMipmapLevels);
+      net.minecraftforge.client.model.ForgeModelBakery modelbakery = new net.minecraftforge.client.model.ForgeModelBakery(p_119413_, this.blockColors, p_119414_, this.maxMipmapLevels);
       p_119414_.endTick();
       return modelbakery;
    }
@@ -66,6 +_,7 @@
       this.bakedRegistry = p_119419_.getBakedTopLevelModels();
       this.modelGroups = p_119419_.getModelGroups();
       this.missingModel = this.bakedRegistry.get(ModelBakery.MISSING_MODEL_LOCATION);
+      net.minecraftforge.client.ForgeHooksClient.onModelBake(this, this.bakedRegistry, (net.minecraftforge.client.model.ForgeModelBakery) p_119419_);
       p_119421_.popPush("cache");
       this.blockModelShaper.rebuildCache();
       p_119421_.pop();
@@ -91,6 +_,7 @@
    }
 
    public TextureAtlas getAtlas(ResourceLocation p_119429_) {
+      if (this.atlases == null) throw new RuntimeException("getAtlasTexture called too early!");
       return this.atlases.getAtlas(p_119429_);
    }
 
