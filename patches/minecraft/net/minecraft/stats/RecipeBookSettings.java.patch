--- a/net/minecraft/stats/RecipeBookSettings.java
+++ b/net/minecraft/stats/RecipeBookSettings.java
@@ -10,7 +_,7 @@
 import net.minecraft.world.inventory.RecipeBookType;
 
 public final class RecipeBookSettings {
-   private static final Map<RecipeBookType, Pair<String, String>> TAG_FIELDS = ImmutableMap.of(RecipeBookType.CRAFTING, Pair.of("isGuiOpen", "isFilteringCraftable"), RecipeBookType.FURNACE, Pair.of("isFurnaceGuiOpen", "isFurnaceFilteringCraftable"), RecipeBookType.BLAST_FURNACE, Pair.of("isBlastingFurnaceGuiOpen", "isBlastingFurnaceFilteringCraftable"), RecipeBookType.SMOKER, Pair.of("isSmokerGuiOpen", "isSmokerFilteringCraftable"));
+   private static final Map<RecipeBookType, Pair<String, String>> TAG_FIELDS = new java.util.HashMap<>(ImmutableMap.of(RecipeBookType.CRAFTING, Pair.of("isGuiOpen", "isFilteringCraftable"), RecipeBookType.FURNACE, Pair.of("isFurnaceGuiOpen", "isFurnaceFilteringCraftable"), RecipeBookType.BLAST_FURNACE, Pair.of("isBlastingFurnaceGuiOpen", "isBlastingFurnaceFilteringCraftable"), RecipeBookType.SMOKER, Pair.of("isSmokerGuiOpen", "isSmokerFilteringCraftable")));
    private final Map<RecipeBookType, RecipeBookSettings.TypeSettings> states;
 
    private RecipeBookSettings(Map<RecipeBookType, RecipeBookSettings.TypeSettings> p_12730_) {
@@ -115,6 +_,10 @@
       return this.states.hashCode();
    }
 
+   //FORGE -- called automaticlly on Enum creation - useed for serialization
+   public static void addTagsForType(RecipeBookType type, String openTag, String filteringTag) {
+      TAG_FIELDS.put(type, Pair.of(openTag, filteringTag));
+   }
    static final class TypeSettings {
       boolean open;
       boolean filtering;
