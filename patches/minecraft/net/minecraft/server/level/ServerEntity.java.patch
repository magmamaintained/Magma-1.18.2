--- a/net/minecraft/server/level/ServerEntity.java
+++ b/net/minecraft/server/level/ServerEntity.java
@@ -57,8 +_,12 @@
    private List<Entity> lastPassengers = Collections.emptyList();
    private boolean wasRiding;
    private boolean wasOnGround;
+   // CraftBukkit start
+   private final Set<net.minecraft.server.network.ServerPlayerConnection> trackedPlayers;
 
-   public ServerEntity(ServerLevel p_8528_, Entity p_8529_, int p_8530_, boolean p_8531_, Consumer<Packet<?>> p_8532_) {
+   public ServerEntity(ServerLevel p_8528_, Entity p_8529_, int p_8530_, boolean p_8531_, Consumer<Packet<?>> p_8532_, Set<net.minecraft.server.network.ServerPlayerConnection> trackedPlayers) {
+      this.trackedPlayers = trackedPlayers;
+      // CraftBukkit end
       this.level = p_8528_;
       this.broadcast = p_8532_;
       this.entity = p_8529_;
@@ -75,24 +_,23 @@
       List<Entity> list = this.entity.getPassengers();
       if (!list.equals(this.lastPassengers)) {
          this.lastPassengers = list;
-         this.broadcast.accept(new ClientboundSetPassengersPacket(this.entity));
+         this.broadcastAndSend(new ClientboundSetPassengersPacket(this.entity)); // CraftBukkit
       }
 
       if (this.entity instanceof ItemFrame && this.tickCount % 10 == 0) {
          ItemFrame itemframe = (ItemFrame)this.entity;
          ItemStack itemstack = itemframe.getItem();
-         if (itemstack.getItem() instanceof MapItem) {
-            Integer integer = MapItem.getMapId(itemstack);
-            MapItemSavedData mapitemsaveddata = MapItem.getSavedData(integer, this.level);
-            if (mapitemsaveddata != null) {
-               for(ServerPlayer serverplayer : this.level.players()) {
+         Integer integer = MapItem.getMapId(itemstack);
+         MapItemSavedData mapitemsaveddata = MapItem.getSavedData(itemstack, this.level);
+         if (mapitemsaveddata != null) {
+               for(net.minecraft.server.network.ServerPlayerConnection tracked : this.trackedPlayers) {  // CraftBukkit
+                  ServerPlayer serverplayer = tracked.getPlayer(); // Magma
                   mapitemsaveddata.tickCarriedBy(serverplayer, itemstack);
                   Packet<?> packet = mapitemsaveddata.getUpdatePacket(integer, serverplayer);
                   if (packet != null) {
                      serverplayer.connection.send(packet);
                   }
                }
-            }
          }
 
          this.sendDirtyEntityData();
@@ -121,6 +_,17 @@
             Packet<?> packet1 = null;
             boolean flag3 = flag2 || this.tickCount % 60 == 0;
             boolean flag4 = Math.abs(l - this.yRotp) >= 1 || Math.abs(k1 - this.xRotp) >= 1;
+
+            // CraftBukkit start - Code moved from below
+            if (flag3) {
+               this.updateSentPos();
+            }
+            if (flag4) {
+               this.yRotp = l;
+               this.xRotp = k1;
+            }
+            // CraftBukkit end
+
             if (this.tickCount > 0 || this.entity instanceof AbstractArrow) {
                long i = ClientboundMoveEntityPacket.entityToPacket(vec3.x);
                long j = ClientboundMoveEntityPacket.entityToPacket(vec3.y);
@@ -157,6 +_,7 @@
             }
 
             this.sendDirtyEntityData();
+             /* CraftBukkit start - Code moved up
             if (flag3) {
                this.updateSentPos();
             }
@@ -165,6 +_,7 @@
                this.yRotp = l;
                this.xRotp = k1;
             }
+            // CraftBukkit end */
 
             this.wasRiding = false;
          }
@@ -180,7 +_,23 @@
 
       ++this.tickCount;
       if (this.entity.hurtMarked) {
-         this.broadcastAndSend(new ClientboundSetEntityMotionPacket(this.entity));
+         // CraftBukkit start - Create PlayerVelocity event
+         boolean cancelled = false;
+         if (this.entity instanceof ServerPlayer) {
+            org.bukkit.entity.Player player = (org.bukkit.entity.Player) this.entity.getBukkitEntity();
+            org.bukkit.util.Vector velocity = player.getVelocity();
+            org.bukkit.event.player.PlayerVelocityEvent event = new org.bukkit.event.player.PlayerVelocityEvent(player, velocity.clone());
+            this.entity.level.getCraftServer().getPluginManager().callEvent(event);
+            if (event.isCancelled()) {
+               cancelled = true;
+            } else if (!velocity.equals(event.getVelocity())) {
+               player.setVelocity(event.getVelocity());
+            }
+         }
+         if (!cancelled) {
+            this.broadcastAndSend(new ClientboundSetEntityMotionPacket(this.entity));
+         }
+         // CraftBukkit end
          this.entity.hurtMarked = false;
       }
 
@@ -189,16 +_,29 @@
    public void removePairing(ServerPlayer p_8535_) {
       this.entity.stopSeenByPlayer(p_8535_);
       p_8535_.connection.send(new ClientboundRemoveEntitiesPacket(this.entity.getId()));
+      net.minecraftforge.event.ForgeEventFactory.onStopEntityTracking(this.entity, p_8535_);
    }
 
    public void addPairing(ServerPlayer p_8542_) {
-      this.sendPairingData(p_8542_.connection::send);
+      this.sendPairingData_ent = p_8542_;
+      this.sendPairingData(p_8542_.connection::send); // CraftBukkit - add player
       this.entity.startSeenByPlayer(p_8542_);
+      net.minecraftforge.event.ForgeEventFactory.onStartEntityTracking(this.entity, p_8542_);
    }
 
+   //Magma start - add original method to prevent errors with mods relying on it [fix for quark]
+   @org.jetbrains.annotations.Nullable public ServerPlayer sendPairingData_ent = null;
    public void sendPairingData(Consumer<Packet<?>> p_8537_) {
+      this.sendPairingData(p_8537_, sendPairingData_ent);
+      sendPairingData_ent = null;
+   }
+   //Magma end
+
+   public void sendPairingData(Consumer<Packet<?>> p_8537_, @org.jetbrains.annotations.Nullable ServerPlayer entityplayer) { // CraftBukkit - add player
       if (this.entity.isRemoved()) {
-         LOGGER.warn("Fetching packet for removed entity {}", (Object)this.entity);
+         // CraftBukkit start - Remove useless error spam, just return
+         // LOGGER.warn("Fetching packet for removed entity {}", (Object)this.entity);
+         // CraftBukkit end
       }
 
       Packet<?> packet = this.entity.getAddEntityPacket();
@@ -211,6 +_,14 @@
       boolean flag = this.trackDelta;
       if (this.entity instanceof LivingEntity) {
          Collection<AttributeInstance> collection = ((LivingEntity)this.entity).getAttributes().getSyncableAttributes();
+
+         // CraftBukkit start - If sending own attributes send scaled health instead of current maximum health
+         int id = entityplayer == null ? this.entity.getId() : entityplayer.getId(); //Magma - add null check
+         if (this.entity.getId() == id && this.entity instanceof ServerPlayer player) { //Magma - add class check
+            player.getBukkitEntity().injectScaledMaxHealth(collection, false);
+         }
+         // CraftBukkit end
+
          if (!collection.isEmpty()) {
             p_8537_.accept(new ClientboundUpdateAttributesPacket(this.entity.getId(), collection));
          }
@@ -238,7 +_,13 @@
          if (!list.isEmpty()) {
             p_8537_.accept(new ClientboundSetEquipmentPacket(this.entity.getId(), list));
          }
+         ((LivingEntity) this.entity).detectEquipmentUpdates(); // CraftBukkit - SPIGOT-3789: sync again immediately after sending
       }
+
+      // CraftBukkit start - Fix for nonsensical head yaw
+      this.yHeadRotp = Mth.floor(this.entity.getYHeadRot() * 256.0F / 360.0F);
+      p_8537_.accept(new ClientboundRotateHeadPacket(this.entity, (byte) yHeadRotp));
+      // CraftBukkit end
 
       if (this.entity instanceof LivingEntity) {
          LivingEntity livingentity = (LivingEntity)this.entity;
@@ -274,6 +_,11 @@
       if (this.entity instanceof LivingEntity) {
          Set<AttributeInstance> set = ((LivingEntity)this.entity).getAttributes().getDirtyAttributes();
          if (!set.isEmpty()) {
+            // CraftBukkit start - Send scaled max health
+            if (this.entity instanceof ServerPlayer) {
+               ((ServerPlayer) this.entity).getBukkitEntity().injectScaledMaxHealth(set, false);
+            }
+            // CraftBukkit end
             this.broadcastAndSend(new ClientboundUpdateAttributesPacket(this.entity.getId(), set));
          }
 
