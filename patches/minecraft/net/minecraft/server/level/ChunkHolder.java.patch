--- a/net/minecraft/server/level/ChunkHolder.java
+++ b/net/minecraft/server/level/ChunkHolder.java
@@ -67,6 +_,7 @@
    public final ChunkHolder.PlayerProvider f_140016_;
    private boolean f_140017_;
    private boolean f_140018_;
+   LevelChunk currentlyLoading; // Forge: Used to bypass future chain when loading chunks.
    private CompletableFuture<Void> f_142981_ = CompletableFuture.completedFuture((Void)null);
 
    public ChunkHolder(ChunkPos p_142986_, int p_142987_, LevelHeightAccessor p_142988_, LevelLightEngine p_142989_, ChunkHolder.LevelChangeListener p_142990_, ChunkHolder.PlayerProvider p_142991_) {
@@ -464,6 +_,14 @@
          }
       };
    }
+
+   // CraftBukkit start
+   public LevelChunk getFullChunkUnchecked() {
+      CompletableFuture<Either<ChunkAccess, ChunkHolder.ChunkLoadingFailure>> statusFuture = this.m_140047_(ChunkStatus.f_62326_);
+      Either<ChunkAccess, ChunkHolder.ChunkLoadingFailure> either = (Either<ChunkAccess, ChunkHolder.ChunkLoadingFailure>) statusFuture.getNow(null);
+      return (either == null) ? null : (LevelChunk) either.left().orElse(null);
+   }
+   // CraftBukkit end
 
    static final class ChunkSaveDebug {
       private final Thread f_143023_;
