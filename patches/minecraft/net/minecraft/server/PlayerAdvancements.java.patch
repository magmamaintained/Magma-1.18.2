--- a/net/minecraft/server/PlayerAdvancements.java
+++ b/net/minecraft/server/PlayerAdvancements.java
@@ -61,7 +_,7 @@
    private final DataFixer dataFixer;
    private final PlayerList playerList;
    private final File file;
-   private final Map<Advancement, AdvancementProgress> advancements = Maps.newLinkedHashMap();
+   public final Map<Advancement, AdvancementProgress> advancements = Maps.newLinkedHashMap(); //Magma - private -> public
    private final Set<Advancement> visible = Sets.newLinkedHashSet();
    private final Set<Advancement> visibilityChanged = Sets.newLinkedHashSet();
    private final Set<Advancement> progressChanged = Sets.newLinkedHashSet();
@@ -157,7 +_,11 @@
                for(Entry<ResourceLocation, AdvancementProgress> entry : stream.collect(Collectors.toList())) {
                   Advancement advancement = p_136007_.getAdvancement(entry.getKey());
                   if (advancement == null) {
-                     LOGGER.warn("Ignored advancement '{}' in progress file {} - it doesn't exist anymore?", entry.getKey(), this.file);
+                     // CraftBukkit start
+                     if (entry.getKey().getNamespace().equals("minecraft")) {
+                        PlayerAdvancements.LOGGER.warn("Ignored advancement '{}' in progress file {} - it doesn't exist anymore?", entry.getKey(), this.file);
+                     }
+                     // CraftBukkit end
                   } else {
                      this.startProgress(advancement, entry.getValue());
                   }
@@ -181,11 +_,16 @@
       }
 
       this.checkForAutomaticTriggers(p_136007_);
+
+      if (net.minecraftforge.common.ForgeConfig.SERVER.fixAdvancementLoading.get())
+         net.minecraftforge.common.AdvancementLoadFix.loadVisibility(this, this.visible, this.visibilityChanged, this.advancements, this.progressChanged, this::shouldBeVisible);
+      else
       this.ensureAllVisible();
       this.registerListeners(p_136007_);
    }
 
    public void save() {
+      if (org.spigotmc.SpigotConfig.disableAdvancementSaving) return; // Spigot
       Map<ResourceLocation, AdvancementProgress> map = Maps.newHashMap();
 
       for(Entry<Advancement, AdvancementProgress> entry : this.advancements.entrySet()) {
@@ -239,6 +_,8 @@
    }
 
    public boolean award(Advancement p_135989_, String p_135990_) {
+      // Forge: don't grant advancements for fake players
+      if (this.player instanceof net.minecraftforge.common.util.FakePlayer) return false;
       boolean flag = false;
       AdvancementProgress advancementprogress = this.getOrStartProgress(p_135989_);
       boolean flag1 = advancementprogress.isDone();
@@ -247,10 +_,12 @@
          this.progressChanged.add(p_135989_);
          flag = true;
          if (!flag1 && advancementprogress.isDone()) {
+            this.player.level.getCraftServer().getPluginManager().callEvent(new org.bukkit.event.player.PlayerAdvancementDoneEvent(this.player.getBukkitEntity(), p_135989_.bukkit)); // CraftBukkit
             p_135989_.getRewards().grant(this.player);
             if (p_135989_.getDisplay() != null && p_135989_.getDisplay().shouldAnnounceChat() && this.player.level.getGameRules().getBoolean(GameRules.RULE_ANNOUNCE_ADVANCEMENTS)) {
                this.playerList.broadcastMessage(new TranslatableComponent("chat.type.advancement." + p_135989_.getDisplay().getFrame().getName(), this.player.getDisplayName(), p_135989_.getChatComponent()), ChatType.SYSTEM, Util.NIL_UUID);
             }
+            net.minecraftforge.common.ForgeHooks.onAdvancement(this.player, p_135989_);
          }
       }
 
