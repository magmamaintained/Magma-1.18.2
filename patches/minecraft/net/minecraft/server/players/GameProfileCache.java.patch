--- a/net/minecraft/server/players/GameProfileCache.java
+++ b/net/minecraft/server/players/GameProfileCache.java
@@ -4,44 +_,29 @@
 import com.google.common.collect.Lists;
 import com.google.common.collect.Maps;
 import com.google.common.io.Files;
-import com.google.gson.Gson;
-import com.google.gson.GsonBuilder;
-import com.google.gson.JsonArray;
-import com.google.gson.JsonElement;
-import com.google.gson.JsonObject;
-import com.google.gson.JsonParseException;
+import com.google.gson.*;
 import com.mojang.authlib.Agent;
 import com.mojang.authlib.GameProfile;
 import com.mojang.authlib.GameProfileRepository;
 import com.mojang.authlib.ProfileLookupCallback;
 import com.mojang.logging.LogUtils;
-import java.io.File;
-import java.io.FileNotFoundException;
-import java.io.IOException;
-import java.io.Reader;
-import java.io.Writer;
+import net.minecraft.Util;
+import net.minecraft.world.entity.player.Player;
+import org.slf4j.Logger;
+
+import javax.annotation.Nullable;
+import java.io.*;
 import java.nio.charset.StandardCharsets;
 import java.text.DateFormat;
 import java.text.ParseException;
 import java.text.SimpleDateFormat;
-import java.util.Calendar;
-import java.util.Comparator;
-import java.util.Date;
-import java.util.List;
-import java.util.Locale;
-import java.util.Map;
-import java.util.Optional;
-import java.util.UUID;
+import java.util.*;
 import java.util.concurrent.CompletableFuture;
 import java.util.concurrent.Executor;
 import java.util.concurrent.atomic.AtomicLong;
 import java.util.concurrent.atomic.AtomicReference;
 import java.util.function.Consumer;
 import java.util.stream.Stream;
-import javax.annotation.Nullable;
-import net.minecraft.Util;
-import net.minecraft.world.entity.player.Player;
-import org.slf4j.Logger;
 
 public class GameProfileCache {
    private static final Logger f_10964_ = LogUtils.getLogger();
@@ -115,7 +_,7 @@
       Date date = calendar.getTime();
       GameProfileCache.GameProfileInfo gameprofilecache$gameprofileinfo = new GameProfileCache.GameProfileInfo(p_10992_, date);
       this.m_10979_(gameprofilecache$gameprofileinfo);
-      this.m_11006_();
+      if( !org.spigotmc.SpigotConfig.saveUserCacheOnStopOnly ) this.m_11006_(); // Spigot - skip saving if disabled
    }
 
    private long m_11008_() {
@@ -138,14 +_,14 @@
          gameprofilecache$gameprofileinfo.m_11029_(this.m_11008_());
          optional = Optional.of(gameprofilecache$gameprofileinfo.m_11028_());
       } else {
-         optional = m_10993_(this.f_10968_, s);
+         optional = m_10993_(this.f_10968_, s); // Spigot - use correct case for offline players
          if (optional.isPresent()) {
             this.m_10991_(optional.get());
             flag = false;
          }
       }
 
-      if (flag) {
+      if (flag && !org.spigotmc.SpigotConfig.saveUserCacheOnStopOnly) { // Spigot - skip saving if disabled
          this.m_11006_();
       }
 
@@ -240,6 +_,11 @@
 
          return (List<GameProfileCache.GameProfileInfo>)object;
       } catch (FileNotFoundException filenotfoundexception) {
+         // Spigot Start
+      } catch (com.google.gson.JsonSyntaxException | NullPointerException ex) {
+         GameProfileCache.f_10964_.warn( "Usercache.json is corrupted or has bad formatting. Deleting it to prevent further issues." );
+         this.f_10970_.delete();
+         // Spigot End
       } catch (JsonParseException | IOException ioexception) {
          f_10964_.warn("Failed to load profile cache {}", this.f_10970_, ioexception);
       }
@@ -250,7 +_,7 @@
    public void m_11006_() {
       JsonArray jsonarray = new JsonArray();
       DateFormat dateformat = m_11009_();
-      this.m_10977_(1000).forEach((p_143962_) -> {
+      this.m_10977_(org.spigotmc.SpigotConfig.userCacheCap).forEach((p_143962_) -> { // Spigot
          jsonarray.add(m_10981_(p_143962_, dateformat));
       });
       String s = this.f_10969_.toJson((JsonElement)jsonarray);
