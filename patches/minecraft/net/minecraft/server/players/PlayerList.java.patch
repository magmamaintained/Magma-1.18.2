--- a/net/minecraft/server/players/PlayerList.java
+++ b/net/minecraft/server/players/PlayerList.java
@@ -9,17 +_,11 @@
 import io.netty.buffer.Unpooled;
 import java.io.File;
 import java.net.SocketAddress;
-import java.nio.file.Path;
 import java.text.SimpleDateFormat;
-import java.util.List;
-import java.util.Map;
-import java.util.Optional;
-import java.util.Set;
-import java.util.UUID;
+import java.util.*;
 import java.util.function.Function;
 import javax.annotation.Nullable;
 import net.minecraft.ChatFormatting;
-import net.minecraft.FileUtil;
 import net.minecraft.Util;
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.RegistryAccess;
@@ -61,9 +_,11 @@
 import net.minecraft.server.MinecraftServer;
 import net.minecraft.server.PlayerAdvancements;
 import net.minecraft.server.ServerScoreboard;
+import net.minecraft.server.dedicated.DedicatedServer;
 import net.minecraft.server.level.ServerLevel;
 import net.minecraft.server.level.ServerPlayer;
 import net.minecraft.server.network.ServerGamePacketListenerImpl;
+import net.minecraft.server.network.ServerLoginPacketListenerImpl;
 import net.minecraft.sounds.SoundEvents;
 import net.minecraft.sounds.SoundSource;
 import net.minecraft.stats.ServerStatsCounter;
@@ -90,6 +_,13 @@
 import net.minecraft.world.scores.Objective;
 import net.minecraft.world.scores.PlayerTeam;
 import net.minecraft.world.scores.Team;
+import org.bukkit.Location;
+import org.bukkit.craftbukkit.v1_18_R2.CraftServer;
+import org.bukkit.craftbukkit.v1_18_R2.command.ColouredConsoleSender;
+import org.bukkit.craftbukkit.v1_18_R2.command.ConsoleCommandCompleter;
+import org.bukkit.craftbukkit.v1_18_R2.util.CraftChatMessage;
+import org.bukkit.event.player.PlayerLoginEvent;
+import org.magmafoundation.magma.forge.ForgeInject;
 import org.slf4j.Logger;
 
 public abstract class PlayerList {
@@ -118,8 +_,18 @@
    private boolean f_11209_;
    private static final boolean f_143988_ = false;
    private int f_11210_;
+   private final List<ServerPlayer> playersView = java.util.Collections.unmodifiableList(f_11196_);
+
+   // CraftBukkit start
+   private CraftServer cserver;
 
    public PlayerList(MinecraftServer p_203842_, RegistryAccess.Frozen p_203843_, PlayerDataStorage p_203844_, int p_203845_) {
+      this.cserver = p_203842_.server = new CraftServer((DedicatedServer) p_203842_, this); // CraftBukkit
+      p_203842_.console = ColouredConsoleSender.getInstance();
+      p_203842_.reader.addCompleter(new ConsoleCommandCompleter(p_203842_.server));
+      // CraftBukkit end
+
+      ForgeInject.init(); //MAGMA - Forge Inject - Initialize
       this.f_11195_ = p_203842_;
       this.f_11206_ = p_203843_;
       this.f_11193_ = p_203845_;
@@ -153,6 +_,7 @@
       LevelData leveldata = serverlevel1.m_6106_();
       p_11263_.m_143427_(compoundtag);
       ServerGamePacketListenerImpl servergamepacketlistenerimpl = new ServerGamePacketListenerImpl(this.f_11195_, p_11262_, p_11263_);
+      net.minecraftforge.network.NetworkHooks.sendMCRegistryPackets(p_11262_, "PLAY_TO_CLIENT");
       GameRules gamerules = serverlevel1.m_46469_();
       boolean flag = gamerules.m_46207_(GameRules.f_46156_);
       boolean flag1 = gamerules.m_46207_(GameRules.f_46145_);
@@ -161,6 +_,7 @@
       servergamepacketlistenerimpl.m_141995_(new ClientboundChangeDifficultyPacket(leveldata.m_5472_(), leveldata.m_5474_()));
       servergamepacketlistenerimpl.m_141995_(new ClientboundPlayerAbilitiesPacket(p_11263_.m_150110_()));
       servergamepacketlistenerimpl.m_141995_(new ClientboundSetCarriedItemPacket(p_11263_.m_150109_().f_35977_));
+      net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.OnDatapackSyncEvent(this, p_11263_));
       servergamepacketlistenerimpl.m_141995_(new ClientboundUpdateRecipesPacket(this.f_11195_.m_129894_().m_44051_()));
       servergamepacketlistenerimpl.m_141995_(new ClientboundUpdateTagsPacket(TagNetworkSerialization.m_203950_(this.f_11206_)));
       this.m_11289_(p_11263_);
@@ -177,7 +_,7 @@
 
       this.m_11264_(mutablecomponent.m_130940_(ChatFormatting.YELLOW), ChatType.SYSTEM, Util.f_137441_);
       servergamepacketlistenerimpl.m_9774_(p_11263_.m_20185_(), p_11263_.m_20186_(), p_11263_.m_20189_(), p_11263_.m_146908_(), p_11263_.m_146909_());
-      this.f_11196_.add(p_11263_);
+      this.addPlayer(p_11263_);
       this.f_11197_.put(p_11263_.m_142081_(), p_11263_);
       this.m_11268_(new ClientboundPlayerInfoPacket(ClientboundPlayerInfoPacket.Action.ADD_PLAYER, p_11263_));
 
@@ -232,6 +_,7 @@
       }
 
       p_11263_.m_143429_();
+      net.minecraftforge.event.ForgeEventFactory.firePlayerLoggedIn( p_11263_ );
    }
 
    public void m_11273_(ServerScoreboard p_11274_, ServerPlayer p_11275_) {
@@ -292,6 +_,7 @@
          compoundtag1 = compoundtag;
          p_11225_.m_20258_(compoundtag);
          f_11188_.debug("loading single player");
+         net.minecraftforge.event.ForgeEventFactory.firePlayerLoadingEvent(p_11225_, this.f_11204_, p_11225_.m_142081_().toString());
       } else {
          compoundtag1 = this.f_11204_.m_78435_(p_11225_);
       }
@@ -300,6 +_,7 @@
    }
 
    protected void m_6765_(ServerPlayer p_11277_) {
+      if (p_11277_.f_8906_ == null) return;
       this.f_11204_.m_78433_(p_11277_);
       ServerStatsCounter serverstatscounter = this.f_11202_.get(p_11277_.m_142081_());
       if (serverstatscounter != null) {
@@ -314,6 +_,7 @@
    }
 
    public void m_11286_(ServerPlayer p_11287_) {
+      net.minecraftforge.event.ForgeEventFactory.firePlayerLoggedOut(p_11287_);
       ServerLevel serverlevel = p_11287_.m_183503_();
       p_11287_.m_36220_(Stats.f_12989_);
       this.m_6765_(p_11287_);
@@ -345,51 +_,96 @@
    }
 
    @Nullable
-   public Component m_6418_(SocketAddress p_11257_, GameProfile p_11258_) {
-      if (this.f_11198_.m_11406_(p_11258_)) {
+   // CraftBukkit start - Whole method, SocketAddress to LoginListener, added hostname to signature, return ServerPlayer
+   public ServerPlayer canPlayerLogin(ServerLoginPacketListenerImpl serverLoginPacketListener, GameProfile p_11258_, String hostname) {
+      TranslatableComponent chatmessage;
+
+      // Moved from processLogin
+      UUID uuid = Player.m_36198_(p_11258_);
+      List<ServerPlayer> list = Lists.newArrayList();
+
+
+      for (ServerPlayer value : this.f_11196_) {
+         if (value.m_142081_().equals(uuid)) {
+            list.add(value);
+         }
+      }
+
+      for (ServerPlayer serverPlayer : list) {
+         m_6765_(serverPlayer); // CraftBukkit - Force the player's inventory to be saved
+         serverPlayer.f_8906_.m_9942_(new TranslatableComponent("multiplayer.disconnect.duplicate_login", new Object[0]));
+      }
+
+      // Instead of kicking then returning, we need to store the kick reason
+      // in the event, check with plugins to see if it's ok, and THEN kick
+      // depending on the outcome.
+      SocketAddress socketaddress = serverLoginPacketListener.f_10013_.m_129523_();
+
+      ServerPlayer entity = new ServerPlayer(this.f_11195_, this.f_11195_.m_129880_(Level.f_46428_), p_11258_);
+      org.bukkit.entity.Player player = entity.getBukkitEntity();
+      PlayerLoginEvent event = new PlayerLoginEvent(player, hostname, ((java.net.InetSocketAddress) socketaddress).getAddress());
+
+      if (m_11295_().m_11406_(p_11258_) && !m_11295_().m_11388_(p_11258_).m_7524_()) {
          UserBanListEntry userbanlistentry = this.f_11198_.m_11388_(p_11258_);
-         MutableComponent mutablecomponent1 = new TranslatableComponent("multiplayer.disconnect.banned.reason", userbanlistentry.m_10962_());
+         chatmessage = new TranslatableComponent("multiplayer.disconnect.banned.reason", userbanlistentry.m_10962_());
          if (userbanlistentry.m_10961_() != null) {
-            mutablecomponent1.m_7220_(new TranslatableComponent("multiplayer.disconnect.banned.expiration", f_11194_.format(userbanlistentry.m_10961_())));
+            chatmessage.m_7220_(new TranslatableComponent("multiplayer.disconnect.banned.expiration", f_11194_.format(userbanlistentry.m_10961_())));
          }
 
-         return mutablecomponent1;
+         // return mutablecomponent1;
+         event.disallow(PlayerLoginEvent.Result.KICK_BANNED, CraftChatMessage.fromComponent(chatmessage));
       } else if (!this.m_5764_(p_11258_)) {
-         return new TranslatableComponent("multiplayer.disconnect.not_whitelisted");
-      } else if (this.f_11199_.m_11041_(p_11257_)) {
-         IpBanListEntry ipbanlistentry = this.f_11199_.m_11043_(p_11257_);
+         chatmessage = new TranslatableComponent("multiplayer.disconnect.not_whitelisted");
+         event.disallow(PlayerLoginEvent.Result.KICK_WHITELIST, CraftChatMessage.fromComponent(chatmessage));
+      } else if (m_11299_().m_11041_(socketaddress) && !m_11299_().m_11043_(socketaddress).m_7524_()) {
+         IpBanListEntry ipbanlistentry = this.f_11199_.m_11043_(socketaddress);
          MutableComponent mutablecomponent = new TranslatableComponent("multiplayer.disconnect.banned_ip.reason", ipbanlistentry.m_10962_());
          if (ipbanlistentry.m_10961_() != null) {
             mutablecomponent.m_7220_(new TranslatableComponent("multiplayer.disconnect.banned_ip.expiration", f_11194_.format(ipbanlistentry.m_10961_())));
          }
 
-         return mutablecomponent;
+         // return mutablecomponent;
+         event.disallow(PlayerLoginEvent.Result.KICK_BANNED, CraftChatMessage.fromComponent(mutablecomponent));
       } else {
-         return this.f_11196_.size() >= this.f_11193_ && !this.m_5765_(p_11258_) ? new TranslatableComponent("multiplayer.disconnect.server_full") : null;
-      }
+         // return this.players.size() >= this.maxPlayers && !this.canBypassPlayerLimit(p_11258_) ? new TranslatableComponent("multiplayer.disconnect.server_full") : null;
+         if (this.f_11196_.size() >= this.f_11193_ && !this.m_5765_(p_11258_)) {
+            event.disallow(PlayerLoginEvent.Result.KICK_FULL, "The server is full");
+         }
+      }
+
+      cserver.getPluginManager().callEvent(event);
+      if (event.getResult() != PlayerLoginEvent.Result.ALLOWED) {
+         serverLoginPacketListener.disconnect(event.getKickMessage());
+         return null;
+      }
+      return entity;
    }
 
-   public ServerPlayer m_11300_(GameProfile p_11301_) {
-      UUID uuid = Player.m_36198_(p_11301_);
+   public ServerPlayer getPlayerForLogin(GameProfile p_11301_, ServerPlayer player) { // CraftBukkit - added ServerPlayer
+       /* CraftBukkit startMoved up
+      UUID uuid = Player.createPlayerUUID(p_11301_);
       List<ServerPlayer> list = Lists.newArrayList();
 
-      for(int i = 0; i < this.f_11196_.size(); ++i) {
-         ServerPlayer serverplayer = this.f_11196_.get(i);
-         if (serverplayer.m_142081_().equals(uuid)) {
+      for(int i = 0; i < this.players.size(); ++i) {
+         ServerPlayer serverplayer = this.players.get(i);
+         if (serverplayer.getUUID().equals(uuid)) {
             list.add(serverplayer);
          }
       }
 
-      ServerPlayer serverplayer2 = this.f_11197_.get(p_11301_.getId());
+      ServerPlayer serverplayer2 = this.playersByUUID.get(p_11301_.getId());
       if (serverplayer2 != null && !list.contains(serverplayer2)) {
          list.add(serverplayer2);
       }
 
       for(ServerPlayer serverplayer1 : list) {
-         serverplayer1.f_8906_.m_9942_(new TranslatableComponent("multiplayer.disconnect.duplicate_login"));
+         serverplayer1.connection.disconnect(new TranslatableComponent("multiplayer.disconnect.duplicate_login"));
       }
 
-      return new ServerPlayer(this.f_11195_, this.f_11195_.m_129783_(), p_11301_);
+      return new ServerPlayer(this.server, this.server.overworld(), p_11301_);
+        */
+      return player;
+      // CraftBukkit end
    }
 
    public ServerPlayer m_11236_(ServerPlayer p_11237_, boolean p_11238_) {
@@ -450,10 +_,11 @@
       this.m_11229_(serverplayer, serverlevel1);
       this.m_11289_(serverplayer);
       serverlevel1.m_8845_(serverplayer);
-      this.f_11196_.add(serverplayer);
+      this.addPlayer(serverplayer);
       this.f_11197_.put(serverplayer.m_142081_(), serverplayer);
       serverplayer.m_143429_();
       serverplayer.m_21153_(serverplayer.m_21223_());
+      net.minecraftforge.event.ForgeEventFactory.firePlayerRespawnEvent(serverplayer, p_11238_);
       if (flag2) {
          serverplayer.f_8906_.m_141995_(new ClientboundSoundPacket(SoundEvents.f_12377_, SoundSource.BLOCKS, (double)blockpos.m_123341_(), (double)blockpos.m_123342_(), (double)blockpos.m_123343_(), 1.0F, 1.0F));
       }
@@ -538,6 +_,7 @@
    }
 
    public void m_5749_(GameProfile p_11254_) {
+      if (net.minecraftforge.event.ForgeEventFactory.onPermissionChanged(p_11254_, this.f_11195_.m_7022_(), this)) return;
       this.f_11200_.m_11381_(new ServerOpListEntry(p_11254_, this.f_11195_.m_7022_(), this.f_11200_.m_11351_(p_11254_)));
       ServerPlayer serverplayer = this.m_11259_(p_11254_.getId());
       if (serverplayer != null) {
@@ -547,6 +_,7 @@
    }
 
    public void m_5750_(GameProfile p_11281_) {
+      if (net.minecraftforge.event.ForgeEventFactory.onPermissionChanged(p_11281_, 0, this)) return;
       this.f_11200_.m_11393_(p_11281_);
       ServerPlayer serverplayer = this.m_11259_(p_11281_.getId());
       if (serverplayer != null) {
@@ -728,22 +_,27 @@
 
    }
 
-   public ServerStatsCounter m_11239_(Player p_11240_) {
-      UUID uuid = p_11240_.m_142081_();
-      ServerStatsCounter serverstatscounter = this.f_11202_.get(uuid);
+   // CraftBukkit start
+   public ServerStatsCounter getPlayerStats(ServerPlayer p_11240_) {
+      ServerStatsCounter serverstatisticmanager = p_11240_.m_8951_();
+      return serverstatisticmanager == null ? getPlayerStats(p_11240_.m_142081_(), p_11240_.m_5446_().getString()) : serverstatisticmanager;
+   }
+
+   public ServerStatsCounter getPlayerStats(UUID uuid, String displayName) {
+      ServerPlayer player = m_11259_(uuid);
+      ServerStatsCounter serverstatscounter = player == null ? null : (ServerStatsCounter) player.m_8951_();
       if (serverstatscounter == null) {
          File file1 = this.f_11195_.m_129843_(LevelResource.f_78175_).toFile();
          File file2 = new File(file1, uuid + ".json");
          if (!file2.exists()) {
-            File file3 = new File(file1, p_11240_.m_7755_().getString() + ".json");
-            Path path = file3.toPath();
-            if (FileUtil.m_133728_(path) && FileUtil.m_133734_(path) && path.startsWith(file1.getPath()) && file3.isFile()) {
+            File file3 = new File(file1, displayName + ".json"); // CraftBukkit
+            if(file3.exists() && file3.isFile()) {
                file3.renameTo(file2);
             }
          }
 
          serverstatscounter = new ServerStatsCounter(this.f_11195_, file2);
-         this.f_11202_.put(uuid, serverstatscounter);
+        // this.stats.put(uuid, serverstatscounter);
       }
 
       return serverstatscounter;
@@ -759,6 +_,8 @@
          this.f_11203_.put(uuid, playeradvancements);
       }
 
+      // Forge: don't overwrite active player with a fake one.
+      if (!(p_11297_ instanceof net.minecraftforge.common.util.FakePlayer))
       playeradvancements.m_135979_(p_11297_);
       return playeradvancements;
    }
@@ -788,7 +_,7 @@
    }
 
    public List<ServerPlayer> m_11314_() {
-      return this.f_11196_;
+      return this.playersView; //Unmodifiable view, we don't want people removing things without us knowing.
    }
 
    @Nullable
@@ -805,6 +_,7 @@
          playeradvancements.m_135981_(this.f_11195_.m_129889_());
       }
 
+      net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.OnDatapackSyncEvent(this, null));
       this.m_11268_(new ClientboundUpdateTagsPacket(TagNetworkSerialization.m_203950_(this.f_11206_)));
       ClientboundUpdateRecipesPacket clientboundupdaterecipespacket = new ClientboundUpdateRecipesPacket(this.f_11195_.m_129894_().m_44051_());
 
@@ -818,4 +_,16 @@
    public boolean m_11316_() {
       return this.f_11209_;
    }
+
+   public boolean addPlayer(ServerPlayer player) {
+      return f_11196_.add(player);
+   }
+
+   public boolean removePlayer(ServerPlayer player) {
+       return this.f_11196_.remove(player);
+   }
+
+   // Magma Stub
+    public void respawn(ServerPlayer entity, ServerLevel toWorld, boolean b, Location to, boolean b1) {
+    }
 }
