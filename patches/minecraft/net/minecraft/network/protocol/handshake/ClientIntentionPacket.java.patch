--- a/net/minecraft/network/protocol/handshake/ClientIntentionPacket.java
+++ b/net/minecraft/network/protocol/handshake/ClientIntentionPacket.java
@@ -11,6 +_,10 @@
    public String hostName;
    public final int port;
    private final ConnectionProtocol intention;
+   private String fmlVersion = net.minecraftforge.network.NetworkConstants.NETVERSION;
+
+   private static final String EXTRA_DATA = "extraData";
+   private static final com.google.gson.Gson GSON = new com.google.gson.GsonBuilder().registerTypeAdapter(com.mojang.authlib.properties.PropertyMap.class, new com.mojang.authlib.properties.PropertyMap.Serializer()).create();
 
    public ClientIntentionPacket(String p_134726_, int p_134727_, ConnectionProtocol p_134728_) {
       this.protocolVersion = SharedConstants.getCurrentVersion().getProtocolVersion();
@@ -21,14 +_,36 @@
 
    public ClientIntentionPacket(FriendlyByteBuf p_179801_) {
       this.protocolVersion = p_179801_.readVarInt();
-      this.hostName = p_179801_.readUtf(255);
+      this.hostName = p_179801_.readUtf(Short.MAX_VALUE); // Spigot / Magma removed own init as var
       this.port = p_179801_.readUnsignedShort();
       this.intention = ConnectionProtocol.getById(p_179801_.readVarInt());
+      this.fmlVersion = net.minecraftforge.network.NetworkHooks.getFMLVersion(hostName);
+      //this.hostName = hostName.split("\0")[0]; // Magma moved to [ServerHandshakePacketListenerImpl.java#L93]
+      //Magma start - add Velocity support
+      if (org.spigotmc.SpigotConfig.bungee && !java.util.Objects.equals(this.fmlVersion, net.minecraftforge.network.NetworkConstants.NETVERSION)) {
+         String[] split = this.hostName.split("\0");
+         if (split.length == 4) {
+            com.mojang.authlib.properties.PropertyMap properties = GSON.fromJson(split[3], com.mojang.authlib.properties.PropertyMap.class);
+            for (java.util.Map.Entry<String, com.mojang.authlib.properties.Property> property : properties.entries()) {
+               if (property.getKey().equalsIgnoreCase("forgeClient")) {
+                  if (property.getValue().getValue().equalsIgnoreCase(net.minecraftforge.network.NetworkConstants.NETVERSION)) {
+                     this.fmlVersion = net.minecraftforge.network.NetworkConstants.NETVERSION;
+                  }
+               }
+
+               if (java.util.Objects.equals(property.getValue().getName(), EXTRA_DATA)) {
+                  String extraData = property.getValue().getValue().replace("\1", "\0");
+                  this.fmlVersion = net.minecraftforge.network.NetworkHooks.getFMLVersion(split[0] + extraData);
+               }
+            }
+         }
+      }
+      //Magma end
    }
 
    public void write(FriendlyByteBuf p_134737_) {
       p_134737_.writeVarInt(this.protocolVersion);
-      p_134737_.writeUtf(this.hostName);
+      p_134737_.writeUtf(this.hostName + "\0"+ net.minecraftforge.network.NetworkConstants.NETVERSION+"\0");
       p_134737_.writeShort(this.port);
       p_134737_.writeVarInt(this.intention.getId());
    }
@@ -51,5 +_,9 @@
 
    public int getPort() {
       return this.port;
+   }
+
+   public String getFMLVersion() {
+      return this.fmlVersion;
    }
 }
