--- a/net/minecraft/network/FriendlyByteBuf.java
+++ b/net/minecraft/network/FriendlyByteBuf.java
@@ -14,6 +_,20 @@
 import io.netty.util.ByteProcessor;
 import it.unimi.dsi.fastutil.ints.IntArrayList;
 import it.unimi.dsi.fastutil.ints.IntList;
+import net.minecraft.core.BlockPos;
+import net.minecraft.core.Direction;
+import net.minecraft.core.SectionPos;
+import net.minecraft.nbt.*;
+import net.minecraft.network.chat.Component;
+import net.minecraft.resources.ResourceLocation;
+import net.minecraft.world.item.Item;
+import net.minecraft.world.item.ItemStack;
+import net.minecraft.world.level.ChunkPos;
+import net.minecraft.world.phys.BlockHitResult;
+import net.minecraft.world.phys.Vec3;
+import org.bukkit.craftbukkit.v1_18_R2.inventory.CraftItemStack;
+
+import javax.annotation.Nullable;
 import java.io.IOException;
 import java.io.InputStream;
 import java.io.OutputStream;
@@ -24,35 +_,13 @@
 import java.nio.channels.ScatteringByteChannel;
 import java.nio.charset.Charset;
 import java.nio.charset.StandardCharsets;
-import java.util.BitSet;
-import java.util.Collection;
-import java.util.Date;
-import java.util.List;
-import java.util.Map;
-import java.util.Optional;
-import java.util.UUID;
+import java.util.*;
 import java.util.function.BiConsumer;
 import java.util.function.Consumer;
 import java.util.function.Function;
 import java.util.function.IntFunction;
-import javax.annotation.Nullable;
-import net.minecraft.core.BlockPos;
-import net.minecraft.core.Direction;
-import net.minecraft.core.SectionPos;
-import net.minecraft.nbt.CompoundTag;
-import net.minecraft.nbt.NbtAccounter;
-import net.minecraft.nbt.NbtIo;
-import net.minecraft.nbt.NbtOps;
-import net.minecraft.nbt.Tag;
-import net.minecraft.network.chat.Component;
-import net.minecraft.resources.ResourceLocation;
-import net.minecraft.world.item.Item;
-import net.minecraft.world.item.ItemStack;
-import net.minecraft.world.level.ChunkPos;
-import net.minecraft.world.phys.BlockHitResult;
-import net.minecraft.world.phys.Vec3;
 
-public class FriendlyByteBuf extends ByteBuf {
+public class FriendlyByteBuf extends ByteBuf implements net.minecraftforge.common.extensions.IForgeFriendlyByteBuf {
    private static final int f_178335_ = 5;
    private static final int f_178336_ = 10;
    private static final int f_178337_ = 2097152;
@@ -439,7 +_,16 @@
    }
 
    public FriendlyByteBuf m_130055_(ItemStack p_130056_) {
-      if (p_130056_.m_41619_()) {
+      return writeItemStack(p_130056_, true);
+   }
+
+   /**
+    * Most ItemStack serialization is Server to Client,and doesn't need to know the FULL tag details.
+    * One exception is items from the creative menu, which must be sent from Client to Server with their full NBT.
+    * If you want to send the FULL tag set limitedTag to false
+    */
+   public FriendlyByteBuf writeItemStack(ItemStack p_130056_, boolean limitedTag) {
+      if (p_130056_.m_41619_() || p_130056_.m_41720_() == null) { // CraftBukkit - NPE fix itemstack.getItem()
          this.writeBoolean(false);
       } else {
          this.writeBoolean(true);
@@ -447,8 +_,12 @@
          this.m_130130_(Item.m_41393_(item));
          this.writeByte(p_130056_.m_41613_());
          CompoundTag compoundtag = null;
-         if (item.m_41465_() || item.m_41468_()) {
-            compoundtag = p_130056_.m_41783_();
+         if (item.isDamageable(p_130056_) || item.m_41468_()) {
+            // Spigot start - filter
+            p_130056_ = p_130056_.m_41777_();
+            CraftItemStack.setItemMeta(p_130056_, CraftItemStack.getItemMeta(p_130056_));
+            // Spigot end
+            compoundtag = limitedTag ? p_130056_.getShareTag() : p_130056_.m_41783_();
          }
 
          this.m_130079_(compoundtag);
@@ -464,7 +_,12 @@
          int i = this.m_130242_();
          int j = this.readByte();
          ItemStack itemstack = new ItemStack(Item.m_41445_(i), j);
-         itemstack.m_41751_(this.m_130260_());
+         itemstack.readShareTag(this.m_130260_());
+         // CraftBukkit start
+         if (itemstack.m_41783_() != null) {
+            CraftItemStack.setItemMeta(itemstack, CraftItemStack.getItemMeta(itemstack));
+         }
+         // CraftBukkit end
          return itemstack;
       }
    }
