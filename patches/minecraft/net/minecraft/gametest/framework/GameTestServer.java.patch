--- a/net/minecraft/gametest/framework/GameTestServer.java
+++ b/net/minecraft/gametest/framework/GameTestServer.java
@@ -53,7 +_,7 @@
       p_177615_.getRule(GameRules.RULE_DOMOBSPAWNING).set(false, (MinecraftServer)null);
       p_177615_.getRule(GameRules.RULE_WEATHER_CYCLE).set(false, (MinecraftServer)null);
    });
-   private static final LevelSettings TEST_SETTINGS = new LevelSettings("Test Level", GameType.CREATIVE, false, Difficulty.NORMAL, true, TEST_GAME_RULES, DataPackConfig.DEFAULT);
+   private static final LevelSettings TEST_SETTINGS = new LevelSettings("Test Level", GameType.CREATIVE, false, Difficulty.NORMAL, true, TEST_GAME_RULES, DataPackConfig.DEFAULT, Lifecycle.experimental());
    @Nullable
    private MultipleTestTracker testTracker;
 
@@ -93,12 +_,13 @@
    public boolean initServer() {
       this.setPlayerList(new PlayerList(this, this.registryAccess(), this.playerDataStorage, 1) {
       });
-      this.loadLevel();
+      if (!net.minecraftforge.server.ServerLifecycleHooks.handleServerAboutToStart(this)) return false;
+      this.loadLevel(); // Magma
       ServerLevel serverlevel = this.overworld();
       serverlevel.setDefaultSpawnPos(this.spawnPos, 0.0F);
       int i = 20000000;
       serverlevel.setWeatherParameters(20000000, 20000000, false, false);
-      return true;
+      return net.minecraftforge.server.ServerLifecycleHooks.handleServerStarting(this);
    }
 
    public void tickServer(BooleanSupplier p_177619_) {
@@ -200,6 +_,11 @@
 
    public boolean shouldInformAdmins() {
       return false;
+   }
+
+   @Override
+   public org.bukkit.command.CommandSender getBukkitSender(net.minecraft.commands.CommandSourceStack wrapper) {
+      return console;
    }
 
    public boolean isSingleplayerOwner(GameProfile p_177617_) {
