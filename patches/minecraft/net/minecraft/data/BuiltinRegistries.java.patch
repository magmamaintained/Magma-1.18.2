--- a/net/minecraft/data/BuiltinRegistries.java
+++ b/net/minecraft/data/BuiltinRegistries.java
@@ -52,7 +_,7 @@
       return ProcessorLists.ZOMBIE_PLAINS;
    });
    public static final Registry<StructureTemplatePool> TEMPLATE_POOL = registerSimple(Registry.TEMPLATE_POOL_REGISTRY, Pools::bootstrap);
-   public static final Registry<Biome> BIOME = registerSimple(Registry.BIOME_REGISTRY, Biomes::bootstrap);
+   @Deprecated public static final Registry<Biome> BIOME = forge(Registry.BIOME_REGISTRY, Biomes::bootstrap);
    public static final Registry<NormalNoise.NoiseParameters> NOISE = registerSimple(Registry.NOISE_REGISTRY, NoiseData::bootstrap);
    public static final Registry<DensityFunction> DENSITY_FUNCTION = registerSimple(Registry.DENSITY_FUNCTION_REGISTRY, NoiseRouterData::bootstrap);
    public static final Registry<NoiseGeneratorSettings> NOISE_GENERATOR_SETTINGS = registerSimple(Registry.NOISE_GENERATOR_SETTINGS_REGISTRY, NoiseGeneratorSettings::bootstrap);
@@ -60,6 +_,10 @@
 
    private static <T> Registry<T> registerSimple(ResourceKey<? extends Registry<T>> p_123894_, Supplier<? extends Holder<? extends T>> p_123895_) {
       return registerSimple(p_123894_, Lifecycle.stable(), p_123895_);
+   }
+
+   private static <T extends net.minecraftforge.registries.IForgeRegistryEntry<T>> Registry<T> forge(ResourceKey<? extends Registry<T>> key, Supplier<? extends Holder<? extends T>> holderSupplier) {
+      return internalRegister(key, net.minecraftforge.registries.GameData.getWrapper(key, Lifecycle.stable()), holderSupplier, Lifecycle.stable());
    }
 
    private static <T> Registry<T> registerSimple(ResourceKey<? extends Registry<T>> p_123885_, Lifecycle p_123886_, Supplier<? extends Holder<? extends T>> p_123887_) {
